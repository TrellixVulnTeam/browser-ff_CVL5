//
// Automatically generated by ipdlc.
// Edit at your own risk
//


#include "mozilla/dom/ServiceWorkerConfiguration.h"

#include "ipc/IPCMessageUtils.h"
#include "nsIFile.h"
#include "mozilla/ipc/Endpoint.h"
#include "mozilla/ipc/ProtocolMessageUtils.h"
#include "mozilla/ipc/ProtocolUtils.h"
#include "mozilla/ipc/ShmemMessageUtils.h"
#include "mozilla/ipc/TaintingIPCUtils.h"


//-----------------------------------------------------------------------------
// Method definitions for the IPDL type |struct ServiceWorkerConfiguration|
//
namespace mozilla {
namespace dom {
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace ipc {
auto IPDLParamTraits<mozilla::dom::ServiceWorkerConfiguration>::Write(
        IPC::Message* aMsg,
        mozilla::ipc::IProtocol* aActor,
        const paramType& aVar) -> void
{
    WriteIPDLParam(aMsg, aActor, (aVar).serviceWorkerRegistrations());
    // Sentinel = 'serviceWorkerRegistrations'
    (aMsg)->WriteSentinel(2443447002);
}

auto IPDLParamTraits<mozilla::dom::ServiceWorkerConfiguration>::Read(
        const IPC::Message* aMsg,
        PickleIterator* aIter,
        mozilla::ipc::IProtocol* aActor,
        paramType* aVar) -> bool
{
    if ((!(ReadIPDLParam(aMsg, aIter, aActor, (&((aVar)->serviceWorkerRegistrations())))))) {
        aActor->FatalError("Error deserializing 'serviceWorkerRegistrations' (ServiceWorkerRegistrationData[]) member of 'ServiceWorkerConfiguration'");
        return false;
    }
    // Sentinel = 'serviceWorkerRegistrations'
    if ((!((aMsg)->ReadSentinel(aIter, 2443447002)))) {
        mozilla::ipc::SentinelReadError("Error deserializing 'serviceWorkerRegistrations' (ServiceWorkerRegistrationData[]) member of 'ServiceWorkerConfiguration'");
        return false;
    }
    return true;
}

} // namespace ipc
} // namespace mozilla
