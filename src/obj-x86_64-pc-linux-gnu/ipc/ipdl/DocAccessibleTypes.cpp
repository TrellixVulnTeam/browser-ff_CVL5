//
// Automatically generated by ipdlc.
// Edit at your own risk
//


#include "mozilla/a11y/DocAccessibleTypes.h"

#include "ipc/IPCMessageUtils.h"
#include "nsIFile.h"
#include "mozilla/ipc/Endpoint.h"
#include "mozilla/ipc/ProtocolMessageUtils.h"
#include "mozilla/ipc/ProtocolUtils.h"
#include "mozilla/ipc/ShmemMessageUtils.h"
#include "mozilla/ipc/TaintingIPCUtils.h"


//-----------------------------------------------------------------------------
// Method definitions for the IPDL type |struct Attribute|
//
namespace mozilla {
namespace a11y {
} // namespace a11y
} // namespace mozilla

namespace mozilla {
namespace ipc {
auto IPDLParamTraits<mozilla::a11y::Attribute>::Write(
        IPC::Message* aMsg,
        mozilla::ipc::IProtocol* aActor,
        const paramType& aVar) -> void
{
    WriteIPDLParam(aMsg, aActor, (aVar).Name());
    // Sentinel = 'Name'
    (aMsg)->WriteSentinel(60686722);
    WriteIPDLParam(aMsg, aActor, (aVar).Value());
    // Sentinel = 'Value'
    (aMsg)->WriteSentinel(97124862);
}

auto IPDLParamTraits<mozilla::a11y::Attribute>::Read(
        const IPC::Message* aMsg,
        PickleIterator* aIter,
        mozilla::ipc::IProtocol* aActor,
        paramType* aVar) -> bool
{
    if ((!(ReadIPDLParam(aMsg, aIter, aActor, (&((aVar)->Name())))))) {
        aActor->FatalError("Error deserializing 'Name' (nsCString) member of 'Attribute'");
        return false;
    }
    // Sentinel = 'Name'
    if ((!((aMsg)->ReadSentinel(aIter, 60686722)))) {
        mozilla::ipc::SentinelReadError("Error deserializing 'Name' (nsCString) member of 'Attribute'");
        return false;
    }
    if ((!(ReadIPDLParam(aMsg, aIter, aActor, (&((aVar)->Value())))))) {
        aActor->FatalError("Error deserializing 'Value' (nsString) member of 'Attribute'");
        return false;
    }
    // Sentinel = 'Value'
    if ((!((aMsg)->ReadSentinel(aIter, 97124862)))) {
        mozilla::ipc::SentinelReadError("Error deserializing 'Value' (nsString) member of 'Attribute'");
        return false;
    }
    return true;
}

} // namespace ipc
} // namespace mozilla

//-----------------------------------------------------------------------------
// Method definitions for the IPDL type |struct TextAttributesRun|
//
namespace mozilla {
namespace a11y {
} // namespace a11y
} // namespace mozilla

namespace mozilla {
namespace ipc {
auto IPDLParamTraits<mozilla::a11y::TextAttributesRun>::Write(
        IPC::Message* aMsg,
        mozilla::ipc::IProtocol* aActor,
        const paramType& aVar) -> void
{
    WriteIPDLParam(aMsg, aActor, (aVar).Text());
    // Sentinel = 'Text'
    (aMsg)->WriteSentinel(65470886);
    WriteIPDLParam(aMsg, aActor, (aVar).TextAttributes());
    // Sentinel = 'TextAttributes'
    (aMsg)->WriteSentinel(713819597);
    (aMsg)->WriteBytes((&((aVar).ContainerID())), 8);
    // Sentinel = 'ContainerID'
    (aMsg)->WriteSentinel(432210993);
}

auto IPDLParamTraits<mozilla::a11y::TextAttributesRun>::Read(
        const IPC::Message* aMsg,
        PickleIterator* aIter,
        mozilla::ipc::IProtocol* aActor,
        paramType* aVar) -> bool
{
    if ((!(ReadIPDLParam(aMsg, aIter, aActor, (&((aVar)->Text())))))) {
        aActor->FatalError("Error deserializing 'Text' (nsString) member of 'TextAttributesRun'");
        return false;
    }
    // Sentinel = 'Text'
    if ((!((aMsg)->ReadSentinel(aIter, 65470886)))) {
        mozilla::ipc::SentinelReadError("Error deserializing 'Text' (nsString) member of 'TextAttributesRun'");
        return false;
    }
    if ((!(ReadIPDLParam(aMsg, aIter, aActor, (&((aVar)->TextAttributes())))))) {
        aActor->FatalError("Error deserializing 'TextAttributes' (Attribute[]) member of 'TextAttributesRun'");
        return false;
    }
    // Sentinel = 'TextAttributes'
    if ((!((aMsg)->ReadSentinel(aIter, 713819597)))) {
        mozilla::ipc::SentinelReadError("Error deserializing 'TextAttributes' (Attribute[]) member of 'TextAttributesRun'");
        return false;
    }
    if ((!((aMsg)->ReadBytesInto(aIter, (&((aVar)->ContainerID())), 8)))) {
        aActor->FatalError("Error bulk reading fields from uint64_t");
        return false;
    }
    // Sentinel = 'ContainerID'
    if ((!((aMsg)->ReadSentinel(aIter, 432210993)))) {
        mozilla::ipc::SentinelReadError("Error bulk reading fields from uint64_t");
        return false;
    }
    return true;
}

} // namespace ipc
} // namespace mozilla
