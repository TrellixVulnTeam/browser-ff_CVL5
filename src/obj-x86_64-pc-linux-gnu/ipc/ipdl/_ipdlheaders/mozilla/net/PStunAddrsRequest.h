//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PStunAddrsRequest_h
#define PStunAddrsRequest_h

#include "mozilla/Attributes.h"
#include "IPCMessageStart.h"
#include "mozilla/RefPtr.h"
#include "nsString.h"
#include "nsTArray.h"
#include "nsTHashtable.h"
#include "mozilla/MozPromise.h"
#include "mozilla/OperatorNewExtensions.h"
#include "mozilla/UniquePtr.h"
#include "mozilla/ipc/ByteBuf.h"
#include "mozilla/ipc/FileDescriptor.h"
#include "mozilla/ipc/ProtocolUtilsFwd.h"
#include "mozilla/ipc/Shmem.h"

namespace mozilla {
namespace net {
class PStunAddrsRequestParent;
} // namespace net
} // namespace mozilla
namespace mozilla {
namespace net {
class PStunAddrsRequestChild;
} // namespace net
} // namespace mozilla

//-----------------------------------------------------------------------------
// Code common to PStunAddrsRequestChild and PStunAddrsRequestParent
//
namespace mozilla {
namespace net {
namespace PStunAddrsRequest {

nsresult
CreateEndpoints(
        base::ProcessId aParentDestPid,
        base::ProcessId aChildDestPid,
        mozilla::ipc::Endpoint<mozilla::net::PStunAddrsRequestParent>* aParent,
        mozilla::ipc::Endpoint<mozilla::net::PStunAddrsRequestChild>* aChild);

enum MessageType {
    PStunAddrsRequestStart = PStunAddrsRequestMsgStart << 16,
    Msg_GetStunAddrs__ID,
    Msg_RegisterMDNSHostname__ID,
    Msg_QueryMDNSHostname__ID,
    Msg_UnregisterMDNSHostname__ID,
    Msg___delete____ID,
    Reply___delete____ID,
    Msg_OnMDNSQueryComplete__ID,
    Msg_OnStunAddrsAvailable__ID,
    PStunAddrsRequestEnd
};

IPC::Message*
Msg_GetStunAddrs(int32_t routingId);

IPC::Message*
Msg_RegisterMDNSHostname(int32_t routingId);

IPC::Message*
Msg_QueryMDNSHostname(int32_t routingId);

IPC::Message*
Msg_UnregisterMDNSHostname(int32_t routingId);

IPC::Message*
Msg___delete__(int32_t routingId);
IPC::Message*
Reply___delete__(int32_t routingId);

IPC::Message*
Msg_OnMDNSQueryComplete(int32_t routingId);

IPC::Message*
Msg_OnStunAddrsAvailable(int32_t routingId);



} // namespace PStunAddrsRequest
} // namespace net
} // namespace mozilla

#endif // ifndef PStunAddrsRequest_h
