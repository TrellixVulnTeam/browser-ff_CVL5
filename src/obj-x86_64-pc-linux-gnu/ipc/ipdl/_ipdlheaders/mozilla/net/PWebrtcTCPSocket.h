//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PWebrtcTCPSocket_h
#define PWebrtcTCPSocket_h

#include "mozilla/Attributes.h"
#include "IPCMessageStart.h"
#include "mozilla/RefPtr.h"
#include "nsString.h"
#include "nsTArray.h"
#include "nsTHashtable.h"
#include "mozilla/MozPromise.h"
#include "mozilla/OperatorNewExtensions.h"
#include "mozilla/UniquePtr.h"
#include "mozilla/ipc/ByteBuf.h"
#include "mozilla/ipc/FileDescriptor.h"
#include "mozilla/ipc/ProtocolUtilsFwd.h"
#include "mozilla/ipc/Shmem.h"
#include "mozilla/net/WebrtcProxyConfig.h"

namespace mozilla {
namespace net {
class PWebrtcTCPSocketParent;
} // namespace net
} // namespace mozilla
namespace mozilla {
namespace net {
class PWebrtcTCPSocketChild;
} // namespace net
} // namespace mozilla

//-----------------------------------------------------------------------------
// Code common to PWebrtcTCPSocketChild and PWebrtcTCPSocketParent
//
namespace mozilla {
namespace net {
namespace PWebrtcTCPSocket {

nsresult
CreateEndpoints(
        base::ProcessId aParentDestPid,
        base::ProcessId aChildDestPid,
        mozilla::ipc::Endpoint<mozilla::net::PWebrtcTCPSocketParent>* aParent,
        mozilla::ipc::Endpoint<mozilla::net::PWebrtcTCPSocketChild>* aChild);

enum MessageType {
    PWebrtcTCPSocketStart = PWebrtcTCPSocketMsgStart << 16,
    Msg_AsyncOpen__ID,
    Msg_Write__ID,
    Msg_Close__ID,
    Msg_OnClose__ID,
    Msg_OnConnected__ID,
    Msg_OnRead__ID,
    Msg___delete____ID,
    Reply___delete____ID,
    PWebrtcTCPSocketEnd
};

IPC::Message*
Msg_AsyncOpen(int32_t routingId);

IPC::Message*
Msg_Write(int32_t routingId);

IPC::Message*
Msg_Close(int32_t routingId);

IPC::Message*
Msg_OnClose(int32_t routingId);

IPC::Message*
Msg_OnConnected(int32_t routingId);

IPC::Message*
Msg_OnRead(int32_t routingId);

IPC::Message*
Msg___delete__(int32_t routingId);
IPC::Message*
Reply___delete__(int32_t routingId);



} // namespace PWebrtcTCPSocket
} // namespace net
} // namespace mozilla

#endif // ifndef PWebrtcTCPSocket_h
