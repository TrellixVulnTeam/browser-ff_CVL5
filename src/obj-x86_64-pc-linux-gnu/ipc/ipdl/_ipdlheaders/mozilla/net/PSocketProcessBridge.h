//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PSocketProcessBridge_h
#define PSocketProcessBridge_h

#include "mozilla/Attributes.h"
#include "IPCMessageStart.h"
#include "mozilla/RefPtr.h"
#include "nsString.h"
#include "nsTArray.h"
#include "nsTHashtable.h"
#include "mozilla/MozPromise.h"
#include "mozilla/OperatorNewExtensions.h"
#include "mozilla/UniquePtr.h"
#include "mozilla/ipc/ByteBuf.h"
#include "mozilla/ipc/FileDescriptor.h"
#include "mozilla/ipc/ProtocolUtilsFwd.h"
#include "mozilla/ipc/Shmem.h"

namespace mozilla {
namespace net {
class PSocketProcessBridgeParent;
} // namespace net
} // namespace mozilla
namespace mozilla {
namespace net {
class PSocketProcessBridgeChild;
} // namespace net
} // namespace mozilla

//-----------------------------------------------------------------------------
// Code common to PSocketProcessBridgeChild and PSocketProcessBridgeParent
//
namespace mozilla {
namespace net {
namespace PSocketProcessBridge {

nsresult
CreateEndpoints(
        base::ProcessId aParentDestPid,
        base::ProcessId aChildDestPid,
        mozilla::ipc::Endpoint<mozilla::net::PSocketProcessBridgeParent>* aParent,
        mozilla::ipc::Endpoint<mozilla::net::PSocketProcessBridgeChild>* aChild);

enum MessageType {
    PSocketProcessBridgeStart = PSocketProcessBridgeMsgStart << 16,
    Msg_InitBackground__ID,
    Msg_Test__ID,
    PSocketProcessBridgeEnd
};

IPC::Message*
Msg_InitBackground(int32_t routingId);

IPC::Message*
Msg_Test(int32_t routingId);



} // namespace PSocketProcessBridge
} // namespace net
} // namespace mozilla

#endif // ifndef PSocketProcessBridge_h
