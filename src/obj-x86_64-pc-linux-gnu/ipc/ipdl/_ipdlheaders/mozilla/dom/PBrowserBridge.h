//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PBrowserBridge_h
#define PBrowserBridge_h

#include "mozilla/Attributes.h"
#include "IPCMessageStart.h"
#include "mozilla/RefPtr.h"
#include "nsString.h"
#include "nsTArray.h"
#include "nsTHashtable.h"
#include "mozilla/MozPromise.h"
#include "mozilla/OperatorNewExtensions.h"
#include "mozilla/UniquePtr.h"
#include "mozilla/ipc/ByteBuf.h"
#include "mozilla/ipc/FileDescriptor.h"
#include "mozilla/ipc/ProtocolUtilsFwd.h"
#include "mozilla/ipc/Shmem.h"
#include "mozilla/dom/DOMTypes.h"

namespace mozilla {
namespace dom {
class PBrowserBridgeParent;
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
class PBrowserBridgeChild;
} // namespace dom
} // namespace mozilla

//-----------------------------------------------------------------------------
// Code common to PBrowserBridgeChild and PBrowserBridgeParent
//
namespace mozilla {
namespace dom {
namespace PBrowserBridge {

nsresult
CreateEndpoints(
        base::ProcessId aParentDestPid,
        base::ProcessId aChildDestPid,
        mozilla::ipc::Endpoint<mozilla::dom::PBrowserBridgeParent>* aParent,
        mozilla::ipc::Endpoint<mozilla::dom::PBrowserBridgeChild>* aChild);

enum MessageType {
    PBrowserBridgeStart = PBrowserBridgeMsgStart << 16,
    Msg_RequestFocus__ID,
    Msg_MoveFocus__ID,
    Msg_SetEmbeddedDocAccessibleCOMProxy__ID,
    Msg_MaybeFireEmbedderLoadEvents__ID,
    Msg_ScrollRectIntoView__ID,
    Msg_SubFrameCrashed__ID,
    Msg_IntrinsicSizeOrRatioChanged__ID,
    Msg___delete____ID,
    Reply___delete____ID,
    Msg_LoadURL__ID,
    Msg_ResumeLoad__ID,
    Msg_Show__ID,
    Msg_ScrollbarPreferenceChanged__ID,
    Msg_UpdateDimensions__ID,
    Msg_RenderLayers__ID,
    Msg_UpdateEffects__ID,
    Msg_NavigateByKey__ID,
    Msg_DispatchSynthesizedMouseEvent__ID,
    Msg_Activate__ID,
    Msg_Deactivate__ID,
    Msg_SetIsUnderHiddenEmbedderElement__ID,
    Msg_WillChangeProcess__ID,
    Msg_SetEmbedderAccessible__ID,
    PBrowserBridgeEnd
};

IPC::Message*
Msg_RequestFocus(int32_t routingId);

IPC::Message*
Msg_MoveFocus(int32_t routingId);

IPC::Message*
Msg_SetEmbeddedDocAccessibleCOMProxy(int32_t routingId);

IPC::Message*
Msg_MaybeFireEmbedderLoadEvents(int32_t routingId);

IPC::Message*
Msg_ScrollRectIntoView(int32_t routingId);

IPC::Message*
Msg_SubFrameCrashed(int32_t routingId);

IPC::Message*
Msg_IntrinsicSizeOrRatioChanged(int32_t routingId);

IPC::Message*
Msg___delete__(int32_t routingId);
IPC::Message*
Reply___delete__(int32_t routingId);

IPC::Message*
Msg_LoadURL(int32_t routingId);

IPC::Message*
Msg_ResumeLoad(int32_t routingId);

IPC::Message*
Msg_Show(int32_t routingId);

IPC::Message*
Msg_ScrollbarPreferenceChanged(int32_t routingId);

IPC::Message*
Msg_UpdateDimensions(int32_t routingId);

IPC::Message*
Msg_RenderLayers(int32_t routingId);

IPC::Message*
Msg_UpdateEffects(int32_t routingId);

IPC::Message*
Msg_NavigateByKey(int32_t routingId);

IPC::Message*
Msg_DispatchSynthesizedMouseEvent(int32_t routingId);

IPC::Message*
Msg_Activate(int32_t routingId);

IPC::Message*
Msg_Deactivate(int32_t routingId);

IPC::Message*
Msg_SetIsUnderHiddenEmbedderElement(int32_t routingId);

IPC::Message*
Msg_WillChangeProcess(int32_t routingId);

IPC::Message*
Msg_SetEmbedderAccessible(int32_t routingId);



} // namespace PBrowserBridge
} // namespace dom
} // namespace mozilla

#endif // ifndef PBrowserBridge_h
