//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PSessionStorageObserver_h
#define PSessionStorageObserver_h

#include "mozilla/Attributes.h"
#include "IPCMessageStart.h"
#include "mozilla/RefPtr.h"
#include "nsString.h"
#include "nsTArray.h"
#include "nsTHashtable.h"
#include "mozilla/MozPromise.h"
#include "mozilla/OperatorNewExtensions.h"
#include "mozilla/UniquePtr.h"
#include "mozilla/ipc/ByteBuf.h"
#include "mozilla/ipc/FileDescriptor.h"
#include "mozilla/ipc/ProtocolUtilsFwd.h"
#include "mozilla/ipc/Shmem.h"

namespace mozilla {
namespace dom {
class PSessionStorageObserverParent;
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
class PSessionStorageObserverChild;
} // namespace dom
} // namespace mozilla

//-----------------------------------------------------------------------------
// Code common to PSessionStorageObserverChild and PSessionStorageObserverParent
//
namespace mozilla {
namespace dom {
namespace PSessionStorageObserver {

nsresult
CreateEndpoints(
        base::ProcessId aParentDestPid,
        base::ProcessId aChildDestPid,
        mozilla::ipc::Endpoint<mozilla::dom::PSessionStorageObserverParent>* aParent,
        mozilla::ipc::Endpoint<mozilla::dom::PSessionStorageObserverChild>* aChild);

enum MessageType {
    PSessionStorageObserverStart = PSessionStorageObserverMsgStart << 16,
    Msg_DeleteMe__ID,
    Msg___delete____ID,
    Reply___delete____ID,
    Msg_Observe__ID,
    PSessionStorageObserverEnd
};

IPC::Message*
Msg_DeleteMe(int32_t routingId);

IPC::Message*
Msg___delete__(int32_t routingId);
IPC::Message*
Reply___delete__(int32_t routingId);

IPC::Message*
Msg_Observe(int32_t routingId);



} // namespace PSessionStorageObserver
} // namespace dom
} // namespace mozilla

#endif // ifndef PSessionStorageObserver_h
