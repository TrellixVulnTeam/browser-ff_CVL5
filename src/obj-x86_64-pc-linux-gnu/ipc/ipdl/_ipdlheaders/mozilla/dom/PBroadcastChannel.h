//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PBroadcastChannel_h
#define PBroadcastChannel_h

#include "mozilla/Attributes.h"
#include "IPCMessageStart.h"
#include "mozilla/RefPtr.h"
#include "nsString.h"
#include "nsTArray.h"
#include "nsTHashtable.h"
#include "mozilla/MozPromise.h"
#include "mozilla/OperatorNewExtensions.h"
#include "mozilla/UniquePtr.h"
#include "mozilla/ipc/ByteBuf.h"
#include "mozilla/ipc/FileDescriptor.h"
#include "mozilla/ipc/ProtocolUtilsFwd.h"
#include "mozilla/ipc/Shmem.h"
#include "mozilla/dom/DOMTypes.h"

namespace mozilla {
namespace dom {
class PBroadcastChannelParent;
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
class PBroadcastChannelChild;
} // namespace dom
} // namespace mozilla

//-----------------------------------------------------------------------------
// Code common to PBroadcastChannelChild and PBroadcastChannelParent
//
namespace mozilla {
namespace dom {
namespace PBroadcastChannel {

nsresult
CreateEndpoints(
        base::ProcessId aParentDestPid,
        base::ProcessId aChildDestPid,
        mozilla::ipc::Endpoint<mozilla::dom::PBroadcastChannelParent>* aParent,
        mozilla::ipc::Endpoint<mozilla::dom::PBroadcastChannelChild>* aChild);

enum MessageType {
    PBroadcastChannelStart = PBroadcastChannelMsgStart << 16,
    Msg_PostMessage__ID,
    Msg_Close__ID,
    Msg_Notify__ID,
    Msg_RefMessageDelivered__ID,
    Msg___delete____ID,
    Reply___delete____ID,
    PBroadcastChannelEnd
};

IPC::Message*
Msg_PostMessage(int32_t routingId);

IPC::Message*
Msg_Close(int32_t routingId);

IPC::Message*
Msg_Notify(int32_t routingId);

IPC::Message*
Msg_RefMessageDelivered(int32_t routingId);

IPC::Message*
Msg___delete__(int32_t routingId);
IPC::Message*
Reply___delete__(int32_t routingId);



} // namespace PBroadcastChannel
} // namespace dom
} // namespace mozilla

#endif // ifndef PBroadcastChannel_h
