//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PClientManagerOp_h
#define PClientManagerOp_h

#include "mozilla/Attributes.h"
#include "IPCMessageStart.h"
#include "mozilla/RefPtr.h"
#include "nsString.h"
#include "nsTArray.h"
#include "nsTHashtable.h"
#include "mozilla/MozPromise.h"
#include "mozilla/OperatorNewExtensions.h"
#include "mozilla/UniquePtr.h"
#include "mozilla/ipc/ByteBuf.h"
#include "mozilla/ipc/FileDescriptor.h"
#include "mozilla/ipc/ProtocolUtilsFwd.h"
#include "mozilla/ipc/Shmem.h"
#include "mozilla/dom/ClientIPCTypes.h"

namespace mozilla {
namespace dom {
class PClientManagerOpParent;
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
class PClientManagerOpChild;
} // namespace dom
} // namespace mozilla

//-----------------------------------------------------------------------------
// Code common to PClientManagerOpChild and PClientManagerOpParent
//
namespace mozilla {
namespace dom {
namespace PClientManagerOp {

nsresult
CreateEndpoints(
        base::ProcessId aParentDestPid,
        base::ProcessId aChildDestPid,
        mozilla::ipc::Endpoint<mozilla::dom::PClientManagerOpParent>* aParent,
        mozilla::ipc::Endpoint<mozilla::dom::PClientManagerOpChild>* aChild);

enum MessageType {
    PClientManagerOpStart = PClientManagerOpMsgStart << 16,
    Msg___delete____ID,
    Reply___delete____ID,
    PClientManagerOpEnd
};

IPC::Message*
Msg___delete__(int32_t routingId);
IPC::Message*
Reply___delete__(int32_t routingId);



} // namespace PClientManagerOp
} // namespace dom
} // namespace mozilla

#endif // ifndef PClientManagerOp_h
