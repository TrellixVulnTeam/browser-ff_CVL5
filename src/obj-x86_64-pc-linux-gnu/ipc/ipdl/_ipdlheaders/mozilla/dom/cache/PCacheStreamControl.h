//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PCacheStreamControl_h
#define PCacheStreamControl_h

#include "mozilla/Attributes.h"
#include "IPCMessageStart.h"
#include "mozilla/RefPtr.h"
#include "nsString.h"
#include "nsTArray.h"
#include "nsTHashtable.h"
#include "mozilla/MozPromise.h"
#include "mozilla/OperatorNewExtensions.h"
#include "mozilla/UniquePtr.h"
#include "mozilla/ipc/ByteBuf.h"
#include "mozilla/ipc/FileDescriptor.h"
#include "mozilla/ipc/ProtocolUtilsFwd.h"
#include "mozilla/ipc/Shmem.h"
#include "mozilla/ipc/IPCStream.h"

namespace mozilla {
namespace dom {
namespace cache {
class PCacheStreamControlParent;
} // namespace cache
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
namespace cache {
class PCacheStreamControlChild;
} // namespace cache
} // namespace dom
} // namespace mozilla

//-----------------------------------------------------------------------------
// Code common to PCacheStreamControlChild and PCacheStreamControlParent
//
namespace mozilla {
namespace dom {
namespace cache {
namespace PCacheStreamControl {

nsresult
CreateEndpoints(
        base::ProcessId aParentDestPid,
        base::ProcessId aChildDestPid,
        mozilla::ipc::Endpoint<mozilla::dom::cache::PCacheStreamControlParent>* aParent,
        mozilla::ipc::Endpoint<mozilla::dom::cache::PCacheStreamControlChild>* aChild);

enum MessageType {
    PCacheStreamControlStart = PCacheStreamControlMsgStart << 16,
    Msg_OpenStream__ID,
    Reply_OpenStream__ID,
    Msg_NoteClosed__ID,
    Msg_CloseAll__ID,
    Msg___delete____ID,
    Reply___delete____ID,
    PCacheStreamControlEnd
};

IPC::Message*
Msg_OpenStream(int32_t routingId);
IPC::Message*
Reply_OpenStream(int32_t routingId);

IPC::Message*
Msg_NoteClosed(int32_t routingId);

IPC::Message*
Msg_CloseAll(int32_t routingId);

IPC::Message*
Msg___delete__(int32_t routingId);
IPC::Message*
Reply___delete__(int32_t routingId);



} // namespace PCacheStreamControl
} // namespace cache
} // namespace dom
} // namespace mozilla

#endif // ifndef PCacheStreamControl_h
