//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PPaymentRequestParent_h
#define PPaymentRequestParent_h

#include "mozilla/dom/PPaymentRequest.h"
#ifdef DEBUG
#include "prenv.h"
#endif  // DEBUG

#include "mozilla/Tainting.h"
#include "mozilla/ipc/MessageChannel.h"
#include "mozilla/ipc/ProtocolUtils.h"
namespace mozilla {
namespace dom {
class PBrowserParent;
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
class PBrowserChild;
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
class PBrowserParent;
} // namespace dom
} // namespace mozilla

class nsIPrincipal;

namespace mozilla {
namespace dom {


class PPaymentRequestParent :
    public mozilla::ipc::IProtocol
{
private:
    friend class mozilla::dom::PBrowserParent;
protected:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::ipc::ByteBuf ByteBuf;
    template<class FooSide> using Endpoint = mozilla::ipc::Endpoint<FooSide>;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::dom::IPCBasicCardChangeDetails IPCBasicCardChangeDetails;
    typedef mozilla::dom::IPCBasicCardResponse IPCBasicCardResponse;
    typedef mozilla::dom::IPCGeneralChangeDetails IPCGeneralChangeDetails;
    typedef mozilla::dom::IPCGeneralResponse IPCGeneralResponse;
    typedef mozilla::dom::IPCMethodChangeDetails IPCMethodChangeDetails;
    typedef mozilla::dom::IPCPaymentAbortActionRequest IPCPaymentAbortActionRequest;
    typedef mozilla::dom::IPCPaymentAbortActionResponse IPCPaymentAbortActionResponse;
    typedef mozilla::dom::IPCPaymentActionRequest IPCPaymentActionRequest;
    typedef mozilla::dom::IPCPaymentActionResponse IPCPaymentActionResponse;
    typedef mozilla::dom::IPCPaymentAddress IPCPaymentAddress;
    typedef mozilla::dom::IPCPaymentCanMakeActionRequest IPCPaymentCanMakeActionRequest;
    typedef mozilla::dom::IPCPaymentCanMakeActionResponse IPCPaymentCanMakeActionResponse;
    typedef mozilla::dom::IPCPaymentCloseActionRequest IPCPaymentCloseActionRequest;
    typedef mozilla::dom::IPCPaymentCompleteActionRequest IPCPaymentCompleteActionRequest;
    typedef mozilla::dom::IPCPaymentCompleteActionResponse IPCPaymentCompleteActionResponse;
    typedef mozilla::dom::IPCPaymentCreateActionRequest IPCPaymentCreateActionRequest;
    typedef mozilla::dom::IPCPaymentCurrencyAmount IPCPaymentCurrencyAmount;
    typedef mozilla::dom::IPCPaymentDetails IPCPaymentDetails;
    typedef mozilla::dom::IPCPaymentDetailsModifier IPCPaymentDetailsModifier;
    typedef mozilla::dom::IPCPaymentItem IPCPaymentItem;
    typedef mozilla::dom::IPCPaymentMethodData IPCPaymentMethodData;
    typedef mozilla::dom::IPCPaymentOptions IPCPaymentOptions;
    typedef mozilla::dom::IPCPaymentResponseData IPCPaymentResponseData;
    typedef mozilla::dom::IPCPaymentRetryActionRequest IPCPaymentRetryActionRequest;
    typedef mozilla::dom::IPCPaymentShippingOption IPCPaymentShippingOption;
    typedef mozilla::dom::IPCPaymentShowActionRequest IPCPaymentShowActionRequest;
    typedef mozilla::dom::IPCPaymentShowActionResponse IPCPaymentShowActionResponse;
    typedef mozilla::dom::IPCPaymentUpdateActionRequest IPCPaymentUpdateActionRequest;
    template<class FooSide> using ManagedEndpoint = mozilla::ipc::ManagedEndpoint<FooSide>;
    typedef base::ProcessId ProcessId;
    typedef mozilla::ipc::ProtocolId ProtocolId;
    typedef mozilla::ipc::ResponseRejectReason ResponseRejectReason;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::Transport Transport;
    typedef mozilla::ipc::TransportDescriptor TransportDescriptor;
    template<class T> using UniquePtr = mozilla::UniquePtr<T>;
    typedef mozilla::dom::PBrowserParent PBrowserParent;
    typedef mozilla::dom::PBrowserChild PBrowserChild;

protected:
    virtual mozilla::ipc::IPCResult
    Recv__delete__();
public:
    typedef mozilla::ipc::IProtocol IProtocol;
    typedef IPC::Message Message;
    typedef base::ProcessHandle ProcessHandle;
    typedef mozilla::ipc::MessageChannel MessageChannel;
    typedef mozilla::ipc::SharedMemory SharedMemory;

public:
    MOZ_IMPLICIT PPaymentRequestParent();

    virtual ~PPaymentRequestParent();

public:
    PBrowserParent*
    Manager() const;

    void
    AllManagedActors(nsTArray<RefPtr<mozilla::ipc::ActorLifecycleProxy>>& arr__) const override;

    [[nodiscard]] bool
    SendRespondPayment(const IPCPaymentActionResponse& aResponse);

    [[nodiscard]] bool
    SendChangeShippingAddress(
            const nsString& aRequestId,
            const IPCPaymentAddress& aAddress);

    [[nodiscard]] bool
    SendChangeShippingOption(
            const nsString& aRequestId,
            const nsString& aOption);

    [[nodiscard]] bool
    SendChangePayerDetail(
            const nsString& aRequestId,
            const nsString& aPayerName,
            const nsString& aPayerEmail,
            const nsString& aPayerPhone);

    [[nodiscard]] bool
    SendChangePaymentMethod(
            const nsString& aRequestId,
            const nsString& aMethodName,
            const IPCMethodChangeDetails& aMethodDetails);

    void
    RemoveManagee(
            int32_t aProtocolId,
            IProtocol* aListener) override;
    void
    DeallocManagee(
            int32_t aProtocolId,
            IProtocol* aListener) override;

    Result
    OnMessageReceived(const Message& msg__) override;

    Result
    OnMessageReceived(
            const Message& msg__,
            Message*& reply__) override;

    Result
    OnCallReceived(
            const Message& msg__,
            Message*& reply__) override;

private:
    void
    ClearSubtree();

};


} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace ipc {
template<>
struct IPDLParamTraits <mozilla::dom::PPaymentRequestParent*>
{
    typedef mozilla::dom::PPaymentRequestParent* paramType;
    static void
    Write(
            IPC::Message* aMsg,
            mozilla::ipc::IProtocol* aActor,
            const paramType& aVar);
    static bool
    Read(
            const IPC::Message* aMsg,
            PickleIterator* aIter,
            mozilla::ipc::IProtocol* aActor,
            paramType* aVar);
};
} // namespace ipc
} // namespace mozilla

#endif // ifndef PPaymentRequestParent_h
