//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PURLClassifierInfo_h
#define PURLClassifierInfo_h

#include "mozilla/Attributes.h"
#include "IPCMessageStart.h"
#include "mozilla/RefPtr.h"
#include "nsString.h"
#include "nsTArray.h"
#include "nsTHashtable.h"
#include "mozilla/MozPromise.h"
#include "mozilla/OperatorNewExtensions.h"
#include "mozilla/UniquePtr.h"
#include "mozilla/ipc/ByteBuf.h"
#include "mozilla/ipc/FileDescriptor.h"
#include "mozilla/ipc/ProtocolUtilsFwd.h"
#include "mozilla/ipc/Shmem.h"


//-----------------------------------------------------------------------------
// Declaration of the IPDL type |struct ClassifierInfo|
//
namespace mozilla {
namespace dom {
class ClassifierInfo final
{
private:

public:
    MOZ_IMPLICIT ClassifierInfo() :
        list_(),
        provider_(),
        fullhash_()
    {
    }

    MOZ_IMPLICIT ClassifierInfo(
            const nsCString& _list,
            const nsCString& _provider,
            const nsCString& _fullhash) :
        list_(_list),
        provider_(_provider),
        fullhash_(_fullhash)
    {
    }

    nsCString&
    list()
    {
        return list_;
    }
    const nsCString&
    list() const
    {
        return list_;
    }

    nsCString&
    provider()
    {
        return provider_;
    }
    const nsCString&
    provider() const
    {
        return provider_;
    }

    nsCString&
    fullhash()
    {
        return fullhash_;
    }
    const nsCString&
    fullhash() const
    {
        return fullhash_;
    }

private:
    nsCString list_;
    nsCString provider_;
    nsCString fullhash_;
};
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace ipc {
template<>
struct IPDLParamTraits <mozilla::dom::ClassifierInfo>
{
    typedef mozilla::dom::ClassifierInfo paramType;
    static void
    Write(
            IPC::Message* aMsg,
            mozilla::ipc::IProtocol* aActor,
            const paramType& aVar);
    static bool
    Read(
            const IPC::Message* aMsg,
            PickleIterator* aIter,
            mozilla::ipc::IProtocol* aActor,
            paramType* aVar);
};
} // namespace ipc
} // namespace mozilla

#endif // ifndef PURLClassifierInfo_h
