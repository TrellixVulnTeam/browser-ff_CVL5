//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PGamepadEventChannel_h
#define PGamepadEventChannel_h

#include "mozilla/Attributes.h"
#include "IPCMessageStart.h"
#include "mozilla/RefPtr.h"
#include "nsString.h"
#include "nsTArray.h"
#include "nsTHashtable.h"
#include "mozilla/MozPromise.h"
#include "mozilla/OperatorNewExtensions.h"
#include "mozilla/UniquePtr.h"
#include "mozilla/ipc/ByteBuf.h"
#include "mozilla/ipc/FileDescriptor.h"
#include "mozilla/ipc/ProtocolUtilsFwd.h"
#include "mozilla/ipc/Shmem.h"
#include "mozilla/dom/GamepadEventTypes.h"

namespace mozilla {
namespace dom {
class PGamepadEventChannelParent;
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
class PGamepadEventChannelChild;
} // namespace dom
} // namespace mozilla

//-----------------------------------------------------------------------------
// Code common to PGamepadEventChannelChild and PGamepadEventChannelParent
//
namespace mozilla {
namespace dom {
namespace PGamepadEventChannel {

nsresult
CreateEndpoints(
        base::ProcessId aParentDestPid,
        base::ProcessId aChildDestPid,
        mozilla::ipc::Endpoint<mozilla::dom::PGamepadEventChannelParent>* aParent,
        mozilla::ipc::Endpoint<mozilla::dom::PGamepadEventChannelChild>* aChild);

enum MessageType {
    PGamepadEventChannelStart = PGamepadEventChannelMsgStart << 16,
    Msg___delete____ID,
    Reply___delete____ID,
    Msg_VibrateHaptic__ID,
    Msg_StopVibrateHaptic__ID,
    Msg_LightIndicatorColor__ID,
    Msg_GamepadUpdate__ID,
    Msg_ReplyGamepadPromise__ID,
    PGamepadEventChannelEnd
};

IPC::Message*
Msg___delete__(int32_t routingId);
IPC::Message*
Reply___delete__(int32_t routingId);

IPC::Message*
Msg_VibrateHaptic(int32_t routingId);

IPC::Message*
Msg_StopVibrateHaptic(int32_t routingId);

IPC::Message*
Msg_LightIndicatorColor(int32_t routingId);

IPC::Message*
Msg_GamepadUpdate(int32_t routingId);

IPC::Message*
Msg_ReplyGamepadPromise(int32_t routingId);



} // namespace PGamepadEventChannel
} // namespace dom
} // namespace mozilla

#endif // ifndef PGamepadEventChannel_h
