//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PPresentationBuilder_h
#define PPresentationBuilder_h

#include "mozilla/Attributes.h"
#include "IPCMessageStart.h"
#include "mozilla/RefPtr.h"
#include "nsString.h"
#include "nsTArray.h"
#include "nsTHashtable.h"
#include "mozilla/MozPromise.h"
#include "mozilla/OperatorNewExtensions.h"
#include "mozilla/UniquePtr.h"
#include "mozilla/ipc/ByteBuf.h"
#include "mozilla/ipc/FileDescriptor.h"
#include "mozilla/ipc/ProtocolUtilsFwd.h"
#include "mozilla/ipc/Shmem.h"

namespace mozilla {
namespace dom {
class PPresentationBuilderParent;
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
class PPresentationBuilderChild;
} // namespace dom
} // namespace mozilla

//-----------------------------------------------------------------------------
// Code common to PPresentationBuilderChild and PPresentationBuilderParent
//
namespace mozilla {
namespace dom {
namespace PPresentationBuilder {

nsresult
CreateEndpoints(
        base::ProcessId aParentDestPid,
        base::ProcessId aChildDestPid,
        mozilla::ipc::Endpoint<mozilla::dom::PPresentationBuilderParent>* aParent,
        mozilla::ipc::Endpoint<mozilla::dom::PPresentationBuilderChild>* aChild);

enum MessageType {
    PPresentationBuilderStart = PPresentationBuilderMsgStart << 16,
    Msg_SendOffer__ID,
    Msg_SendAnswer__ID,
    Msg_SendIceCandidate__ID,
    Msg_Close__ID,
    Msg_OnSessionTransport__ID,
    Msg_OnSessionTransportError__ID,
    Msg_OnOffer__ID,
    Msg_OnAnswer__ID,
    Msg_OnIceCandidate__ID,
    Msg___delete____ID,
    Reply___delete____ID,
    PPresentationBuilderEnd
};

IPC::Message*
Msg_SendOffer(int32_t routingId);

IPC::Message*
Msg_SendAnswer(int32_t routingId);

IPC::Message*
Msg_SendIceCandidate(int32_t routingId);

IPC::Message*
Msg_Close(int32_t routingId);

IPC::Message*
Msg_OnSessionTransport(int32_t routingId);

IPC::Message*
Msg_OnSessionTransportError(int32_t routingId);

IPC::Message*
Msg_OnOffer(int32_t routingId);

IPC::Message*
Msg_OnAnswer(int32_t routingId);

IPC::Message*
Msg_OnIceCandidate(int32_t routingId);

IPC::Message*
Msg___delete__(int32_t routingId);
IPC::Message*
Reply___delete__(int32_t routingId);



} // namespace PPresentationBuilder
} // namespace dom
} // namespace mozilla

#endif // ifndef PPresentationBuilder_h
