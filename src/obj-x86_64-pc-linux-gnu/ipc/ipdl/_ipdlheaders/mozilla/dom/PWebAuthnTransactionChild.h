//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PWebAuthnTransactionChild_h
#define PWebAuthnTransactionChild_h

#include "mozilla/dom/PWebAuthnTransaction.h"
#ifdef DEBUG
#include "prenv.h"
#endif  // DEBUG

#include "mozilla/Tainting.h"
#include "mozilla/ipc/MessageChannel.h"
#include "mozilla/ipc/ProtocolUtils.h"
// Headers for things that cannot be forward declared
#include "mozilla/dom/BrowsingContext.h"
#include "mozilla/dom/WebAuthnUtil.h"

namespace mozilla {
namespace ipc {
class PBackgroundChild;
} // namespace ipc
} // namespace mozilla
namespace mozilla {
namespace ipc {
class PBackgroundParent;
} // namespace ipc
} // namespace mozilla

namespace mozilla {
namespace ipc {
class PBackgroundChild;
} // namespace ipc
} // namespace mozilla

namespace mozilla {
namespace dom {


class PWebAuthnTransactionChild :
    public mozilla::ipc::IProtocol
{
private:
    friend class mozilla::ipc::PBackgroundChild;
protected:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::AttestationConveyancePreference AttestationConveyancePreference;
    typedef mozilla::dom::AuthenticatorAttachment AuthenticatorAttachment;
    typedef mozilla::ipc::ByteBuf ByteBuf;
    typedef mozilla::dom::CoseAlg CoseAlg;
    template<class FooSide> using Endpoint = mozilla::ipc::Endpoint<FooSide>;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    template<class FooSide> using ManagedEndpoint = mozilla::ipc::ManagedEndpoint<FooSide>;
    typedef mozilla::dom::MaybeDiscardedBrowsingContext MaybeDiscardedBrowsingContext;
    typedef base::ProcessId ProcessId;
    typedef mozilla::ipc::ProtocolId ProtocolId;
    typedef mozilla::ipc::ResponseRejectReason ResponseRejectReason;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::Transport Transport;
    typedef mozilla::ipc::TransportDescriptor TransportDescriptor;
    template<class T> using UniquePtr = mozilla::UniquePtr<T>;
    typedef mozilla::dom::UserVerificationRequirement UserVerificationRequirement;
    typedef mozilla::dom::WebAuthnAuthenticatorSelection WebAuthnAuthenticatorSelection;
    typedef mozilla::dom::WebAuthnExtension WebAuthnExtension;
    typedef mozilla::dom::WebAuthnExtensionAppId WebAuthnExtensionAppId;
    typedef mozilla::dom::WebAuthnExtensionHmacSecret WebAuthnExtensionHmacSecret;
    typedef mozilla::dom::WebAuthnExtensionResult WebAuthnExtensionResult;
    typedef mozilla::dom::WebAuthnExtensionResultAppId WebAuthnExtensionResultAppId;
    typedef mozilla::dom::WebAuthnExtensionResultHmacSecret WebAuthnExtensionResultHmacSecret;
    typedef mozilla::dom::WebAuthnGetAssertionExtraInfo WebAuthnGetAssertionExtraInfo;
    typedef mozilla::dom::WebAuthnGetAssertionInfo WebAuthnGetAssertionInfo;
    typedef mozilla::dom::WebAuthnGetAssertionResult WebAuthnGetAssertionResult;
    typedef mozilla::dom::WebAuthnMakeCredentialExtraInfo WebAuthnMakeCredentialExtraInfo;
    typedef mozilla::dom::WebAuthnMakeCredentialInfo WebAuthnMakeCredentialInfo;
    typedef mozilla::dom::WebAuthnMakeCredentialResult WebAuthnMakeCredentialResult;
    typedef mozilla::dom::WebAuthnMakeCredentialRpInfo WebAuthnMakeCredentialRpInfo;
    typedef mozilla::dom::WebAuthnMakeCredentialUserInfo WebAuthnMakeCredentialUserInfo;
    typedef mozilla::dom::WebAuthnScopedCredential WebAuthnScopedCredential;
    typedef mozilla::ipc::PBackgroundChild PBackgroundChild;
    typedef mozilla::ipc::PBackgroundParent PBackgroundParent;

protected:
    virtual mozilla::ipc::IPCResult
    Recv__delete__();
public:
    typedef mozilla::ipc::IProtocol IProtocol;
    typedef IPC::Message Message;
    typedef base::ProcessHandle ProcessHandle;
    typedef mozilla::ipc::MessageChannel MessageChannel;
    typedef mozilla::ipc::SharedMemory SharedMemory;

public:
    MOZ_IMPLICIT PWebAuthnTransactionChild();

    virtual ~PWebAuthnTransactionChild();

public:
    PBackgroundChild*
    Manager() const;

    void
    AllManagedActors(nsTArray<RefPtr<mozilla::ipc::ActorLifecycleProxy>>& arr__) const override;

    bool
    SendRequestRegister(
            const uint64_t& aTransactionId,
            const WebAuthnMakeCredentialInfo& aTransactionInfo);

    bool
    SendRequestSign(
            const uint64_t& aTransactionId,
            const WebAuthnGetAssertionInfo& aTransactionInfo);

    bool
    SendRequestCancel(const uint64_t& aTransactionId);

    bool
    SendDestroyMe();

    void
    RemoveManagee(
            int32_t aProtocolId,
            IProtocol* aListener) override;
    void
    DeallocManagee(
            int32_t aProtocolId,
            IProtocol* aListener) override;

    Result
    OnMessageReceived(const Message& msg__) override;

    Result
    OnMessageReceived(
            const Message& msg__,
            Message*& reply__) override;

    Result
    OnCallReceived(
            const Message& msg__,
            Message*& reply__) override;

private:
    void
    ClearSubtree();

};


} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace ipc {
template<>
struct IPDLParamTraits <mozilla::dom::PWebAuthnTransactionChild*>
{
    typedef mozilla::dom::PWebAuthnTransactionChild* paramType;
    static void
    Write(
            IPC::Message* aMsg,
            mozilla::ipc::IProtocol* aActor,
            const paramType& aVar);
    static bool
    Read(
            const IPC::Message* aMsg,
            PickleIterator* aIter,
            mozilla::ipc::IProtocol* aActor,
            paramType* aVar);
};
} // namespace ipc
} // namespace mozilla

#endif // ifndef PWebAuthnTransactionChild_h
