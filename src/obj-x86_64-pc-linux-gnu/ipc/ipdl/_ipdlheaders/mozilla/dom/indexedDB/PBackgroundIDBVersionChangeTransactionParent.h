//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PBackgroundIDBVersionChangeTransactionParent_h
#define PBackgroundIDBVersionChangeTransactionParent_h

#include "mozilla/dom/indexedDB/PBackgroundIDBVersionChangeTransaction.h"
#ifdef DEBUG
#include "prenv.h"
#endif  // DEBUG

#include "mozilla/Tainting.h"
#include "mozilla/ipc/MessageChannel.h"
#include "mozilla/ipc/ProtocolUtils.h"
namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBCursorParent;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBCursorChild;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBDatabaseParent;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBDatabaseChild;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBDatabaseFileParent;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBDatabaseFileChild;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBRequestParent;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBRequestChild;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
class PBackgroundMutableFileParent;
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
class PBackgroundMutableFileChild;
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace ipc {
class PChildToParentStreamParent;
} // namespace ipc
} // namespace mozilla
namespace mozilla {
namespace ipc {
class PChildToParentStreamChild;
} // namespace ipc
} // namespace mozilla

namespace mozilla {
namespace ipc {
class PFileDescriptorSetParent;
} // namespace ipc
} // namespace mozilla
namespace mozilla {
namespace ipc {
class PFileDescriptorSetChild;
} // namespace ipc
} // namespace mozilla

namespace mozilla {
namespace ipc {
class PParentToChildStreamParent;
} // namespace ipc
} // namespace mozilla
namespace mozilla {
namespace ipc {
class PParentToChildStreamChild;
} // namespace ipc
} // namespace mozilla

namespace mozilla {
class PRemoteLazyInputStreamParent;
} // namespace mozilla
namespace mozilla {
class PRemoteLazyInputStreamChild;
} // namespace mozilla

namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBDatabaseParent;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBCursorParent;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBRequestParent;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
namespace indexedDB {


class PBackgroundIDBVersionChangeTransactionParent :
    public mozilla::ipc::IProtocol
{
private:
    friend class mozilla::dom::indexedDB::PBackgroundIDBDatabaseParent;
    friend class mozilla::dom::indexedDB::PBackgroundIDBCursorParent;
    friend class mozilla::dom::indexedDB::PBackgroundIDBRequestParent;
protected:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::indexedDB::BlobOrMutableFile BlobOrMutableFile;
    typedef mozilla::dom::BrowsingContext BrowsingContext;
    typedef mozilla::ipc::BufferedInputStreamParams BufferedInputStreamParams;
    typedef mozilla::ipc::ByteBuf ByteBuf;
    typedef mozilla::dom::CategoryDispatch CategoryDispatch;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::ClonedOrErrorMessageData ClonedOrErrorMessageData;
    typedef mozilla::dom::indexedDB::CommonIndexOpenCursorParams CommonIndexOpenCursorParams;
    typedef mozilla::dom::indexedDB::CommonOpenCursorParams CommonOpenCursorParams;
    typedef mozilla::dom::CreatedWindowInfo CreatedWindowInfo;
    typedef mozilla::dom::indexedDB::DatabaseMetadata DatabaseMetadata;
    typedef mozilla::dom::indexedDB::DatabaseOrMutableFile DatabaseOrMutableFile;
    typedef mozilla::dom::indexedDB::DatabaseSpec DatabaseSpec;
    typedef mozilla::dom::DimensionInfo DimensionInfo;
    typedef mozilla::dom::IDBCursor::Direction Direction;
    typedef mozilla::dom::DocShellLoadStateInit DocShellLoadStateInit;
    typedef mozilla::ipc::EncryptedFileInputStreamParams EncryptedFileInputStreamParams;
    template<class FooSide> using Endpoint = mozilla::ipc::Endpoint<FooSide>;
    typedef mozilla::dom::ErrorMessageData ErrorMessageData;
    typedef mozilla::dom::FeaturePolicyInfo FeaturePolicyInfo;
    typedef mozilla::dom::indexedDB::FileAddInfo FileAddInfo;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::ipc::FileInputStreamParams FileInputStreamParams;
    typedef mozilla::dom::indexedDB::StructuredCloneFileBase::FileType FileType;
    typedef mozilla::dom::FrameScriptInfo FrameScriptInfo;
    typedef mozilla::ipc::HeaderEntry HeaderEntry;
    typedef mozilla::dom::IDPLVariant IDPLVariant;
    typedef mozilla::dom::IPCBlob IPCBlob;
    typedef mozilla::dom::IPCDataTransfer IPCDataTransfer;
    typedef mozilla::dom::IPCDataTransferData IPCDataTransferData;
    typedef mozilla::dom::IPCDataTransferImage IPCDataTransferImage;
    typedef mozilla::dom::IPCDataTransferItem IPCDataTransferItem;
    typedef mozilla::dom::IPCFile IPCFile;
    typedef mozilla::ipc::IPCRemoteStreamParams IPCRemoteStreamParams;
    typedef mozilla::ipc::IPCRemoteStreamType IPCRemoteStreamType;
    typedef mozilla::ipc::IPCStream IPCStream;
    typedef mozilla::dom::IPDLProperty IPDLProperty;
    typedef mozilla::dom::IPDLVariantValue IPDLVariantValue;
    typedef mozilla::dom::indexedDB::IndexCountParams IndexCountParams;
    typedef mozilla::dom::indexedDB::IndexGetAllKeysParams IndexGetAllKeysParams;
    typedef mozilla::dom::indexedDB::IndexGetAllParams IndexGetAllParams;
    typedef mozilla::dom::indexedDB::IndexGetKeyParams IndexGetKeyParams;
    typedef mozilla::dom::indexedDB::IndexGetParams IndexGetParams;
    typedef mozilla::dom::indexedDB::IndexMetadata IndexMetadata;
    typedef mozilla::dom::indexedDB::IndexOpenCursorParams IndexOpenCursorParams;
    typedef mozilla::dom::indexedDB::IndexOpenKeyCursorParams IndexOpenKeyCursorParams;
    typedef mozilla::dom::indexedDB::IndexUpdateInfo IndexUpdateInfo;
    typedef mozilla::ipc::InputStreamLengthWrapperParams InputStreamLengthWrapperParams;
    typedef mozilla::ipc::InputStreamParams InputStreamParams;
    typedef mozilla::dom::indexedDB::Key Key;
    typedef mozilla::dom::indexedDB::KeyPath KeyPath;
    typedef mozilla::LayoutDeviceIntPoint LayoutDeviceIntPoint;
    typedef mozilla::dom::LoadingSessionHistoryInfo LoadingSessionHistoryInfo;
    typedef mozilla::dom::indexedDB::LoggingInfo LoggingInfo;
    typedef mozilla::ipc::MIMEInputStreamParams MIMEInputStreamParams;
    template<class FooSide> using ManagedEndpoint = mozilla::ipc::ManagedEndpoint<FooSide>;
    typedef mozilla::dom::MaybeDiscardedBrowsingContext MaybeDiscardedBrowsingContext;
    typedef mozilla::dom::MediaMemoryInfo MediaMemoryInfo;
    typedef mozilla::dom::MessageData MessageData;
    typedef mozilla::dom::MessageDataType MessageDataType;
    typedef mozilla::dom::MessagePortIdentifier MessagePortIdentifier;
    typedef mozilla::ipc::MultiplexInputStreamParams MultiplexInputStreamParams;
    typedef mozilla::dom::indexedDB::ObjectStoreAddParams ObjectStoreAddParams;
    typedef mozilla::dom::indexedDB::ObjectStoreAddPutParams ObjectStoreAddPutParams;
    typedef mozilla::dom::indexedDB::ObjectStoreClearParams ObjectStoreClearParams;
    typedef mozilla::dom::indexedDB::ObjectStoreCountParams ObjectStoreCountParams;
    typedef mozilla::dom::indexedDB::ObjectStoreDeleteParams ObjectStoreDeleteParams;
    typedef mozilla::dom::indexedDB::ObjectStoreGetAllKeysParams ObjectStoreGetAllKeysParams;
    typedef mozilla::dom::indexedDB::ObjectStoreGetAllParams ObjectStoreGetAllParams;
    typedef mozilla::dom::indexedDB::ObjectStoreGetKeyParams ObjectStoreGetKeyParams;
    typedef mozilla::dom::indexedDB::ObjectStoreGetParams ObjectStoreGetParams;
    typedef mozilla::dom::indexedDB::ObjectStoreMetadata ObjectStoreMetadata;
    typedef mozilla::dom::indexedDB::ObjectStoreOpenCursorParams ObjectStoreOpenCursorParams;
    typedef mozilla::dom::indexedDB::ObjectStoreOpenKeyCursorParams ObjectStoreOpenKeyCursorParams;
    typedef mozilla::dom::indexedDB::ObjectStorePutParams ObjectStorePutParams;
    typedef mozilla::dom::indexedDB::ObjectStoreSpec ObjectStoreSpec;
    typedef mozilla::dom::indexedDB::OpenCursorParams OpenCursorParams;
    typedef mozilla::dom::OptionalFileDescriptorSet OptionalFileDescriptorSet;
    typedef mozilla::dom::OwnerShowInfo OwnerShowInfo;
    typedef mozilla::dom::ParentShowInfo ParentShowInfo;
    typedef mozilla::dom::PerformanceInfo PerformanceInfo;
    typedef mozilla::dom::PerformanceMemoryInfo PerformanceMemoryInfo;
    typedef mozilla::dom::quota::PersistenceType PersistenceType;
    typedef base::ProcessId ProcessId;
    typedef mozilla::ipc::ProtocolFdMapping ProtocolFdMapping;
    typedef mozilla::ipc::ProtocolId ProtocolId;
    typedef mozilla::dom::RefMessageData RefMessageData;
    typedef mozilla::ipc::RemoteLazyInputStreamParams RemoteLazyInputStreamParams;
    typedef mozilla::ipc::RemoteLazyInputStreamRef RemoteLazyInputStreamRef;
    typedef mozilla::RemoteLazyStream RemoteLazyStream;
    typedef mozilla::dom::ReplacementChannelConfigInit ReplacementChannelConfigInit;
    typedef mozilla::dom::indexedDB::RequestParams RequestParams;
    typedef mozilla::ipc::ResponseRejectReason ResponseRejectReason;
    typedef mozilla::dom::ScreenDetails ScreenDetails;
    typedef hal::ScreenOrientation ScreenOrientation;
    typedef mozilla::dom::indexedDB::SerializedKeyRange SerializedKeyRange;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::dom::indexedDB::SerializedStructuredCloneFile SerializedStructuredCloneFile;
    typedef mozilla::dom::indexedDB::SerializedStructuredCloneReadInfo SerializedStructuredCloneReadInfo;
    typedef mozilla::dom::indexedDB::SerializedStructuredCloneWriteInfo SerializedStructuredCloneWriteInfo;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SlicedInputStreamParams SlicedInputStreamParams;
    typedef mozilla::ipc::StringInputStreamParams StringInputStreamParams;
    typedef mozilla::gfx::SurfaceFormat SurfaceFormat;
    typedef mozilla::TimeStamp TimeStamp;
    typedef mozilla::dom::TimedChannelInfo TimedChannelInfo;
    typedef mozilla::ipc::Transport Transport;
    typedef mozilla::ipc::TransportDescriptor TransportDescriptor;
    template<class T> using UniquePtr = mozilla::UniquePtr<T>;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;
    typedef mozilla::dom::indexedDB::PBackgroundIDBCursorParent PBackgroundIDBCursorParent;
    typedef mozilla::dom::indexedDB::PBackgroundIDBCursorChild PBackgroundIDBCursorChild;
    typedef mozilla::dom::indexedDB::PBackgroundIDBDatabaseParent PBackgroundIDBDatabaseParent;
    typedef mozilla::dom::indexedDB::PBackgroundIDBDatabaseChild PBackgroundIDBDatabaseChild;
    typedef mozilla::dom::indexedDB::PBackgroundIDBDatabaseFileParent PBackgroundIDBDatabaseFileParent;
    typedef mozilla::dom::indexedDB::PBackgroundIDBDatabaseFileChild PBackgroundIDBDatabaseFileChild;
    typedef mozilla::dom::indexedDB::PBackgroundIDBRequestParent PBackgroundIDBRequestParent;
    typedef mozilla::dom::indexedDB::PBackgroundIDBRequestChild PBackgroundIDBRequestChild;
    typedef mozilla::dom::PBackgroundMutableFileParent PBackgroundMutableFileParent;
    typedef mozilla::dom::PBackgroundMutableFileChild PBackgroundMutableFileChild;
    typedef mozilla::ipc::PChildToParentStreamParent PChildToParentStreamParent;
    typedef mozilla::ipc::PChildToParentStreamChild PChildToParentStreamChild;
    typedef mozilla::ipc::PFileDescriptorSetParent PFileDescriptorSetParent;
    typedef mozilla::ipc::PFileDescriptorSetChild PFileDescriptorSetChild;
    typedef mozilla::ipc::PParentToChildStreamParent PParentToChildStreamParent;
    typedef mozilla::ipc::PParentToChildStreamChild PParentToChildStreamChild;
    typedef mozilla::PRemoteLazyInputStreamParent PRemoteLazyInputStreamParent;
    typedef mozilla::PRemoteLazyInputStreamChild PRemoteLazyInputStreamChild;

protected:
    virtual mozilla::ipc::IPCResult
    RecvDeleteMe() = 0;
    virtual mozilla::ipc::IPCResult
    RecvCommit(const mozilla::Maybe<int64_t>& lastRequest) = 0;
    virtual mozilla::ipc::IPCResult
    RecvAbort(const nsresult& resultCode) = 0;
    virtual mozilla::ipc::IPCResult
    RecvCreateObjectStore(const ObjectStoreMetadata& metadata) = 0;
    virtual mozilla::ipc::IPCResult
    RecvDeleteObjectStore(const int64_t& objectStoreId) = 0;
    virtual mozilla::ipc::IPCResult
    RecvRenameObjectStore(
            const int64_t& objectStoreId,
            const nsString& name) = 0;
    virtual mozilla::ipc::IPCResult
    RecvCreateIndex(
            const int64_t& objectStoreId,
            const IndexMetadata& metadata) = 0;
    virtual mozilla::ipc::IPCResult
    RecvDeleteIndex(
            const int64_t& objectStoreId,
            const int64_t& indexId) = 0;
    virtual mozilla::ipc::IPCResult
    RecvRenameIndex(
            const int64_t& objectStoreId,
            const int64_t& indexId,
            const nsString& name) = 0;
    virtual mozilla::ipc::IPCResult
    RecvPBackgroundIDBCursorConstructor(
            PBackgroundIDBCursorParent* actor,
            const OpenCursorParams& params);
    virtual mozilla::ipc::IPCResult
    RecvPBackgroundIDBRequestConstructor(
            PBackgroundIDBRequestParent* actor,
            const RequestParams& params);
    virtual already_AddRefed<PBackgroundIDBCursorParent>
    AllocPBackgroundIDBCursorParent(const OpenCursorParams& params) = 0;
    virtual PBackgroundIDBRequestParent*
    AllocPBackgroundIDBRequestParent(const RequestParams& params) = 0;
    virtual bool
    DeallocPBackgroundIDBRequestParent(PBackgroundIDBRequestParent* aActor) = 0;
public:
    typedef mozilla::ipc::IProtocol IProtocol;
    typedef IPC::Message Message;
    typedef base::ProcessHandle ProcessHandle;
    typedef mozilla::ipc::MessageChannel MessageChannel;
    typedef mozilla::ipc::SharedMemory SharedMemory;

public:
    MOZ_IMPLICIT PBackgroundIDBVersionChangeTransactionParent();

    virtual ~PBackgroundIDBVersionChangeTransactionParent();

    NS_INLINE_DECL_PURE_VIRTUAL_REFCOUNTING
protected:
    void ActorAlloc() final { AddRef(); }
    void ActorDealloc() final { Release(); }
public:
    PBackgroundIDBDatabaseParent*
    Manager() const;

    void
    ManagedPBackgroundIDBCursorParent(nsTArray<PBackgroundIDBCursorParent*>& aArr) const;
    const ManagedContainer<PBackgroundIDBCursorParent>&
    ManagedPBackgroundIDBCursorParent() const;

    void
    ManagedPBackgroundIDBRequestParent(nsTArray<PBackgroundIDBRequestParent*>& aArr) const;
    const ManagedContainer<PBackgroundIDBRequestParent>&
    ManagedPBackgroundIDBRequestParent() const;

    void
    AllManagedActors(nsTArray<RefPtr<mozilla::ipc::ActorLifecycleProxy>>& arr__) const override;

    ManagedEndpoint<PBackgroundIDBCursorChild>
    OpenPBackgroundIDBCursorEndpoint(PBackgroundIDBCursorParent* aActor);
    bool
    BindPBackgroundIDBCursorEndpoint(
            ManagedEndpoint<PBackgroundIDBCursorParent> aEndpoint,
            PBackgroundIDBCursorParent* aActor);

    ManagedEndpoint<PBackgroundIDBRequestChild>
    OpenPBackgroundIDBRequestEndpoint(PBackgroundIDBRequestParent* aActor);
    bool
    BindPBackgroundIDBRequestEndpoint(
            ManagedEndpoint<PBackgroundIDBRequestParent> aEndpoint,
            PBackgroundIDBRequestParent* aActor);

    [[nodiscard]] static bool
    Send__delete__(PBackgroundIDBVersionChangeTransactionParent* actor);

    [[nodiscard]] bool
    SendComplete(const nsresult& result);

    void
    RemoveManagee(
            int32_t aProtocolId,
            IProtocol* aListener) override;
    void
    DeallocManagee(
            int32_t aProtocolId,
            IProtocol* aListener) override;

    Result
    OnMessageReceived(const Message& msg__) override;

    Result
    OnMessageReceived(
            const Message& msg__,
            Message*& reply__) override;

    Result
    OnCallReceived(
            const Message& msg__,
            Message*& reply__) override;

private:
    void
    ClearSubtree();

    ManagedContainer<PBackgroundIDBCursorParent> mManagedPBackgroundIDBCursorParent;
    ManagedContainer<PBackgroundIDBRequestParent> mManagedPBackgroundIDBRequestParent;
};


} // namespace indexedDB
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace ipc {
template<>
struct IPDLParamTraits <mozilla::dom::indexedDB::PBackgroundIDBVersionChangeTransactionParent*>
{
    typedef mozilla::dom::indexedDB::PBackgroundIDBVersionChangeTransactionParent* paramType;
    static void
    Write(
            IPC::Message* aMsg,
            mozilla::ipc::IProtocol* aActor,
            const paramType& aVar);
    static bool
    Read(
            const IPC::Message* aMsg,
            PickleIterator* aIter,
            mozilla::ipc::IProtocol* aActor,
            paramType* aVar);
};
} // namespace ipc
} // namespace mozilla

#endif // ifndef PBackgroundIDBVersionChangeTransactionParent_h
