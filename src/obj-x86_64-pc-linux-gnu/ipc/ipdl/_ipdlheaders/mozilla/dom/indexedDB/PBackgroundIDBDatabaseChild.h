//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PBackgroundIDBDatabaseChild_h
#define PBackgroundIDBDatabaseChild_h

#include "mozilla/dom/indexedDB/PBackgroundIDBDatabase.h"
#ifdef DEBUG
#include "prenv.h"
#endif  // DEBUG

#include "mozilla/Tainting.h"
#include "mozilla/ipc/MessageChannel.h"
#include "mozilla/ipc/ProtocolUtils.h"
// Headers for things that cannot be forward declared
#include "mozilla/dom/IDBTransaction.h"

namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBDatabaseFileChild;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBDatabaseFileParent;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBDatabaseRequestChild;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBDatabaseRequestParent;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBFactoryChild;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBFactoryParent;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBTransactionChild;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBTransactionParent;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBVersionChangeTransactionChild;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBVersionChangeTransactionParent;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
class PBackgroundMutableFileChild;
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace dom {
class PBackgroundMutableFileParent;
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace ipc {
class PChildToParentStreamChild;
} // namespace ipc
} // namespace mozilla
namespace mozilla {
namespace ipc {
class PChildToParentStreamParent;
} // namespace ipc
} // namespace mozilla

namespace mozilla {
namespace ipc {
class PFileDescriptorSetChild;
} // namespace ipc
} // namespace mozilla
namespace mozilla {
namespace ipc {
class PFileDescriptorSetParent;
} // namespace ipc
} // namespace mozilla

namespace mozilla {
namespace ipc {
class PParentToChildStreamChild;
} // namespace ipc
} // namespace mozilla
namespace mozilla {
namespace ipc {
class PParentToChildStreamParent;
} // namespace ipc
} // namespace mozilla

namespace mozilla {
class PRemoteLazyInputStreamChild;
} // namespace mozilla
namespace mozilla {
class PRemoteLazyInputStreamParent;
} // namespace mozilla

namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBTransactionChild;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBVersionChangeTransactionChild;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBDatabaseFileChild;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBFactoryChild;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBDatabaseRequestChild;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
class PBackgroundMutableFileChild;
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {
namespace indexedDB {
class PBackgroundIDBFactoryRequestChild;
} // namespace indexedDB
} // namespace dom
} // namespace mozilla

namespace mozilla {
struct null_t;
} // namespace mozilla

namespace mozilla {
namespace dom {
namespace indexedDB {


class PBackgroundIDBDatabaseChild :
    public mozilla::ipc::IProtocol
{
private:
    friend class mozilla::dom::indexedDB::PBackgroundIDBTransactionChild;
    friend class mozilla::dom::indexedDB::PBackgroundIDBVersionChangeTransactionChild;
    friend class mozilla::dom::indexedDB::PBackgroundIDBDatabaseFileChild;
    friend class mozilla::dom::indexedDB::PBackgroundIDBFactoryChild;
    friend class mozilla::dom::indexedDB::PBackgroundIDBDatabaseRequestChild;
    friend class mozilla::dom::PBackgroundMutableFileChild;
    friend class mozilla::dom::indexedDB::PBackgroundIDBFactoryRequestChild;
protected:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::dom::indexedDB::BlobOrMutableFile BlobOrMutableFile;
    typedef mozilla::dom::BrowsingContext BrowsingContext;
    typedef mozilla::ipc::BufferedInputStreamParams BufferedInputStreamParams;
    typedef mozilla::ipc::ByteBuf ByteBuf;
    typedef mozilla::dom::CategoryDispatch CategoryDispatch;
    typedef mozilla::dom::ClonedMessageData ClonedMessageData;
    typedef mozilla::dom::ClonedOrErrorMessageData ClonedOrErrorMessageData;
    typedef mozilla::dom::indexedDB::CommonIndexOpenCursorParams CommonIndexOpenCursorParams;
    typedef mozilla::dom::indexedDB::CommonOpenCursorParams CommonOpenCursorParams;
    typedef mozilla::dom::indexedDB::CreateFileParams CreateFileParams;
    typedef mozilla::dom::CreatedWindowInfo CreatedWindowInfo;
    typedef mozilla::dom::indexedDB::DatabaseMetadata DatabaseMetadata;
    typedef mozilla::dom::indexedDB::DatabaseOrMutableFile DatabaseOrMutableFile;
    typedef mozilla::dom::indexedDB::DatabaseRequestParams DatabaseRequestParams;
    typedef mozilla::dom::indexedDB::DatabaseSpec DatabaseSpec;
    typedef mozilla::dom::DimensionInfo DimensionInfo;
    typedef mozilla::dom::IDBCursor::Direction Direction;
    typedef mozilla::dom::DocShellLoadStateInit DocShellLoadStateInit;
    typedef mozilla::ipc::EncryptedFileInputStreamParams EncryptedFileInputStreamParams;
    template<class FooSide> using Endpoint = mozilla::ipc::Endpoint<FooSide>;
    typedef mozilla::dom::ErrorMessageData ErrorMessageData;
    typedef mozilla::dom::FeaturePolicyInfo FeaturePolicyInfo;
    typedef mozilla::dom::indexedDB::FileAddInfo FileAddInfo;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::ipc::FileInputStreamParams FileInputStreamParams;
    typedef mozilla::dom::indexedDB::StructuredCloneFileBase::FileType FileType;
    typedef mozilla::dom::FrameScriptInfo FrameScriptInfo;
    typedef mozilla::ipc::HeaderEntry HeaderEntry;
    typedef mozilla::dom::IDPLVariant IDPLVariant;
    typedef mozilla::dom::IPCBlob IPCBlob;
    typedef mozilla::dom::IPCDataTransfer IPCDataTransfer;
    typedef mozilla::dom::IPCDataTransferData IPCDataTransferData;
    typedef mozilla::dom::IPCDataTransferImage IPCDataTransferImage;
    typedef mozilla::dom::IPCDataTransferItem IPCDataTransferItem;
    typedef mozilla::dom::IPCFile IPCFile;
    typedef mozilla::ipc::IPCRemoteStreamParams IPCRemoteStreamParams;
    typedef mozilla::ipc::IPCRemoteStreamType IPCRemoteStreamType;
    typedef mozilla::ipc::IPCStream IPCStream;
    typedef mozilla::dom::IPDLProperty IPDLProperty;
    typedef mozilla::dom::IPDLVariantValue IPDLVariantValue;
    typedef mozilla::dom::indexedDB::IndexCountParams IndexCountParams;
    typedef mozilla::dom::indexedDB::IndexGetAllKeysParams IndexGetAllKeysParams;
    typedef mozilla::dom::indexedDB::IndexGetAllParams IndexGetAllParams;
    typedef mozilla::dom::indexedDB::IndexGetKeyParams IndexGetKeyParams;
    typedef mozilla::dom::indexedDB::IndexGetParams IndexGetParams;
    typedef mozilla::dom::indexedDB::IndexMetadata IndexMetadata;
    typedef mozilla::dom::indexedDB::IndexOpenCursorParams IndexOpenCursorParams;
    typedef mozilla::dom::indexedDB::IndexOpenKeyCursorParams IndexOpenKeyCursorParams;
    typedef mozilla::dom::indexedDB::IndexUpdateInfo IndexUpdateInfo;
    typedef mozilla::ipc::InputStreamLengthWrapperParams InputStreamLengthWrapperParams;
    typedef mozilla::ipc::InputStreamParams InputStreamParams;
    typedef mozilla::dom::indexedDB::Key Key;
    typedef mozilla::dom::indexedDB::KeyPath KeyPath;
    typedef mozilla::LayoutDeviceIntPoint LayoutDeviceIntPoint;
    typedef mozilla::dom::LoadingSessionHistoryInfo LoadingSessionHistoryInfo;
    typedef mozilla::dom::indexedDB::LoggingInfo LoggingInfo;
    typedef mozilla::ipc::MIMEInputStreamParams MIMEInputStreamParams;
    template<class FooSide> using ManagedEndpoint = mozilla::ipc::ManagedEndpoint<FooSide>;
    typedef mozilla::dom::MaybeDiscardedBrowsingContext MaybeDiscardedBrowsingContext;
    typedef mozilla::dom::MediaMemoryInfo MediaMemoryInfo;
    typedef mozilla::dom::MessageData MessageData;
    typedef mozilla::dom::MessageDataType MessageDataType;
    typedef mozilla::dom::MessagePortIdentifier MessagePortIdentifier;
    typedef mozilla::dom::IDBTransaction::Mode Mode;
    typedef mozilla::ipc::MultiplexInputStreamParams MultiplexInputStreamParams;
    typedef mozilla::dom::indexedDB::ObjectStoreAddParams ObjectStoreAddParams;
    typedef mozilla::dom::indexedDB::ObjectStoreAddPutParams ObjectStoreAddPutParams;
    typedef mozilla::dom::indexedDB::ObjectStoreClearParams ObjectStoreClearParams;
    typedef mozilla::dom::indexedDB::ObjectStoreCountParams ObjectStoreCountParams;
    typedef mozilla::dom::indexedDB::ObjectStoreDeleteParams ObjectStoreDeleteParams;
    typedef mozilla::dom::indexedDB::ObjectStoreGetAllKeysParams ObjectStoreGetAllKeysParams;
    typedef mozilla::dom::indexedDB::ObjectStoreGetAllParams ObjectStoreGetAllParams;
    typedef mozilla::dom::indexedDB::ObjectStoreGetKeyParams ObjectStoreGetKeyParams;
    typedef mozilla::dom::indexedDB::ObjectStoreGetParams ObjectStoreGetParams;
    typedef mozilla::dom::indexedDB::ObjectStoreMetadata ObjectStoreMetadata;
    typedef mozilla::dom::indexedDB::ObjectStoreOpenCursorParams ObjectStoreOpenCursorParams;
    typedef mozilla::dom::indexedDB::ObjectStoreOpenKeyCursorParams ObjectStoreOpenKeyCursorParams;
    typedef mozilla::dom::indexedDB::ObjectStorePutParams ObjectStorePutParams;
    typedef mozilla::dom::indexedDB::ObjectStoreSpec ObjectStoreSpec;
    typedef mozilla::dom::indexedDB::OpenCursorParams OpenCursorParams;
    typedef mozilla::dom::OptionalFileDescriptorSet OptionalFileDescriptorSet;
    typedef mozilla::dom::OwnerShowInfo OwnerShowInfo;
    typedef mozilla::dom::ParentShowInfo ParentShowInfo;
    typedef mozilla::dom::PerformanceInfo PerformanceInfo;
    typedef mozilla::dom::PerformanceMemoryInfo PerformanceMemoryInfo;
    typedef mozilla::dom::quota::PersistenceType PersistenceType;
    typedef base::ProcessId ProcessId;
    typedef mozilla::ipc::ProtocolFdMapping ProtocolFdMapping;
    typedef mozilla::ipc::ProtocolId ProtocolId;
    typedef mozilla::dom::RefMessageData RefMessageData;
    typedef mozilla::ipc::RemoteLazyInputStreamParams RemoteLazyInputStreamParams;
    typedef mozilla::ipc::RemoteLazyInputStreamRef RemoteLazyInputStreamRef;
    typedef mozilla::RemoteLazyStream RemoteLazyStream;
    typedef mozilla::dom::ReplacementChannelConfigInit ReplacementChannelConfigInit;
    typedef mozilla::dom::indexedDB::RequestParams RequestParams;
    typedef mozilla::ipc::ResponseRejectReason ResponseRejectReason;
    typedef mozilla::dom::ScreenDetails ScreenDetails;
    typedef hal::ScreenOrientation ScreenOrientation;
    typedef mozilla::dom::indexedDB::SerializedKeyRange SerializedKeyRange;
    typedef mozilla::SerializedStructuredCloneBuffer SerializedStructuredCloneBuffer;
    typedef mozilla::dom::indexedDB::SerializedStructuredCloneFile SerializedStructuredCloneFile;
    typedef mozilla::dom::indexedDB::SerializedStructuredCloneReadInfo SerializedStructuredCloneReadInfo;
    typedef mozilla::dom::indexedDB::SerializedStructuredCloneWriteInfo SerializedStructuredCloneWriteInfo;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::ipc::SlicedInputStreamParams SlicedInputStreamParams;
    typedef mozilla::ipc::StringInputStreamParams StringInputStreamParams;
    typedef mozilla::gfx::SurfaceFormat SurfaceFormat;
    typedef mozilla::TimeStamp TimeStamp;
    typedef mozilla::dom::TimedChannelInfo TimedChannelInfo;
    typedef mozilla::ipc::Transport Transport;
    typedef mozilla::ipc::TransportDescriptor TransportDescriptor;
    template<class T> using UniquePtr = mozilla::UniquePtr<T>;
    typedef mozilla::null_t null_t;
    typedef mozilla::void_t void_t;
    typedef mozilla::dom::indexedDB::PBackgroundIDBDatabaseFileChild PBackgroundIDBDatabaseFileChild;
    typedef mozilla::dom::indexedDB::PBackgroundIDBDatabaseFileParent PBackgroundIDBDatabaseFileParent;
    typedef mozilla::dom::indexedDB::PBackgroundIDBDatabaseRequestChild PBackgroundIDBDatabaseRequestChild;
    typedef mozilla::dom::indexedDB::PBackgroundIDBDatabaseRequestParent PBackgroundIDBDatabaseRequestParent;
    typedef mozilla::dom::indexedDB::PBackgroundIDBFactoryChild PBackgroundIDBFactoryChild;
    typedef mozilla::dom::indexedDB::PBackgroundIDBFactoryParent PBackgroundIDBFactoryParent;
    typedef mozilla::dom::indexedDB::PBackgroundIDBTransactionChild PBackgroundIDBTransactionChild;
    typedef mozilla::dom::indexedDB::PBackgroundIDBTransactionParent PBackgroundIDBTransactionParent;
    typedef mozilla::dom::indexedDB::PBackgroundIDBVersionChangeTransactionChild PBackgroundIDBVersionChangeTransactionChild;
    typedef mozilla::dom::indexedDB::PBackgroundIDBVersionChangeTransactionParent PBackgroundIDBVersionChangeTransactionParent;
    typedef mozilla::dom::PBackgroundMutableFileChild PBackgroundMutableFileChild;
    typedef mozilla::dom::PBackgroundMutableFileParent PBackgroundMutableFileParent;
    typedef mozilla::ipc::PChildToParentStreamChild PChildToParentStreamChild;
    typedef mozilla::ipc::PChildToParentStreamParent PChildToParentStreamParent;
    typedef mozilla::ipc::PFileDescriptorSetChild PFileDescriptorSetChild;
    typedef mozilla::ipc::PFileDescriptorSetParent PFileDescriptorSetParent;
    typedef mozilla::ipc::PParentToChildStreamChild PParentToChildStreamChild;
    typedef mozilla::ipc::PParentToChildStreamParent PParentToChildStreamParent;
    typedef mozilla::PRemoteLazyInputStreamChild PRemoteLazyInputStreamChild;
    typedef mozilla::PRemoteLazyInputStreamParent PRemoteLazyInputStreamParent;

protected:
    virtual mozilla::ipc::IPCResult
    Recv__delete__();
    virtual mozilla::ipc::IPCResult
    RecvPBackgroundIDBVersionChangeTransactionConstructor(
            PBackgroundIDBVersionChangeTransactionChild* actor,
            const uint64_t& currentVersion,
            const uint64_t& requestedVersion,
            const int64_t& nextObjectStoreId,
            const int64_t& nextIndexId);
    virtual mozilla::ipc::IPCResult
    RecvPBackgroundMutableFileConstructor(
            PBackgroundMutableFileChild* actor,
            const nsString& name,
            const nsString& type);
public:
    typedef mozilla::ipc::IProtocol IProtocol;
    typedef IPC::Message Message;
    typedef base::ProcessHandle ProcessHandle;
    typedef mozilla::ipc::MessageChannel MessageChannel;
    typedef mozilla::ipc::SharedMemory SharedMemory;

public:
    MOZ_IMPLICIT PBackgroundIDBDatabaseChild();

    virtual ~PBackgroundIDBDatabaseChild();

public:
    PBackgroundIDBFactoryChild*
    Manager() const;

    void
    ManagedPBackgroundIDBDatabaseFileChild(nsTArray<PBackgroundIDBDatabaseFileChild*>& aArr) const;
    const ManagedContainer<PBackgroundIDBDatabaseFileChild>&
    ManagedPBackgroundIDBDatabaseFileChild() const;

    void
    ManagedPBackgroundIDBDatabaseRequestChild(nsTArray<PBackgroundIDBDatabaseRequestChild*>& aArr) const;
    const ManagedContainer<PBackgroundIDBDatabaseRequestChild>&
    ManagedPBackgroundIDBDatabaseRequestChild() const;

    void
    ManagedPBackgroundIDBTransactionChild(nsTArray<PBackgroundIDBTransactionChild*>& aArr) const;
    const ManagedContainer<PBackgroundIDBTransactionChild>&
    ManagedPBackgroundIDBTransactionChild() const;

    void
    ManagedPBackgroundIDBVersionChangeTransactionChild(nsTArray<PBackgroundIDBVersionChangeTransactionChild*>& aArr) const;
    const ManagedContainer<PBackgroundIDBVersionChangeTransactionChild>&
    ManagedPBackgroundIDBVersionChangeTransactionChild() const;

    void
    ManagedPBackgroundMutableFileChild(nsTArray<PBackgroundMutableFileChild*>& aArr) const;
    const ManagedContainer<PBackgroundMutableFileChild>&
    ManagedPBackgroundMutableFileChild() const;

    void
    AllManagedActors(nsTArray<RefPtr<mozilla::ipc::ActorLifecycleProxy>>& arr__) const override;

    ManagedEndpoint<PBackgroundIDBDatabaseFileParent>
    OpenPBackgroundIDBDatabaseFileEndpoint(PBackgroundIDBDatabaseFileChild* aActor);
    bool
    BindPBackgroundIDBDatabaseFileEndpoint(
            ManagedEndpoint<PBackgroundIDBDatabaseFileChild> aEndpoint,
            PBackgroundIDBDatabaseFileChild* aActor);

    ManagedEndpoint<PBackgroundIDBDatabaseRequestParent>
    OpenPBackgroundIDBDatabaseRequestEndpoint(PBackgroundIDBDatabaseRequestChild* aActor);
    bool
    BindPBackgroundIDBDatabaseRequestEndpoint(
            ManagedEndpoint<PBackgroundIDBDatabaseRequestChild> aEndpoint,
            PBackgroundIDBDatabaseRequestChild* aActor);

    ManagedEndpoint<PBackgroundIDBTransactionParent>
    OpenPBackgroundIDBTransactionEndpoint(PBackgroundIDBTransactionChild* aActor);
    bool
    BindPBackgroundIDBTransactionEndpoint(
            ManagedEndpoint<PBackgroundIDBTransactionChild> aEndpoint,
            PBackgroundIDBTransactionChild* aActor);

    ManagedEndpoint<PBackgroundIDBVersionChangeTransactionParent>
    OpenPBackgroundIDBVersionChangeTransactionEndpoint(PBackgroundIDBVersionChangeTransactionChild* aActor);
    bool
    BindPBackgroundIDBVersionChangeTransactionEndpoint(
            ManagedEndpoint<PBackgroundIDBVersionChangeTransactionChild> aEndpoint,
            PBackgroundIDBVersionChangeTransactionChild* aActor);

    ManagedEndpoint<PBackgroundMutableFileParent>
    OpenPBackgroundMutableFileEndpoint(PBackgroundMutableFileChild* aActor);
    bool
    BindPBackgroundMutableFileEndpoint(
            ManagedEndpoint<PBackgroundMutableFileChild> aEndpoint,
            PBackgroundMutableFileChild* aActor);

    bool
    SendDeleteMe();

    bool
    SendBlocked();

    bool
    SendClose();

    PBackgroundIDBDatabaseFileChild*
    SendPBackgroundIDBDatabaseFileConstructor(const IPCBlob& blob);

    PBackgroundIDBDatabaseFileChild*
    SendPBackgroundIDBDatabaseFileConstructor(
            PBackgroundIDBDatabaseFileChild* actor,
            const IPCBlob& blob);

    PBackgroundIDBDatabaseRequestChild*
    SendPBackgroundIDBDatabaseRequestConstructor(const DatabaseRequestParams& params);

    PBackgroundIDBDatabaseRequestChild*
    SendPBackgroundIDBDatabaseRequestConstructor(
            PBackgroundIDBDatabaseRequestChild* actor,
            const DatabaseRequestParams& params);

    PBackgroundIDBTransactionChild*
    SendPBackgroundIDBTransactionConstructor(
            PBackgroundIDBTransactionChild* actor,
            const nsTArray<nsString>& objectStoreNames,
            const Mode& mode);

    void
    RemoveManagee(
            int32_t aProtocolId,
            IProtocol* aListener) override;
    void
    DeallocManagee(
            int32_t aProtocolId,
            IProtocol* aListener) override;

    Result
    OnMessageReceived(const Message& msg__) override;

    Result
    OnMessageReceived(
            const Message& msg__,
            Message*& reply__) override;

    Result
    OnCallReceived(
            const Message& msg__,
            Message*& reply__) override;

private:
    void
    ClearSubtree();

    ManagedContainer<PBackgroundIDBDatabaseFileChild> mManagedPBackgroundIDBDatabaseFileChild;
    ManagedContainer<PBackgroundIDBDatabaseRequestChild> mManagedPBackgroundIDBDatabaseRequestChild;
    ManagedContainer<PBackgroundIDBTransactionChild> mManagedPBackgroundIDBTransactionChild;
    ManagedContainer<PBackgroundIDBVersionChangeTransactionChild> mManagedPBackgroundIDBVersionChangeTransactionChild;
    ManagedContainer<PBackgroundMutableFileChild> mManagedPBackgroundMutableFileChild;
};


} // namespace indexedDB
} // namespace dom
} // namespace mozilla
namespace mozilla {
namespace ipc {
template<>
struct IPDLParamTraits <mozilla::dom::indexedDB::PBackgroundIDBDatabaseChild*>
{
    typedef mozilla::dom::indexedDB::PBackgroundIDBDatabaseChild* paramType;
    static void
    Write(
            IPC::Message* aMsg,
            mozilla::ipc::IProtocol* aActor,
            const paramType& aVar);
    static bool
    Read(
            const IPC::Message* aMsg,
            PickleIterator* aIter,
            mozilla::ipc::IProtocol* aActor,
            paramType* aVar);
};
} // namespace ipc
} // namespace mozilla

#endif // ifndef PBackgroundIDBDatabaseChild_h
