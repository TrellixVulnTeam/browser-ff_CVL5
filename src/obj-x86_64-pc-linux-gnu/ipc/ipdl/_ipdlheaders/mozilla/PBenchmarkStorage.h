//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PBenchmarkStorage_h
#define PBenchmarkStorage_h

#include "mozilla/Attributes.h"
#include "IPCMessageStart.h"
#include "mozilla/RefPtr.h"
#include "nsString.h"
#include "nsTArray.h"
#include "nsTHashtable.h"
#include "mozilla/MozPromise.h"
#include "mozilla/OperatorNewExtensions.h"
#include "mozilla/UniquePtr.h"
#include "mozilla/ipc/ByteBuf.h"
#include "mozilla/ipc/FileDescriptor.h"
#include "mozilla/ipc/ProtocolUtilsFwd.h"
#include "mozilla/ipc/Shmem.h"

namespace mozilla {
class PBenchmarkStorageParent;
} // namespace mozilla
namespace mozilla {
class PBenchmarkStorageChild;
} // namespace mozilla

//-----------------------------------------------------------------------------
// Code common to PBenchmarkStorageChild and PBenchmarkStorageParent
//
namespace mozilla {
namespace PBenchmarkStorage {

nsresult
CreateEndpoints(
        base::ProcessId aParentDestPid,
        base::ProcessId aChildDestPid,
        mozilla::ipc::Endpoint<mozilla::PBenchmarkStorageParent>* aParent,
        mozilla::ipc::Endpoint<mozilla::PBenchmarkStorageChild>* aChild);

enum MessageType {
    PBenchmarkStorageStart = PBenchmarkStorageMsgStart << 16,
    Msg_Put__ID,
    Msg_Get__ID,
    Reply_Get__ID,
    Msg_CheckVersion__ID,
    Msg___delete____ID,
    Reply___delete____ID,
    PBenchmarkStorageEnd
};

IPC::Message*
Msg_Put(int32_t routingId);

IPC::Message*
Msg_Get(int32_t routingId);
IPC::Message*
Reply_Get(int32_t routingId);

IPC::Message*
Msg_CheckVersion(int32_t routingId);

IPC::Message*
Msg___delete__(int32_t routingId);
IPC::Message*
Reply___delete__(int32_t routingId);



} // namespace PBenchmarkStorage
} // namespace mozilla

#endif // ifndef PBenchmarkStorage_h
