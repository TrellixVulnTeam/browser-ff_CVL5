//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef POfflineCacheUpdate_h
#define POfflineCacheUpdate_h

#include "mozilla/Attributes.h"
#include "IPCMessageStart.h"
#include "mozilla/RefPtr.h"
#include "nsString.h"
#include "nsTArray.h"
#include "nsTHashtable.h"
#include "mozilla/MozPromise.h"
#include "mozilla/OperatorNewExtensions.h"
#include "mozilla/UniquePtr.h"
#include "mozilla/ipc/ByteBuf.h"
#include "mozilla/ipc/FileDescriptor.h"
#include "mozilla/ipc/ProtocolUtilsFwd.h"
#include "mozilla/ipc/Shmem.h"

namespace mozilla {
namespace docshell {
class POfflineCacheUpdateParent;
} // namespace docshell
} // namespace mozilla
namespace mozilla {
namespace docshell {
class POfflineCacheUpdateChild;
} // namespace docshell
} // namespace mozilla

//-----------------------------------------------------------------------------
// Code common to POfflineCacheUpdateChild and POfflineCacheUpdateParent
//
namespace mozilla {
namespace docshell {
namespace POfflineCacheUpdate {

nsresult
CreateEndpoints(
        base::ProcessId aParentDestPid,
        base::ProcessId aChildDestPid,
        mozilla::ipc::Endpoint<mozilla::docshell::POfflineCacheUpdateParent>* aParent,
        mozilla::ipc::Endpoint<mozilla::docshell::POfflineCacheUpdateChild>* aChild);

enum MessageType {
    POfflineCacheUpdateStart = POfflineCacheUpdateMsgStart << 16,
    Msg___delete____ID,
    Reply___delete____ID,
    Msg_NotifyStateEvent__ID,
    Msg_AssociateDocuments__ID,
    Msg_Finish__ID,
    POfflineCacheUpdateEnd
};

IPC::Message*
Msg___delete__(int32_t routingId);
IPC::Message*
Reply___delete__(int32_t routingId);

IPC::Message*
Msg_NotifyStateEvent(int32_t routingId);

IPC::Message*
Msg_AssociateDocuments(int32_t routingId);

IPC::Message*
Msg_Finish(int32_t routingId);



} // namespace POfflineCacheUpdate
} // namespace docshell
} // namespace mozilla

#endif // ifndef POfflineCacheUpdate_h
