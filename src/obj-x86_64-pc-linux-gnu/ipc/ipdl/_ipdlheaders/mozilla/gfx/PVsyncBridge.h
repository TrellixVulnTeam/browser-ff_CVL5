//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PVsyncBridge_h
#define PVsyncBridge_h

#include "mozilla/Attributes.h"
#include "IPCMessageStart.h"
#include "mozilla/RefPtr.h"
#include "nsString.h"
#include "nsTArray.h"
#include "nsTHashtable.h"
#include "mozilla/MozPromise.h"
#include "mozilla/OperatorNewExtensions.h"
#include "mozilla/UniquePtr.h"
#include "mozilla/ipc/ByteBuf.h"
#include "mozilla/ipc/FileDescriptor.h"
#include "mozilla/ipc/ProtocolUtilsFwd.h"
#include "mozilla/ipc/Shmem.h"

namespace mozilla {
namespace gfx {
class PVsyncBridgeParent;
} // namespace gfx
} // namespace mozilla
namespace mozilla {
namespace gfx {
class PVsyncBridgeChild;
} // namespace gfx
} // namespace mozilla

//-----------------------------------------------------------------------------
// Code common to PVsyncBridgeChild and PVsyncBridgeParent
//
namespace mozilla {
namespace gfx {
namespace PVsyncBridge {

nsresult
CreateEndpoints(
        base::ProcessId aParentDestPid,
        base::ProcessId aChildDestPid,
        mozilla::ipc::Endpoint<mozilla::gfx::PVsyncBridgeParent>* aParent,
        mozilla::ipc::Endpoint<mozilla::gfx::PVsyncBridgeChild>* aChild);

enum MessageType {
    PVsyncBridgeStart = PVsyncBridgeMsgStart << 16,
    Msg_NotifyVsync__ID,
    PVsyncBridgeEnd
};

IPC::Message*
Msg_NotifyVsync(int32_t routingId);



} // namespace PVsyncBridge
} // namespace gfx
} // namespace mozilla

#endif // ifndef PVsyncBridge_h
