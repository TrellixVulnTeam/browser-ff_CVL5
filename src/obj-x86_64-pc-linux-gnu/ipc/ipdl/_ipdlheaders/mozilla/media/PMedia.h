//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PMedia_h
#define PMedia_h

#include "mozilla/Attributes.h"
#include "IPCMessageStart.h"
#include "mozilla/RefPtr.h"
#include "nsString.h"
#include "nsTArray.h"
#include "nsTHashtable.h"
#include "mozilla/MozPromise.h"
#include "mozilla/OperatorNewExtensions.h"
#include "mozilla/UniquePtr.h"
#include "mozilla/ipc/ByteBuf.h"
#include "mozilla/ipc/FileDescriptor.h"
#include "mozilla/ipc/ProtocolUtilsFwd.h"
#include "mozilla/ipc/Shmem.h"
#include "mozilla/ipc/PBackgroundSharedTypes.h"

namespace mozilla {
namespace media {
class PMediaParent;
} // namespace media
} // namespace mozilla
namespace mozilla {
namespace media {
class PMediaChild;
} // namespace media
} // namespace mozilla

//-----------------------------------------------------------------------------
// Code common to PMediaChild and PMediaParent
//
namespace mozilla {
namespace media {
namespace PMedia {

nsresult
CreateEndpoints(
        base::ProcessId aParentDestPid,
        base::ProcessId aChildDestPid,
        mozilla::ipc::Endpoint<mozilla::media::PMediaParent>* aParent,
        mozilla::ipc::Endpoint<mozilla::media::PMediaChild>* aChild);

enum MessageType {
    PMediaStart = PMediaMsgStart << 16,
    Msg_GetPrincipalKey__ID,
    Reply_GetPrincipalKey__ID,
    Msg_SanitizeOriginKeys__ID,
    Msg___delete____ID,
    Reply___delete____ID,
    PMediaEnd
};

IPC::Message*
Msg_GetPrincipalKey(int32_t routingId);
IPC::Message*
Reply_GetPrincipalKey(int32_t routingId);

IPC::Message*
Msg_SanitizeOriginKeys(int32_t routingId);

IPC::Message*
Msg___delete__(int32_t routingId);
IPC::Message*
Reply___delete__(int32_t routingId);



} // namespace PMedia
} // namespace media
} // namespace mozilla

#endif // ifndef PMedia_h
