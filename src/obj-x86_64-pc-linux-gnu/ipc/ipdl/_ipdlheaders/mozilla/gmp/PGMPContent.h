//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PGMPContent_h
#define PGMPContent_h

#include "mozilla/Attributes.h"
#include "IPCMessageStart.h"
#include "mozilla/RefPtr.h"
#include "nsString.h"
#include "nsTArray.h"
#include "nsTHashtable.h"
#include "mozilla/MozPromise.h"
#include "mozilla/OperatorNewExtensions.h"
#include "mozilla/UniquePtr.h"
#include "mozilla/ipc/ByteBuf.h"
#include "mozilla/ipc/FileDescriptor.h"
#include "mozilla/ipc/ProtocolUtilsFwd.h"
#include "mozilla/ipc/Shmem.h"

namespace mozilla {
namespace gmp {
class PGMPContentParent;
} // namespace gmp
} // namespace mozilla
namespace mozilla {
namespace gmp {
class PGMPContentChild;
} // namespace gmp
} // namespace mozilla

//-----------------------------------------------------------------------------
// Code common to PGMPContentChild and PGMPContentParent
//
namespace mozilla {
namespace gmp {
namespace PGMPContent {

nsresult
CreateEndpoints(
        base::ProcessId aParentDestPid,
        base::ProcessId aChildDestPid,
        mozilla::ipc::Endpoint<mozilla::gmp::PGMPContentParent>* aParent,
        mozilla::ipc::Endpoint<mozilla::gmp::PGMPContentChild>* aChild);

enum MessageType {
    PGMPContentStart = PGMPContentMsgStart << 16,
    Msg_PGMPVideoDecoderConstructor__ID,
    Reply_PGMPVideoDecoderConstructor__ID,
    Msg_PGMPVideoEncoderConstructor__ID,
    Reply_PGMPVideoEncoderConstructor__ID,
    Msg_PChromiumCDMConstructor__ID,
    Reply_PChromiumCDMConstructor__ID,
    PGMPContentEnd
};

IPC::Message*
Msg_PGMPVideoDecoderConstructor(int32_t routingId);
IPC::Message*
Reply_PGMPVideoDecoderConstructor(int32_t routingId);

IPC::Message*
Msg_PGMPVideoEncoderConstructor(int32_t routingId);
IPC::Message*
Reply_PGMPVideoEncoderConstructor(int32_t routingId);

IPC::Message*
Msg_PChromiumCDMConstructor(int32_t routingId);
IPC::Message*
Reply_PChromiumCDMConstructor(int32_t routingId);



} // namespace PGMPContent
} // namespace gmp
} // namespace mozilla

#endif // ifndef PGMPContent_h
