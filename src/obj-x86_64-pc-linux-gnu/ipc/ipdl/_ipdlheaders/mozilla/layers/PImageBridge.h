//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PImageBridge_h
#define PImageBridge_h

#include "mozilla/Attributes.h"
#include "IPCMessageStart.h"
#include "mozilla/RefPtr.h"
#include "nsString.h"
#include "nsTArray.h"
#include "nsTHashtable.h"
#include "mozilla/MozPromise.h"
#include "mozilla/OperatorNewExtensions.h"
#include "mozilla/UniquePtr.h"
#include "mozilla/ipc/ByteBuf.h"
#include "mozilla/ipc/FileDescriptor.h"
#include "mozilla/ipc/ProtocolUtilsFwd.h"
#include "mozilla/ipc/Shmem.h"
#include "mozilla/layers/LayersSurfaces.h"
#include "mozilla/layers/LayersMessages.h"
#include "mozilla/ipc/ProtocolTypes.h"

namespace mozilla {
namespace layers {
class PImageBridgeParent;
} // namespace layers
} // namespace mozilla
namespace mozilla {
namespace layers {
class PImageBridgeChild;
} // namespace layers
} // namespace mozilla

//-----------------------------------------------------------------------------
// Code common to PImageBridgeChild and PImageBridgeParent
//
namespace mozilla {
namespace layers {
namespace PImageBridge {

nsresult
CreateEndpoints(
        base::ProcessId aParentDestPid,
        base::ProcessId aChildDestPid,
        mozilla::ipc::Endpoint<mozilla::layers::PImageBridgeParent>* aParent,
        mozilla::ipc::Endpoint<mozilla::layers::PImageBridgeChild>* aChild);

enum MessageType {
    PImageBridgeStart = PImageBridgeMsgStart << 16,
    Msg_ParentAsyncMessages__ID,
    Msg_DidComposite__ID,
    Msg_ReportFramesDropped__ID,
    Msg_Update__ID,
    Msg_WillClose__ID,
    Msg_PTextureConstructor__ID,
    Reply_PTextureConstructor__ID,
    Msg_PMediaSystemResourceManagerConstructor__ID,
    Reply_PMediaSystemResourceManagerConstructor__ID,
    Msg_NewCompositable__ID,
    Reply_NewCompositable__ID,
    Msg_ReleaseCompositable__ID,
    Msg_MakeAsyncPluginSurfaces__ID,
    Reply_MakeAsyncPluginSurfaces__ID,
    Msg_UpdateAsyncPluginSurface__ID,
    Msg_ReadbackAsyncPluginSurface__ID,
    Reply_ReadbackAsyncPluginSurface__ID,
    Msg_RemoveAsyncPluginSurface__ID,
    PImageBridgeEnd
};

IPC::Message*
Msg_ParentAsyncMessages(int32_t routingId);

IPC::Message*
Msg_DidComposite(int32_t routingId);

IPC::Message*
Msg_ReportFramesDropped(int32_t routingId);

IPC::Message*
Msg_Update(int32_t routingId);

IPC::Message*
Msg_WillClose(int32_t routingId);

IPC::Message*
Msg_PTextureConstructor(int32_t routingId);
IPC::Message*
Reply_PTextureConstructor(int32_t routingId);

IPC::Message*
Msg_PMediaSystemResourceManagerConstructor(int32_t routingId);
IPC::Message*
Reply_PMediaSystemResourceManagerConstructor(int32_t routingId);

IPC::Message*
Msg_NewCompositable(int32_t routingId);
IPC::Message*
Reply_NewCompositable(int32_t routingId);

IPC::Message*
Msg_ReleaseCompositable(int32_t routingId);

IPC::Message*
Msg_MakeAsyncPluginSurfaces(int32_t routingId);
IPC::Message*
Reply_MakeAsyncPluginSurfaces(int32_t routingId);

IPC::Message*
Msg_UpdateAsyncPluginSurface(int32_t routingId);

IPC::Message*
Msg_ReadbackAsyncPluginSurface(int32_t routingId);
IPC::Message*
Reply_ReadbackAsyncPluginSurface(int32_t routingId);

IPC::Message*
Msg_RemoveAsyncPluginSurface(int32_t routingId);



} // namespace PImageBridge
} // namespace layers
} // namespace mozilla

#endif // ifndef PImageBridge_h
