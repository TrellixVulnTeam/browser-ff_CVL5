//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PUiCompositorController_h
#define PUiCompositorController_h

#include "mozilla/Attributes.h"
#include "IPCMessageStart.h"
#include "mozilla/RefPtr.h"
#include "nsString.h"
#include "nsTArray.h"
#include "nsTHashtable.h"
#include "mozilla/MozPromise.h"
#include "mozilla/OperatorNewExtensions.h"
#include "mozilla/UniquePtr.h"
#include "mozilla/ipc/ByteBuf.h"
#include "mozilla/ipc/FileDescriptor.h"
#include "mozilla/ipc/ProtocolUtilsFwd.h"
#include "mozilla/ipc/Shmem.h"

namespace mozilla {
namespace layers {
class PUiCompositorControllerParent;
} // namespace layers
} // namespace mozilla
namespace mozilla {
namespace layers {
class PUiCompositorControllerChild;
} // namespace layers
} // namespace mozilla

//-----------------------------------------------------------------------------
// Code common to PUiCompositorControllerChild and PUiCompositorControllerParent
//
namespace mozilla {
namespace layers {
namespace PUiCompositorController {

nsresult
CreateEndpoints(
        base::ProcessId aParentDestPid,
        base::ProcessId aChildDestPid,
        mozilla::ipc::Endpoint<mozilla::layers::PUiCompositorControllerParent>* aParent,
        mozilla::ipc::Endpoint<mozilla::layers::PUiCompositorControllerChild>* aChild);

enum MessageType {
    PUiCompositorControllerStart = PUiCompositorControllerMsgStart << 16,
    Msg_Pause__ID,
    Reply_Pause__ID,
    Msg_Resume__ID,
    Reply_Resume__ID,
    Msg_ResumeAndResize__ID,
    Reply_ResumeAndResize__ID,
    Msg_InvalidateAndRender__ID,
    Msg_MaxToolbarHeight__ID,
    Msg_FixedBottomOffset__ID,
    Msg_DefaultClearColor__ID,
    Msg_RequestScreenPixels__ID,
    Msg_EnableLayerUpdateNotifications__ID,
    Msg_ToolbarAnimatorMessageFromCompositor__ID,
    Msg_RootFrameMetrics__ID,
    Msg_ScreenPixels__ID,
    PUiCompositorControllerEnd
};

IPC::Message*
Msg_Pause(int32_t routingId);
IPC::Message*
Reply_Pause(int32_t routingId);

IPC::Message*
Msg_Resume(int32_t routingId);
IPC::Message*
Reply_Resume(int32_t routingId);

IPC::Message*
Msg_ResumeAndResize(int32_t routingId);
IPC::Message*
Reply_ResumeAndResize(int32_t routingId);

IPC::Message*
Msg_InvalidateAndRender(int32_t routingId);

IPC::Message*
Msg_MaxToolbarHeight(int32_t routingId);

IPC::Message*
Msg_FixedBottomOffset(int32_t routingId);

IPC::Message*
Msg_DefaultClearColor(int32_t routingId);

IPC::Message*
Msg_RequestScreenPixels(int32_t routingId);

IPC::Message*
Msg_EnableLayerUpdateNotifications(int32_t routingId);

IPC::Message*
Msg_ToolbarAnimatorMessageFromCompositor(int32_t routingId);

IPC::Message*
Msg_RootFrameMetrics(int32_t routingId);

IPC::Message*
Msg_ScreenPixels(int32_t routingId);



} // namespace PUiCompositorController
} // namespace layers
} // namespace mozilla

#endif // ifndef PUiCompositorController_h
