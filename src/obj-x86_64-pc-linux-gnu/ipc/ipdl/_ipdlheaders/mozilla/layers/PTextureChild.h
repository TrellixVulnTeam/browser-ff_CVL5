//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PTextureChild_h
#define PTextureChild_h

#include "mozilla/layers/PTexture.h"
#ifdef DEBUG
#include "prenv.h"
#endif  // DEBUG

#include "mozilla/Tainting.h"
#include "mozilla/ipc/MessageChannel.h"
#include "mozilla/ipc/ProtocolUtils.h"
// Headers for things that cannot be forward declared
#include "mozilla/layers/CompositorTypes.h"

namespace mozilla {
namespace layers {
class PLayerTransactionChild;
} // namespace layers
} // namespace mozilla
namespace mozilla {
namespace layers {
class PLayerTransactionParent;
} // namespace layers
} // namespace mozilla

namespace mozilla {
namespace layers {
class PCompositorBridgeChild;
} // namespace layers
} // namespace mozilla
namespace mozilla {
namespace layers {
class PCompositorBridgeParent;
} // namespace layers
} // namespace mozilla

namespace mozilla {
namespace layers {
class PImageBridgeChild;
} // namespace layers
} // namespace mozilla
namespace mozilla {
namespace layers {
class PImageBridgeParent;
} // namespace layers
} // namespace mozilla

namespace mozilla {
namespace layers {
class PVideoBridgeChild;
} // namespace layers
} // namespace mozilla
namespace mozilla {
namespace layers {
class PVideoBridgeParent;
} // namespace layers
} // namespace mozilla

namespace mozilla {
namespace layers {
class PLayerTransactionChild;
} // namespace layers
} // namespace mozilla

namespace mozilla {
namespace layers {
class PVideoBridgeChild;
} // namespace layers
} // namespace mozilla

namespace mozilla {
namespace layers {
class PWebRenderBridgeChild;
} // namespace layers
} // namespace mozilla

namespace mozilla {
namespace layers {
class PImageBridgeChild;
} // namespace layers
} // namespace mozilla

namespace mozilla {
namespace layers {
class PCompositorBridgeChild;
} // namespace layers
} // namespace mozilla

namespace mozilla {
namespace layers {


class PTextureChild :
    public mozilla::ipc::IProtocol
{
private:
    friend class mozilla::layers::PLayerTransactionChild;
    friend class mozilla::layers::PVideoBridgeChild;
    friend class mozilla::layers::PWebRenderBridgeChild;
    friend class mozilla::layers::PImageBridgeChild;
    friend class mozilla::layers::PCompositorBridgeChild;
protected:
    typedef mozilla::ipc::ActorHandle ActorHandle;
    typedef mozilla::layers::BufferDescriptor BufferDescriptor;
    typedef mozilla::ipc::ByteBuf ByteBuf;
    typedef mozilla::gfx::ColorDepth ColorDepth;
    typedef mozilla::gfx::ColorRange ColorRange;
    typedef mozilla::layers::EGLImageDescriptor EGLImageDescriptor;
    template<class FooSide> using Endpoint = mozilla::ipc::Endpoint<FooSide>;
    typedef mozilla::ipc::FileDescriptor FileDescriptor;
    typedef mozilla::ipc::SharedMemoryBasic::Handle Handle;
    typedef mozilla::gfx::IntRect IntRect;
    typedef mozilla::gfx::IntSize IntSize;
    template<class FooSide> using ManagedEndpoint = mozilla::ipc::ManagedEndpoint<FooSide>;
    typedef mozilla::layers::MaybeVideoBridgeSource MaybeVideoBridgeSource;
    typedef mozilla::layers::MemoryOrShmem MemoryOrShmem;
    typedef base::ProcessId ProcessId;
    typedef mozilla::ipc::ProtocolId ProtocolId;
    typedef mozilla::layers::RGBDescriptor RGBDescriptor;
    typedef mozilla::layers::RemoteDecoderVideoSubDescriptor RemoteDecoderVideoSubDescriptor;
    typedef mozilla::ipc::ResponseRejectReason ResponseRejectReason;
    typedef mozilla::ipc::Shmem Shmem;
    typedef mozilla::StereoMode StereoMode;
    typedef mozilla::layers::SurfaceDescriptor SurfaceDescriptor;
    typedef mozilla::layers::SurfaceDescriptorAndroidHardwareBuffer SurfaceDescriptorAndroidHardwareBuffer;
    typedef mozilla::layers::SurfaceDescriptorBuffer SurfaceDescriptorBuffer;
    typedef mozilla::layers::SurfaceDescriptorD3D10 SurfaceDescriptorD3D10;
    typedef mozilla::layers::SurfaceDescriptorDIB SurfaceDescriptorDIB;
    typedef mozilla::layers::SurfaceDescriptorDMABuf SurfaceDescriptorDMABuf;
    typedef mozilla::layers::SurfaceDescriptorDXGIYCbCr SurfaceDescriptorDXGIYCbCr;
    typedef mozilla::layers::SurfaceDescriptorFileMapping SurfaceDescriptorFileMapping;
    typedef mozilla::layers::SurfaceDescriptorGPUVideo SurfaceDescriptorGPUVideo;
    typedef mozilla::layers::SurfaceDescriptorMacIOSurface SurfaceDescriptorMacIOSurface;
    typedef mozilla::layers::SurfaceDescriptorPlugin SurfaceDescriptorPlugin;
    typedef mozilla::layers::SurfaceDescriptorRecorded SurfaceDescriptorRecorded;
    typedef mozilla::layers::SurfaceDescriptorRemoteDecoder SurfaceDescriptorRemoteDecoder;
    typedef mozilla::layers::SurfaceDescriptorShared SurfaceDescriptorShared;
    typedef mozilla::layers::SurfaceDescriptorSharedGLTexture SurfaceDescriptorSharedGLTexture;
    typedef mozilla::layers::SurfaceDescriptorX11 SurfaceDescriptorX11;
    typedef mozilla::gfx::SurfaceFormat SurfaceFormat;
    typedef mozilla::layers::SurfaceTextureDescriptor SurfaceTextureDescriptor;
    typedef mozilla::layers::TextureFlags TextureFlags;
    typedef mozilla::ipc::Transport Transport;
    typedef mozilla::ipc::TransportDescriptor TransportDescriptor;
    template<class T> using UniquePtr = mozilla::UniquePtr<T>;
    typedef mozilla::WindowsHandle WindowsHandle;
    typedef mozilla::layers::YCbCrDescriptor YCbCrDescriptor;
    typedef mozilla::gfx::YUVColorSpace YUVColorSpace;
    typedef mozilla::null_t null_t;
    typedef mozilla::layers::PLayerTransactionChild PLayerTransactionChild;
    typedef mozilla::layers::PLayerTransactionParent PLayerTransactionParent;
    typedef mozilla::layers::PCompositorBridgeChild PCompositorBridgeChild;
    typedef mozilla::layers::PCompositorBridgeParent PCompositorBridgeParent;
    typedef mozilla::layers::PImageBridgeChild PImageBridgeChild;
    typedef mozilla::layers::PImageBridgeParent PImageBridgeParent;
    typedef mozilla::layers::PVideoBridgeChild PVideoBridgeChild;
    typedef mozilla::layers::PVideoBridgeParent PVideoBridgeParent;

protected:
    virtual mozilla::ipc::IPCResult
    Recv__delete__();
public:
    typedef mozilla::ipc::IProtocol IProtocol;
    typedef IPC::Message Message;
    typedef base::ProcessHandle ProcessHandle;
    typedef mozilla::ipc::MessageChannel MessageChannel;
    typedef mozilla::ipc::SharedMemory SharedMemory;

public:
    MOZ_IMPLICIT PTextureChild();

    virtual ~PTextureChild();

public:
    void
    AllManagedActors(nsTArray<RefPtr<mozilla::ipc::ActorLifecycleProxy>>& arr__) const override;

    bool
    SendDestroy();

    bool
    SendRecycleTexture(const TextureFlags& aTextureFlags);

    void
    RemoveManagee(
            int32_t aProtocolId,
            IProtocol* aListener) override;
    void
    DeallocManagee(
            int32_t aProtocolId,
            IProtocol* aListener) override;

    Result
    OnMessageReceived(const Message& msg__) override;

    Result
    OnMessageReceived(
            const Message& msg__,
            Message*& reply__) override;

    Result
    OnCallReceived(
            const Message& msg__,
            Message*& reply__) override;

private:
    void
    ClearSubtree();

};


} // namespace layers
} // namespace mozilla
namespace mozilla {
namespace ipc {
template<>
struct IPDLParamTraits <mozilla::layers::PTextureChild*>
{
    typedef mozilla::layers::PTextureChild* paramType;
    static void
    Write(
            IPC::Message* aMsg,
            mozilla::ipc::IProtocol* aActor,
            const paramType& aVar);
    static bool
    Read(
            const IPC::Message* aMsg,
            PickleIterator* aIter,
            mozilla::ipc::IProtocol* aActor,
            paramType* aVar);
};
} // namespace ipc
} // namespace mozilla

#endif // ifndef PTextureChild_h
