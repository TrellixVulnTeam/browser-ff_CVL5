//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PVerifySSLServerCert_h
#define PVerifySSLServerCert_h

#include "mozilla/Attributes.h"
#include "IPCMessageStart.h"
#include "mozilla/RefPtr.h"
#include "nsString.h"
#include "nsTArray.h"
#include "nsTHashtable.h"
#include "mozilla/MozPromise.h"
#include "mozilla/OperatorNewExtensions.h"
#include "mozilla/UniquePtr.h"
#include "mozilla/ipc/ByteBuf.h"
#include "mozilla/ipc/FileDescriptor.h"
#include "mozilla/ipc/ProtocolUtilsFwd.h"
#include "mozilla/ipc/Shmem.h"
#include "mozilla/psm/PSMIPCTypes.h"

namespace mozilla {
namespace psm {
class PVerifySSLServerCertParent;
} // namespace psm
} // namespace mozilla
namespace mozilla {
namespace psm {
class PVerifySSLServerCertChild;
} // namespace psm
} // namespace mozilla

//-----------------------------------------------------------------------------
// Code common to PVerifySSLServerCertChild and PVerifySSLServerCertParent
//
namespace mozilla {
namespace psm {
namespace PVerifySSLServerCert {

nsresult
CreateEndpoints(
        base::ProcessId aParentDestPid,
        base::ProcessId aChildDestPid,
        mozilla::ipc::Endpoint<mozilla::psm::PVerifySSLServerCertParent>* aParent,
        mozilla::ipc::Endpoint<mozilla::psm::PVerifySSLServerCertChild>* aChild);

enum MessageType {
    PVerifySSLServerCertStart = PVerifySSLServerCertMsgStart << 16,
    Msg_OnVerifiedSSLServerCertSuccess__ID,
    Msg_OnVerifiedSSLServerCertFailure__ID,
    Msg___delete____ID,
    Reply___delete____ID,
    PVerifySSLServerCertEnd
};

IPC::Message*
Msg_OnVerifiedSSLServerCertSuccess(int32_t routingId);

IPC::Message*
Msg_OnVerifiedSSLServerCertFailure(int32_t routingId);

IPC::Message*
Msg___delete__(int32_t routingId);
IPC::Message*
Reply___delete__(int32_t routingId);



} // namespace PVerifySSLServerCert
} // namespace psm
} // namespace mozilla

#endif // ifndef PVerifySSLServerCert_h
