//
// Automatically generated by ipdlc.
// Edit at your own risk
//

#ifndef PBackground_h
#define PBackground_h

#include "mozilla/Attributes.h"
#include "IPCMessageStart.h"
#include "mozilla/RefPtr.h"
#include "nsString.h"
#include "nsTArray.h"
#include "nsTHashtable.h"
#include "mozilla/MozPromise.h"
#include "mozilla/OperatorNewExtensions.h"
#include "mozilla/UniquePtr.h"
#include "mozilla/ipc/ByteBuf.h"
#include "mozilla/ipc/FileDescriptor.h"
#include "mozilla/ipc/ProtocolUtilsFwd.h"
#include "mozilla/ipc/Shmem.h"
#include "mozilla/dom/DOMTypes.h"
#include "mozilla/dom/IPCBlob.h"
#include "mozilla/dom/IPCServiceWorkerDescriptor.h"
#include "mozilla/dom/IPCServiceWorkerRegistrationDescriptor.h"
#include "mozilla/dom/PBackgroundLSSharedTypes.h"
#include "mozilla/ipc/PBackgroundSharedTypes.h"
#include "mozilla/dom/indexedDB/PBackgroundIDBSharedTypes.h"
#include "mozilla/dom/PFileSystemParams.h"
#include "mozilla/ipc/ProtocolTypes.h"
#include "mozilla/psm/PSMIPCTypes.h"
#include "mozilla/dom/RemoteWorkerTypes.h"
#include "mozilla/dom/MIDITypes.h"

namespace mozilla {
namespace ipc {
class PBackgroundParent;
} // namespace ipc
} // namespace mozilla
namespace mozilla {
namespace ipc {
class PBackgroundChild;
} // namespace ipc
} // namespace mozilla

//-----------------------------------------------------------------------------
// Code common to PBackgroundChild and PBackgroundParent
//
namespace mozilla {
namespace ipc {
namespace PBackground {

nsresult
CreateEndpoints(
        base::ProcessId aParentDestPid,
        base::ProcessId aChildDestPid,
        mozilla::ipc::Endpoint<mozilla::ipc::PBackgroundParent>* aParent,
        mozilla::ipc::Endpoint<mozilla::ipc::PBackgroundChild>* aChild);

enum MessageType {
    PBackgroundStart = PBackgroundMsgStart << 16,
    Msg_PBackgroundTestConstructor__ID,
    Reply_PBackgroundTestConstructor__ID,
    Msg_PBackgroundDataBridgeConstructor__ID,
    Reply_PBackgroundDataBridgeConstructor__ID,
    Msg_PBackgroundIDBFactoryConstructor__ID,
    Reply_PBackgroundIDBFactoryConstructor__ID,
    Msg_PBackgroundIndexedDBUtilsConstructor__ID,
    Reply_PBackgroundIndexedDBUtilsConstructor__ID,
    Msg_FlushPendingFileDeletions__ID,
    Msg_PBackgroundSDBConnectionConstructor__ID,
    Reply_PBackgroundSDBConnectionConstructor__ID,
    Msg_PBackgroundLSDatabaseConstructor__ID,
    Reply_PBackgroundLSDatabaseConstructor__ID,
    Msg_PBackgroundLSObserverConstructor__ID,
    Reply_PBackgroundLSObserverConstructor__ID,
    Msg_PBackgroundLSRequestConstructor__ID,
    Reply_PBackgroundLSRequestConstructor__ID,
    Msg_PBackgroundLSSimpleRequestConstructor__ID,
    Reply_PBackgroundLSSimpleRequestConstructor__ID,
    Msg_LSClearPrivateBrowsing__ID,
    Msg_PBackgroundLocalStorageCacheConstructor__ID,
    Reply_PBackgroundLocalStorageCacheConstructor__ID,
    Msg_PBackgroundSessionStorageManagerConstructor__ID,
    Reply_PBackgroundSessionStorageManagerConstructor__ID,
    Msg_PBackgroundStorageConstructor__ID,
    Reply_PBackgroundStorageConstructor__ID,
    Msg_PVsyncConstructor__ID,
    Reply_PVsyncConstructor__ID,
    Msg_PCamerasConstructor__ID,
    Reply_PCamerasConstructor__ID,
    Msg_PUDPSocketConstructor__ID,
    Reply_PUDPSocketConstructor__ID,
    Msg_PBroadcastChannelConstructor__ID,
    Reply_PBroadcastChannelConstructor__ID,
    Msg_PServiceWorkerManagerConstructor__ID,
    Reply_PServiceWorkerManagerConstructor__ID,
    Msg_ShutdownServiceWorkerRegistrar__ID,
    Msg_PCacheStorageConstructor__ID,
    Reply_PCacheStorageConstructor__ID,
    Msg_PMessagePortConstructor__ID,
    Reply_PMessagePortConstructor__ID,
    Msg_PChildToParentStreamConstructor__ID,
    Reply_PChildToParentStreamConstructor__ID,
    Msg_MessagePortForceClose__ID,
    Msg_PQuotaConstructor__ID,
    Reply_PQuotaConstructor__ID,
    Msg_ShutdownQuotaManager__ID,
    Msg_ShutdownBackgroundSessionStorageManagers__ID,
    Msg_PropagateBackgroundSessionStorageManager__ID,
    Msg_RemoveBackgroundSessionStorageManager__ID,
    Msg_PFileSystemRequestConstructor__ID,
    Reply_PFileSystemRequestConstructor__ID,
    Msg_PGamepadEventChannelConstructor__ID,
    Reply_PGamepadEventChannelConstructor__ID,
    Msg_PGamepadTestChannelConstructor__ID,
    Reply_PGamepadTestChannelConstructor__ID,
    Msg_PHttpBackgroundChannelConstructor__ID,
    Reply_PHttpBackgroundChannelConstructor__ID,
    Msg_PWebAuthnTransactionConstructor__ID,
    Reply_PWebAuthnTransactionConstructor__ID,
    Msg_PSharedWorkerConstructor__ID,
    Reply_PSharedWorkerConstructor__ID,
    Msg_PTemporaryIPCBlobConstructor__ID,
    Reply_PTemporaryIPCBlobConstructor__ID,
    Msg_PFileCreatorConstructor__ID,
    Reply_PFileCreatorConstructor__ID,
    Msg_PClientManagerConstructor__ID,
    Reply_PClientManagerConstructor__ID,
    Msg_PMIDIManagerConstructor__ID,
    Reply_PMIDIManagerConstructor__ID,
    Msg_PMIDIPortConstructor__ID,
    Reply_PMIDIPortConstructor__ID,
    Msg_StorageActivity__ID,
    Msg_PServiceWorkerConstructor__ID,
    Reply_PServiceWorkerConstructor__ID,
    Msg_PRemoteWorkerControllerConstructor__ID,
    Reply_PRemoteWorkerControllerConstructor__ID,
    Msg_PRemoteWorkerServiceConstructor__ID,
    Reply_PRemoteWorkerServiceConstructor__ID,
    Msg_PServiceWorkerContainerConstructor__ID,
    Reply_PServiceWorkerContainerConstructor__ID,
    Msg_PServiceWorkerRegistrationConstructor__ID,
    Reply_PServiceWorkerRegistrationConstructor__ID,
    Msg_PEndpointForReportConstructor__ID,
    Reply_PEndpointForReportConstructor__ID,
    Msg_RemoveEndpoint__ID,
    Msg_PIdleSchedulerConstructor__ID,
    Reply_PIdleSchedulerConstructor__ID,
    Msg_PMediaTransportConstructor__ID,
    Reply_PMediaTransportConstructor__ID,
    Msg_PVerifySSLServerCertConstructor__ID,
    Reply_PVerifySSLServerCertConstructor__ID,
    Msg_EnsureRDDProcessAndCreateBridge__ID,
    Reply_EnsureRDDProcessAndCreateBridge__ID,
    Msg_PCacheConstructor__ID,
    Reply_PCacheConstructor__ID,
    Msg_PCacheStreamControlConstructor__ID,
    Reply_PCacheStreamControlConstructor__ID,
    Msg_PParentToChildStreamConstructor__ID,
    Reply_PParentToChildStreamConstructor__ID,
    Msg_PRemoteWorkerConstructor__ID,
    Reply_PRemoteWorkerConstructor__ID,
    Msg_PRemoteLazyInputStreamConstructor__ID,
    Reply_PRemoteLazyInputStreamConstructor__ID,
    Msg_PFileDescriptorSetConstructor__ID,
    Reply_PFileDescriptorSetConstructor__ID,
    PBackgroundEnd
};

IPC::Message*
Msg_PBackgroundTestConstructor(int32_t routingId);
IPC::Message*
Reply_PBackgroundTestConstructor(int32_t routingId);

IPC::Message*
Msg_PBackgroundDataBridgeConstructor(int32_t routingId);
IPC::Message*
Reply_PBackgroundDataBridgeConstructor(int32_t routingId);

IPC::Message*
Msg_PBackgroundIDBFactoryConstructor(int32_t routingId);
IPC::Message*
Reply_PBackgroundIDBFactoryConstructor(int32_t routingId);

IPC::Message*
Msg_PBackgroundIndexedDBUtilsConstructor(int32_t routingId);
IPC::Message*
Reply_PBackgroundIndexedDBUtilsConstructor(int32_t routingId);

IPC::Message*
Msg_FlushPendingFileDeletions(int32_t routingId);

IPC::Message*
Msg_PBackgroundSDBConnectionConstructor(int32_t routingId);
IPC::Message*
Reply_PBackgroundSDBConnectionConstructor(int32_t routingId);

IPC::Message*
Msg_PBackgroundLSDatabaseConstructor(int32_t routingId);
IPC::Message*
Reply_PBackgroundLSDatabaseConstructor(int32_t routingId);

IPC::Message*
Msg_PBackgroundLSObserverConstructor(int32_t routingId);
IPC::Message*
Reply_PBackgroundLSObserverConstructor(int32_t routingId);

IPC::Message*
Msg_PBackgroundLSRequestConstructor(int32_t routingId);
IPC::Message*
Reply_PBackgroundLSRequestConstructor(int32_t routingId);

IPC::Message*
Msg_PBackgroundLSSimpleRequestConstructor(int32_t routingId);
IPC::Message*
Reply_PBackgroundLSSimpleRequestConstructor(int32_t routingId);

IPC::Message*
Msg_LSClearPrivateBrowsing(int32_t routingId);

IPC::Message*
Msg_PBackgroundLocalStorageCacheConstructor(int32_t routingId);
IPC::Message*
Reply_PBackgroundLocalStorageCacheConstructor(int32_t routingId);

IPC::Message*
Msg_PBackgroundSessionStorageManagerConstructor(int32_t routingId);
IPC::Message*
Reply_PBackgroundSessionStorageManagerConstructor(int32_t routingId);

IPC::Message*
Msg_PBackgroundStorageConstructor(int32_t routingId);
IPC::Message*
Reply_PBackgroundStorageConstructor(int32_t routingId);

IPC::Message*
Msg_PVsyncConstructor(int32_t routingId);
IPC::Message*
Reply_PVsyncConstructor(int32_t routingId);

IPC::Message*
Msg_PCamerasConstructor(int32_t routingId);
IPC::Message*
Reply_PCamerasConstructor(int32_t routingId);

IPC::Message*
Msg_PUDPSocketConstructor(int32_t routingId);
IPC::Message*
Reply_PUDPSocketConstructor(int32_t routingId);

IPC::Message*
Msg_PBroadcastChannelConstructor(int32_t routingId);
IPC::Message*
Reply_PBroadcastChannelConstructor(int32_t routingId);

IPC::Message*
Msg_PServiceWorkerManagerConstructor(int32_t routingId);
IPC::Message*
Reply_PServiceWorkerManagerConstructor(int32_t routingId);

IPC::Message*
Msg_ShutdownServiceWorkerRegistrar(int32_t routingId);

IPC::Message*
Msg_PCacheStorageConstructor(int32_t routingId);
IPC::Message*
Reply_PCacheStorageConstructor(int32_t routingId);

IPC::Message*
Msg_PMessagePortConstructor(int32_t routingId);
IPC::Message*
Reply_PMessagePortConstructor(int32_t routingId);

IPC::Message*
Msg_PChildToParentStreamConstructor(int32_t routingId);
IPC::Message*
Reply_PChildToParentStreamConstructor(int32_t routingId);

IPC::Message*
Msg_MessagePortForceClose(int32_t routingId);

IPC::Message*
Msg_PQuotaConstructor(int32_t routingId);
IPC::Message*
Reply_PQuotaConstructor(int32_t routingId);

IPC::Message*
Msg_ShutdownQuotaManager(int32_t routingId);

IPC::Message*
Msg_ShutdownBackgroundSessionStorageManagers(int32_t routingId);

IPC::Message*
Msg_PropagateBackgroundSessionStorageManager(int32_t routingId);

IPC::Message*
Msg_RemoveBackgroundSessionStorageManager(int32_t routingId);

IPC::Message*
Msg_PFileSystemRequestConstructor(int32_t routingId);
IPC::Message*
Reply_PFileSystemRequestConstructor(int32_t routingId);

IPC::Message*
Msg_PGamepadEventChannelConstructor(int32_t routingId);
IPC::Message*
Reply_PGamepadEventChannelConstructor(int32_t routingId);

IPC::Message*
Msg_PGamepadTestChannelConstructor(int32_t routingId);
IPC::Message*
Reply_PGamepadTestChannelConstructor(int32_t routingId);

IPC::Message*
Msg_PHttpBackgroundChannelConstructor(int32_t routingId);
IPC::Message*
Reply_PHttpBackgroundChannelConstructor(int32_t routingId);

IPC::Message*
Msg_PWebAuthnTransactionConstructor(int32_t routingId);
IPC::Message*
Reply_PWebAuthnTransactionConstructor(int32_t routingId);

IPC::Message*
Msg_PSharedWorkerConstructor(int32_t routingId);
IPC::Message*
Reply_PSharedWorkerConstructor(int32_t routingId);

IPC::Message*
Msg_PTemporaryIPCBlobConstructor(int32_t routingId);
IPC::Message*
Reply_PTemporaryIPCBlobConstructor(int32_t routingId);

IPC::Message*
Msg_PFileCreatorConstructor(int32_t routingId);
IPC::Message*
Reply_PFileCreatorConstructor(int32_t routingId);

IPC::Message*
Msg_PClientManagerConstructor(int32_t routingId);
IPC::Message*
Reply_PClientManagerConstructor(int32_t routingId);

IPC::Message*
Msg_PMIDIManagerConstructor(int32_t routingId);
IPC::Message*
Reply_PMIDIManagerConstructor(int32_t routingId);

IPC::Message*
Msg_PMIDIPortConstructor(int32_t routingId);
IPC::Message*
Reply_PMIDIPortConstructor(int32_t routingId);

IPC::Message*
Msg_StorageActivity(int32_t routingId);

IPC::Message*
Msg_PServiceWorkerConstructor(int32_t routingId);
IPC::Message*
Reply_PServiceWorkerConstructor(int32_t routingId);

IPC::Message*
Msg_PRemoteWorkerControllerConstructor(int32_t routingId);
IPC::Message*
Reply_PRemoteWorkerControllerConstructor(int32_t routingId);

IPC::Message*
Msg_PRemoteWorkerServiceConstructor(int32_t routingId);
IPC::Message*
Reply_PRemoteWorkerServiceConstructor(int32_t routingId);

IPC::Message*
Msg_PServiceWorkerContainerConstructor(int32_t routingId);
IPC::Message*
Reply_PServiceWorkerContainerConstructor(int32_t routingId);

IPC::Message*
Msg_PServiceWorkerRegistrationConstructor(int32_t routingId);
IPC::Message*
Reply_PServiceWorkerRegistrationConstructor(int32_t routingId);

IPC::Message*
Msg_PEndpointForReportConstructor(int32_t routingId);
IPC::Message*
Reply_PEndpointForReportConstructor(int32_t routingId);

IPC::Message*
Msg_RemoveEndpoint(int32_t routingId);

IPC::Message*
Msg_PIdleSchedulerConstructor(int32_t routingId);
IPC::Message*
Reply_PIdleSchedulerConstructor(int32_t routingId);

IPC::Message*
Msg_PMediaTransportConstructor(int32_t routingId);
IPC::Message*
Reply_PMediaTransportConstructor(int32_t routingId);

IPC::Message*
Msg_PVerifySSLServerCertConstructor(int32_t routingId);
IPC::Message*
Reply_PVerifySSLServerCertConstructor(int32_t routingId);

IPC::Message*
Msg_EnsureRDDProcessAndCreateBridge(int32_t routingId);
IPC::Message*
Reply_EnsureRDDProcessAndCreateBridge(int32_t routingId);

IPC::Message*
Msg_PCacheConstructor(int32_t routingId);
IPC::Message*
Reply_PCacheConstructor(int32_t routingId);

IPC::Message*
Msg_PCacheStreamControlConstructor(int32_t routingId);
IPC::Message*
Reply_PCacheStreamControlConstructor(int32_t routingId);

IPC::Message*
Msg_PParentToChildStreamConstructor(int32_t routingId);
IPC::Message*
Reply_PParentToChildStreamConstructor(int32_t routingId);

IPC::Message*
Msg_PRemoteWorkerConstructor(int32_t routingId);
IPC::Message*
Reply_PRemoteWorkerConstructor(int32_t routingId);

IPC::Message*
Msg_PRemoteLazyInputStreamConstructor(int32_t routingId);
IPC::Message*
Reply_PRemoteLazyInputStreamConstructor(int32_t routingId);

IPC::Message*
Msg_PFileDescriptorSetConstructor(int32_t routingId);
IPC::Message*
Reply_PFileDescriptorSetConstructor(int32_t routingId);



} // namespace PBackground
} // namespace ipc
} // namespace mozilla

#endif // ifndef PBackground_h
