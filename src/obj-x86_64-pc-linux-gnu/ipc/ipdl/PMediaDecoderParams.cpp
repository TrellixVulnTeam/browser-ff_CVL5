//
// Automatically generated by ipdlc.
// Edit at your own risk
//


#include "mozilla/dom/MediaIPCUtils.h"
#include "mozilla/PMediaDecoderParams.h"

#include "ipc/IPCMessageUtils.h"
#include "nsIFile.h"
#include "mozilla/ipc/Endpoint.h"
#include "mozilla/ipc/ProtocolMessageUtils.h"
#include "mozilla/ipc/ProtocolUtils.h"
#include "mozilla/ipc/ShmemMessageUtils.h"
#include "mozilla/ipc/TaintingIPCUtils.h"


//-----------------------------------------------------------------------------
// Method definitions for the IPDL type |struct MediaDataIPDL|
//
namespace mozilla {
} // namespace mozilla

namespace mozilla {
namespace ipc {
auto IPDLParamTraits<mozilla::MediaDataIPDL>::Write(
        IPC::Message* aMsg,
        mozilla::ipc::IProtocol* aActor,
        const paramType& aVar) -> void
{
    WriteIPDLParam(aMsg, aActor, (aVar).time());
    // Sentinel = 'time'
    (aMsg)->WriteSentinel(72221104);
    WriteIPDLParam(aMsg, aActor, (aVar).timecode());
    // Sentinel = 'timecode'
    (aMsg)->WriteSentinel(252969803);
    WriteIPDLParam(aMsg, aActor, (aVar).duration());
    // Sentinel = 'duration'
    (aMsg)->WriteSentinel(256050023);
    WriteIPDLParam(aMsg, aActor, (aVar).keyframe());
    // Sentinel = 'keyframe'
    (aMsg)->WriteSentinel(253821781);
    (aMsg)->WriteBytes((&((aVar).offset())), 8);
    // Sentinel = 'offset'
    (aMsg)->WriteSentinel(147653256);
}

auto IPDLParamTraits<mozilla::MediaDataIPDL>::Read(
        const IPC::Message* aMsg,
        PickleIterator* aIter,
        mozilla::ipc::IProtocol* aActor,
        paramType* aVar) -> bool
{
    if ((!(ReadIPDLParam(aMsg, aIter, aActor, (&((aVar)->time())))))) {
        aActor->FatalError("Error deserializing 'time' (TimeUnit) member of 'MediaDataIPDL'");
        return false;
    }
    // Sentinel = 'time'
    if ((!((aMsg)->ReadSentinel(aIter, 72221104)))) {
        mozilla::ipc::SentinelReadError("Error deserializing 'time' (TimeUnit) member of 'MediaDataIPDL'");
        return false;
    }
    if ((!(ReadIPDLParam(aMsg, aIter, aActor, (&((aVar)->timecode())))))) {
        aActor->FatalError("Error deserializing 'timecode' (TimeUnit) member of 'MediaDataIPDL'");
        return false;
    }
    // Sentinel = 'timecode'
    if ((!((aMsg)->ReadSentinel(aIter, 252969803)))) {
        mozilla::ipc::SentinelReadError("Error deserializing 'timecode' (TimeUnit) member of 'MediaDataIPDL'");
        return false;
    }
    if ((!(ReadIPDLParam(aMsg, aIter, aActor, (&((aVar)->duration())))))) {
        aActor->FatalError("Error deserializing 'duration' (TimeUnit) member of 'MediaDataIPDL'");
        return false;
    }
    // Sentinel = 'duration'
    if ((!((aMsg)->ReadSentinel(aIter, 256050023)))) {
        mozilla::ipc::SentinelReadError("Error deserializing 'duration' (TimeUnit) member of 'MediaDataIPDL'");
        return false;
    }
    if ((!(ReadIPDLParam(aMsg, aIter, aActor, (&((aVar)->keyframe())))))) {
        aActor->FatalError("Error deserializing 'keyframe' (bool) member of 'MediaDataIPDL'");
        return false;
    }
    // Sentinel = 'keyframe'
    if ((!((aMsg)->ReadSentinel(aIter, 253821781)))) {
        mozilla::ipc::SentinelReadError("Error deserializing 'keyframe' (bool) member of 'MediaDataIPDL'");
        return false;
    }
    if ((!((aMsg)->ReadBytesInto(aIter, (&((aVar)->offset())), 8)))) {
        aActor->FatalError("Error bulk reading fields from int64_t");
        return false;
    }
    // Sentinel = 'offset'
    if ((!((aMsg)->ReadSentinel(aIter, 147653256)))) {
        mozilla::ipc::SentinelReadError("Error bulk reading fields from int64_t");
        return false;
    }
    return true;
}

} // namespace ipc
} // namespace mozilla
