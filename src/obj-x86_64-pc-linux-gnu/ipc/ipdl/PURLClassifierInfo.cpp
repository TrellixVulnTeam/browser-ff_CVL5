//
// Automatically generated by ipdlc.
// Edit at your own risk
//


#include "mozilla/dom/PURLClassifierInfo.h"

#include "ipc/IPCMessageUtils.h"
#include "nsIFile.h"
#include "mozilla/ipc/Endpoint.h"
#include "mozilla/ipc/ProtocolMessageUtils.h"
#include "mozilla/ipc/ProtocolUtils.h"
#include "mozilla/ipc/ShmemMessageUtils.h"
#include "mozilla/ipc/TaintingIPCUtils.h"


//-----------------------------------------------------------------------------
// Method definitions for the IPDL type |struct ClassifierInfo|
//
namespace mozilla {
namespace dom {
} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace ipc {
auto IPDLParamTraits<mozilla::dom::ClassifierInfo>::Write(
        IPC::Message* aMsg,
        mozilla::ipc::IProtocol* aActor,
        const paramType& aVar) -> void
{
    WriteIPDLParam(aMsg, aActor, (aVar).list());
    // Sentinel = 'list'
    (aMsg)->WriteSentinel(71893437);
    WriteIPDLParam(aMsg, aActor, (aVar).provider());
    // Sentinel = 'provider'
    (aMsg)->WriteSentinel(261751660);
    WriteIPDLParam(aMsg, aActor, (aVar).fullhash());
    // Sentinel = 'fullhash'
    (aMsg)->WriteSentinel(253756248);
}

auto IPDLParamTraits<mozilla::dom::ClassifierInfo>::Read(
        const IPC::Message* aMsg,
        PickleIterator* aIter,
        mozilla::ipc::IProtocol* aActor,
        paramType* aVar) -> bool
{
    if ((!(ReadIPDLParam(aMsg, aIter, aActor, (&((aVar)->list())))))) {
        aActor->FatalError("Error deserializing 'list' (nsCString) member of 'ClassifierInfo'");
        return false;
    }
    // Sentinel = 'list'
    if ((!((aMsg)->ReadSentinel(aIter, 71893437)))) {
        mozilla::ipc::SentinelReadError("Error deserializing 'list' (nsCString) member of 'ClassifierInfo'");
        return false;
    }
    if ((!(ReadIPDLParam(aMsg, aIter, aActor, (&((aVar)->provider())))))) {
        aActor->FatalError("Error deserializing 'provider' (nsCString) member of 'ClassifierInfo'");
        return false;
    }
    // Sentinel = 'provider'
    if ((!((aMsg)->ReadSentinel(aIter, 261751660)))) {
        mozilla::ipc::SentinelReadError("Error deserializing 'provider' (nsCString) member of 'ClassifierInfo'");
        return false;
    }
    if ((!(ReadIPDLParam(aMsg, aIter, aActor, (&((aVar)->fullhash())))))) {
        aActor->FatalError("Error deserializing 'fullhash' (nsCString) member of 'ClassifierInfo'");
        return false;
    }
    // Sentinel = 'fullhash'
    if ((!((aMsg)->ReadSentinel(aIter, 253756248)))) {
        mozilla::ipc::SentinelReadError("Error deserializing 'fullhash' (nsCString) member of 'ClassifierInfo'");
        return false;
    }
    return true;
}

} // namespace ipc
} // namespace mozilla
