//
// Automatically generated by ipdlc.
// Edit at your own risk
//


#include "mozilla/layers/PCompositorBridgeTypes.h"

#include "ipc/IPCMessageUtils.h"
#include "nsIFile.h"
#include "mozilla/ipc/Endpoint.h"
#include "mozilla/ipc/ProtocolMessageUtils.h"
#include "mozilla/ipc/ProtocolUtils.h"
#include "mozilla/ipc/ShmemMessageUtils.h"
#include "mozilla/ipc/TaintingIPCUtils.h"


//-----------------------------------------------------------------------------
// Method definitions for the IPDL type |struct CollectedFrameParams|
//
namespace mozilla {
namespace layers {
} // namespace layers
} // namespace mozilla

namespace mozilla {
namespace ipc {
auto IPDLParamTraits<mozilla::layers::CollectedFrameParams>::Write(
        IPC::Message* aMsg,
        mozilla::ipc::IProtocol* aActor,
        const paramType& aVar) -> void
{
    (aMsg)->WriteBytes((&((aVar).timeOffset())), 8);
    // Sentinel = 'timeOffset'
    (aMsg)->WriteSentinel(376767511);
    (aMsg)->WriteBytes((&((aVar).length())), 4);
    // Sentinel = 'length'
    (aMsg)->WriteSentinel(147063427);
}

auto IPDLParamTraits<mozilla::layers::CollectedFrameParams>::Read(
        const IPC::Message* aMsg,
        PickleIterator* aIter,
        mozilla::ipc::IProtocol* aActor,
        paramType* aVar) -> bool
{
    if ((!((aMsg)->ReadBytesInto(aIter, (&((aVar)->timeOffset())), 8)))) {
        aActor->FatalError("Error bulk reading fields from double");
        return false;
    }
    // Sentinel = 'timeOffset'
    if ((!((aMsg)->ReadSentinel(aIter, 376767511)))) {
        mozilla::ipc::SentinelReadError("Error bulk reading fields from double");
        return false;
    }
    if ((!((aMsg)->ReadBytesInto(aIter, (&((aVar)->length())), 4)))) {
        aActor->FatalError("Error bulk reading fields from uint32_t");
        return false;
    }
    // Sentinel = 'length'
    if ((!((aMsg)->ReadSentinel(aIter, 147063427)))) {
        mozilla::ipc::SentinelReadError("Error bulk reading fields from uint32_t");
        return false;
    }
    return true;
}

} // namespace ipc
} // namespace mozilla

//-----------------------------------------------------------------------------
// Method definitions for the IPDL type |struct CollectedFramesParams|
//
namespace mozilla {
namespace layers {
} // namespace layers
} // namespace mozilla

namespace mozilla {
namespace ipc {
auto IPDLParamTraits<mozilla::layers::CollectedFramesParams>::Write(
        IPC::Message* aMsg,
        mozilla::ipc::IProtocol* aActor,
        const paramType& aVar) -> void
{
    WriteIPDLParam(aMsg, aActor, (aVar).frames());
    // Sentinel = 'frames'
    (aMsg)->WriteSentinel(145490559);
    WriteIPDLParam(aMsg, aActor, std::move((aVar).buffer()));
    // Sentinel = 'buffer'
    (aMsg)->WriteSentinel(144769659);
    (aMsg)->WriteBytes((&((aVar).recordingStart())), 8);
    // Sentinel = 'recordingStart'
    (aMsg)->WriteSentinel(728368588);
}

auto IPDLParamTraits<mozilla::layers::CollectedFramesParams>::Read(
        const IPC::Message* aMsg,
        PickleIterator* aIter,
        mozilla::ipc::IProtocol* aActor,
        paramType* aVar) -> bool
{
    if ((!(ReadIPDLParam(aMsg, aIter, aActor, (&((aVar)->frames())))))) {
        aActor->FatalError("Error deserializing 'frames' (CollectedFrameParams[]) member of 'CollectedFramesParams'");
        return false;
    }
    // Sentinel = 'frames'
    if ((!((aMsg)->ReadSentinel(aIter, 145490559)))) {
        mozilla::ipc::SentinelReadError("Error deserializing 'frames' (CollectedFrameParams[]) member of 'CollectedFramesParams'");
        return false;
    }
    if ((!(ReadIPDLParam(aMsg, aIter, aActor, (&((aVar)->buffer())))))) {
        aActor->FatalError("Error deserializing 'buffer' (Shmem) member of 'CollectedFramesParams'");
        return false;
    }
    // Sentinel = 'buffer'
    if ((!((aMsg)->ReadSentinel(aIter, 144769659)))) {
        mozilla::ipc::SentinelReadError("Error deserializing 'buffer' (Shmem) member of 'CollectedFramesParams'");
        return false;
    }
    if ((!((aMsg)->ReadBytesInto(aIter, (&((aVar)->recordingStart())), 8)))) {
        aActor->FatalError("Error bulk reading fields from double");
        return false;
    }
    // Sentinel = 'recordingStart'
    if ((!((aMsg)->ReadSentinel(aIter, 728368588)))) {
        mozilla::ipc::SentinelReadError("Error bulk reading fields from double");
        return false;
    }
    return true;
}

} // namespace ipc
} // namespace mozilla
