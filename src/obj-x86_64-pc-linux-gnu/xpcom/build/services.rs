/* THIS FILE IS GENERATED BY Services.py - DO NOT EDIT */

use crate::RefPtr;

/// Fetches a cached reference to the `ChromeRegistry`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_ChromeRegistry() -> Option<RefPtr<crate::interfaces::nsIChromeRegistry>> {
    extern "C" {
        fn XPCOMService_GetChromeRegistry() -> *mut crate::interfaces::nsIChromeRegistry;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetChromeRegistry()) }
}

/// Fetches a cached reference to the `ToolkitChromeRegistry`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_ToolkitChromeRegistry() -> Option<RefPtr<crate::interfaces::nsIToolkitChromeRegistry>> {
    extern "C" {
        fn XPCOMService_GetToolkitChromeRegistry() -> *mut crate::interfaces::nsIToolkitChromeRegistry;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetToolkitChromeRegistry()) }
}

/// Fetches a cached reference to the `XULChromeRegistry`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_XULChromeRegistry() -> Option<RefPtr<crate::interfaces::nsIXULChromeRegistry>> {
    extern "C" {
        fn XPCOMService_GetXULChromeRegistry() -> *mut crate::interfaces::nsIXULChromeRegistry;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetXULChromeRegistry()) }
}

/// Fetches a cached reference to the `DirectoryService`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_DirectoryService() -> Option<RefPtr<crate::interfaces::nsIProperties>> {
    extern "C" {
        fn XPCOMService_GetDirectoryService() -> *mut crate::interfaces::nsIProperties;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetDirectoryService()) }
}

/// Fetches a cached reference to the `IOService`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_IOService() -> Option<RefPtr<crate::interfaces::nsIIOService>> {
    extern "C" {
        fn XPCOMService_GetIOService() -> *mut crate::interfaces::nsIIOService;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetIOService()) }
}

/// Fetches a cached reference to the `ObserverService`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_ObserverService() -> Option<RefPtr<crate::interfaces::nsIObserverService>> {
    extern "C" {
        fn XPCOMService_GetObserverService() -> *mut crate::interfaces::nsIObserverService;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetObserverService()) }
}

/// Fetches a cached reference to the `StringBundleService`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_StringBundleService() -> Option<RefPtr<crate::interfaces::nsIStringBundleService>> {
    extern "C" {
        fn XPCOMService_GetStringBundleService() -> *mut crate::interfaces::nsIStringBundleService;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetStringBundleService()) }
}

/// Fetches a cached reference to the `PermissionManager`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_PermissionManager() -> Option<RefPtr<crate::interfaces::nsIPermissionManager>> {
    extern "C" {
        fn XPCOMService_GetPermissionManager() -> *mut crate::interfaces::nsIPermissionManager;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetPermissionManager()) }
}

/// Fetches a cached reference to the `PrefService`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_PrefService() -> Option<RefPtr<crate::interfaces::nsIPrefService>> {
    extern "C" {
        fn XPCOMService_GetPrefService() -> *mut crate::interfaces::nsIPrefService;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetPrefService()) }
}

/// Fetches a cached reference to the `ServiceWorkerManager`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_ServiceWorkerManager() -> Option<RefPtr<crate::interfaces::nsIServiceWorkerManager>> {
    extern "C" {
        fn XPCOMService_GetServiceWorkerManager() -> *mut crate::interfaces::nsIServiceWorkerManager;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetServiceWorkerManager()) }
}

/// Fetches a cached reference to the `AsyncShutdownService`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_AsyncShutdownService() -> Option<RefPtr<crate::interfaces::nsIAsyncShutdownService>> {
    extern "C" {
        fn XPCOMService_GetAsyncShutdownService() -> *mut crate::interfaces::nsIAsyncShutdownService;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetAsyncShutdownService()) }
}

/// Fetches a cached reference to the `UUIDGenerator`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_UUIDGenerator() -> Option<RefPtr<crate::interfaces::nsIUUIDGenerator>> {
    extern "C" {
        fn XPCOMService_GetUUIDGenerator() -> *mut crate::interfaces::nsIUUIDGenerator;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetUUIDGenerator()) }
}

/// Fetches a cached reference to the `GfxInfo`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_GfxInfo() -> Option<RefPtr<crate::interfaces::nsIGfxInfo>> {
    extern "C" {
        fn XPCOMService_GetGfxInfo() -> *mut crate::interfaces::nsIGfxInfo;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetGfxInfo()) }
}

/// Fetches a cached reference to the `SocketTransportService`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_SocketTransportService() -> Option<RefPtr<crate::interfaces::nsISocketTransportService>> {
    extern "C" {
        fn XPCOMService_GetSocketTransportService() -> *mut crate::interfaces::nsISocketTransportService;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetSocketTransportService()) }
}

/// Fetches a cached reference to the `StreamTransportService`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_StreamTransportService() -> Option<RefPtr<crate::interfaces::nsIStreamTransportService>> {
    extern "C" {
        fn XPCOMService_GetStreamTransportService() -> *mut crate::interfaces::nsIStreamTransportService;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetStreamTransportService()) }
}

/// Fetches a cached reference to the `CacheStorageService`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_CacheStorageService() -> Option<RefPtr<crate::interfaces::nsICacheStorageService>> {
    extern "C" {
        fn XPCOMService_GetCacheStorageService() -> *mut crate::interfaces::nsICacheStorageService;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetCacheStorageService()) }
}

/// Fetches a cached reference to the `URIClassifier`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_URIClassifier() -> Option<RefPtr<crate::interfaces::nsIURIClassifier>> {
    extern "C" {
        fn XPCOMService_GetURIClassifier() -> *mut crate::interfaces::nsIURIClassifier;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetURIClassifier()) }
}

/// Fetches a cached reference to the `HttpActivityDistributor`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_HttpActivityDistributor() -> Option<RefPtr<crate::interfaces::nsIHttpActivityDistributor>> {
    extern "C" {
        fn XPCOMService_GetHttpActivityDistributor() -> *mut crate::interfaces::nsIHttpActivityDistributor;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetHttpActivityDistributor()) }
}

/// Fetches a cached reference to the `ThirdPartyUtil`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_ThirdPartyUtil() -> Option<RefPtr<crate::interfaces::mozIThirdPartyUtil>> {
    extern "C" {
        fn XPCOMService_GetThirdPartyUtil() -> *mut crate::interfaces::mozIThirdPartyUtil;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetThirdPartyUtil()) }
}

/// Fetches a cached reference to the `URIFixup`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_URIFixup() -> Option<RefPtr<crate::interfaces::nsIURIFixup>> {
    extern "C" {
        fn XPCOMService_GetURIFixup() -> *mut crate::interfaces::nsIURIFixup;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetURIFixup()) }
}

/// Fetches a cached reference to the `Bits`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_Bits() -> Option<RefPtr<crate::interfaces::nsIBits>> {
    extern "C" {
        fn XPCOMService_GetBits() -> *mut crate::interfaces::nsIBits;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetBits()) }
}

/// Fetches a cached reference to the `XULRuntime`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_XULRuntime() -> Option<RefPtr<crate::interfaces::nsIXULRuntime>> {
    extern "C" {
        fn XPCOMService_GetXULRuntime() -> *mut crate::interfaces::nsIXULRuntime;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetXULRuntime()) }
}

/// Fetches a cached reference to the `RemoteAgent`.
/// This function will return `None` during XPCOM shutdown.
pub fn get_RemoteAgent() -> Option<RefPtr<crate::interfaces::nsIRemoteAgent>> {
    extern "C" {
        fn XPCOMService_GetRemoteAgent() -> *mut crate::interfaces::nsIRemoteAgent;
    }
    unsafe { RefPtr::from_raw_dont_addref(XPCOMService_GetRemoteAgent()) }
}
