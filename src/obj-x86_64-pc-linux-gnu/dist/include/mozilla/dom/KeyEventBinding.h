/* THIS FILE IS AUTOGENERATED FROM KeyEvent.webidl BY Codegen.py - DO NOT EDIT */

#ifndef mozilla_dom_KeyEventBinding_h
#define mozilla_dom_KeyEventBinding_h

#include "js/RootingAPI.h"
#include "js/TypeDecls.h"
#include "mozilla/ErrorResult.h"
#include "mozilla/dom/BindingDeclarations.h"
#include "mozilla/dom/Nullable.h"
#include "mozilla/dom/PrototypeList.h"

namespace mozilla {
namespace dom {

class KeyEvent;
struct KeyEventAtoms;
struct NativePropertyHooks;
class ProtoAndIfaceCache;

} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {

namespace KeyEvent_Binding {

  typedef mozilla::dom::KeyEvent NativeType;

  static const uint32_t DOM_VK_CANCEL = 3;
  static const uint32_t DOM_VK_HELP = 6;
  static const uint32_t DOM_VK_BACK_SPACE = 8;
  static const uint32_t DOM_VK_TAB = 9;
  static const uint32_t DOM_VK_CLEAR = 12;
  static const uint32_t DOM_VK_RETURN = 13;
  static const uint32_t DOM_VK_SHIFT = 16;
  static const uint32_t DOM_VK_CONTROL = 17;
  static const uint32_t DOM_VK_ALT = 18;
  static const uint32_t DOM_VK_PAUSE = 19;
  static const uint32_t DOM_VK_CAPS_LOCK = 20;
  static const uint32_t DOM_VK_KANA = 21;
  static const uint32_t DOM_VK_HANGUL = 21;
  static const uint32_t DOM_VK_EISU = 22;
  static const uint32_t DOM_VK_JUNJA = 23;
  static const uint32_t DOM_VK_FINAL = 24;
  static const uint32_t DOM_VK_HANJA = 25;
  static const uint32_t DOM_VK_KANJI = 25;
  static const uint32_t DOM_VK_ESCAPE = 27;
  static const uint32_t DOM_VK_CONVERT = 28;
  static const uint32_t DOM_VK_NONCONVERT = 29;
  static const uint32_t DOM_VK_ACCEPT = 30;
  static const uint32_t DOM_VK_MODECHANGE = 31;
  static const uint32_t DOM_VK_SPACE = 32;
  static const uint32_t DOM_VK_PAGE_UP = 33;
  static const uint32_t DOM_VK_PAGE_DOWN = 34;
  static const uint32_t DOM_VK_END = 35;
  static const uint32_t DOM_VK_HOME = 36;
  static const uint32_t DOM_VK_LEFT = 37;
  static const uint32_t DOM_VK_UP = 38;
  static const uint32_t DOM_VK_RIGHT = 39;
  static const uint32_t DOM_VK_DOWN = 40;
  static const uint32_t DOM_VK_SELECT = 41;
  static const uint32_t DOM_VK_PRINT = 42;
  static const uint32_t DOM_VK_EXECUTE = 43;
  static const uint32_t DOM_VK_PRINTSCREEN = 44;
  static const uint32_t DOM_VK_INSERT = 45;
  static const uint32_t DOM_VK_DELETE = 46;
  static const uint32_t DOM_VK_0 = 48;
  static const uint32_t DOM_VK_1 = 49;
  static const uint32_t DOM_VK_2 = 50;
  static const uint32_t DOM_VK_3 = 51;
  static const uint32_t DOM_VK_4 = 52;
  static const uint32_t DOM_VK_5 = 53;
  static const uint32_t DOM_VK_6 = 54;
  static const uint32_t DOM_VK_7 = 55;
  static const uint32_t DOM_VK_8 = 56;
  static const uint32_t DOM_VK_9 = 57;
  static const uint32_t DOM_VK_COLON = 58;
  static const uint32_t DOM_VK_SEMICOLON = 59;
  static const uint32_t DOM_VK_LESS_THAN = 60;
  static const uint32_t DOM_VK_EQUALS = 61;
  static const uint32_t DOM_VK_GREATER_THAN = 62;
  static const uint32_t DOM_VK_QUESTION_MARK = 63;
  static const uint32_t DOM_VK_AT = 64;
  static const uint32_t DOM_VK_A = 65;
  static const uint32_t DOM_VK_B = 66;
  static const uint32_t DOM_VK_C = 67;
  static const uint32_t DOM_VK_D = 68;
  static const uint32_t DOM_VK_E = 69;
  static const uint32_t DOM_VK_F = 70;
  static const uint32_t DOM_VK_G = 71;
  static const uint32_t DOM_VK_H = 72;
  static const uint32_t DOM_VK_I = 73;
  static const uint32_t DOM_VK_J = 74;
  static const uint32_t DOM_VK_K = 75;
  static const uint32_t DOM_VK_L = 76;
  static const uint32_t DOM_VK_M = 77;
  static const uint32_t DOM_VK_N = 78;
  static const uint32_t DOM_VK_O = 79;
  static const uint32_t DOM_VK_P = 80;
  static const uint32_t DOM_VK_Q = 81;
  static const uint32_t DOM_VK_R = 82;
  static const uint32_t DOM_VK_S = 83;
  static const uint32_t DOM_VK_T = 84;
  static const uint32_t DOM_VK_U = 85;
  static const uint32_t DOM_VK_V = 86;
  static const uint32_t DOM_VK_W = 87;
  static const uint32_t DOM_VK_X = 88;
  static const uint32_t DOM_VK_Y = 89;
  static const uint32_t DOM_VK_Z = 90;
  static const uint32_t DOM_VK_WIN = 91;
  static const uint32_t DOM_VK_CONTEXT_MENU = 93;
  static const uint32_t DOM_VK_SLEEP = 95;
  static const uint32_t DOM_VK_NUMPAD0 = 96;
  static const uint32_t DOM_VK_NUMPAD1 = 97;
  static const uint32_t DOM_VK_NUMPAD2 = 98;
  static const uint32_t DOM_VK_NUMPAD3 = 99;
  static const uint32_t DOM_VK_NUMPAD4 = 100;
  static const uint32_t DOM_VK_NUMPAD5 = 101;
  static const uint32_t DOM_VK_NUMPAD6 = 102;
  static const uint32_t DOM_VK_NUMPAD7 = 103;
  static const uint32_t DOM_VK_NUMPAD8 = 104;
  static const uint32_t DOM_VK_NUMPAD9 = 105;
  static const uint32_t DOM_VK_MULTIPLY = 106;
  static const uint32_t DOM_VK_ADD = 107;
  static const uint32_t DOM_VK_SEPARATOR = 108;
  static const uint32_t DOM_VK_SUBTRACT = 109;
  static const uint32_t DOM_VK_DECIMAL = 110;
  static const uint32_t DOM_VK_DIVIDE = 111;
  static const uint32_t DOM_VK_F1 = 112;
  static const uint32_t DOM_VK_F2 = 113;
  static const uint32_t DOM_VK_F3 = 114;
  static const uint32_t DOM_VK_F4 = 115;
  static const uint32_t DOM_VK_F5 = 116;
  static const uint32_t DOM_VK_F6 = 117;
  static const uint32_t DOM_VK_F7 = 118;
  static const uint32_t DOM_VK_F8 = 119;
  static const uint32_t DOM_VK_F9 = 120;
  static const uint32_t DOM_VK_F10 = 121;
  static const uint32_t DOM_VK_F11 = 122;
  static const uint32_t DOM_VK_F12 = 123;
  static const uint32_t DOM_VK_F13 = 124;
  static const uint32_t DOM_VK_F14 = 125;
  static const uint32_t DOM_VK_F15 = 126;
  static const uint32_t DOM_VK_F16 = 127;
  static const uint32_t DOM_VK_F17 = 128;
  static const uint32_t DOM_VK_F18 = 129;
  static const uint32_t DOM_VK_F19 = 130;
  static const uint32_t DOM_VK_F20 = 131;
  static const uint32_t DOM_VK_F21 = 132;
  static const uint32_t DOM_VK_F22 = 133;
  static const uint32_t DOM_VK_F23 = 134;
  static const uint32_t DOM_VK_F24 = 135;
  static const uint32_t DOM_VK_NUM_LOCK = 144;
  static const uint32_t DOM_VK_SCROLL_LOCK = 145;
  static const uint32_t DOM_VK_WIN_OEM_FJ_JISHO = 146;
  static const uint32_t DOM_VK_WIN_OEM_FJ_MASSHOU = 147;
  static const uint32_t DOM_VK_WIN_OEM_FJ_TOUROKU = 148;
  static const uint32_t DOM_VK_WIN_OEM_FJ_LOYA = 149;
  static const uint32_t DOM_VK_WIN_OEM_FJ_ROYA = 150;
  static const uint32_t DOM_VK_CIRCUMFLEX = 160;
  static const uint32_t DOM_VK_EXCLAMATION = 161;
  static const uint32_t DOM_VK_DOUBLE_QUOTE = 162;
  static const uint32_t DOM_VK_HASH = 163;
  static const uint32_t DOM_VK_DOLLAR = 164;
  static const uint32_t DOM_VK_PERCENT = 165;
  static const uint32_t DOM_VK_AMPERSAND = 166;
  static const uint32_t DOM_VK_UNDERSCORE = 167;
  static const uint32_t DOM_VK_OPEN_PAREN = 168;
  static const uint32_t DOM_VK_CLOSE_PAREN = 169;
  static const uint32_t DOM_VK_ASTERISK = 170;
  static const uint32_t DOM_VK_PLUS = 171;
  static const uint32_t DOM_VK_PIPE = 172;
  static const uint32_t DOM_VK_HYPHEN_MINUS = 173;
  static const uint32_t DOM_VK_OPEN_CURLY_BRACKET = 174;
  static const uint32_t DOM_VK_CLOSE_CURLY_BRACKET = 175;
  static const uint32_t DOM_VK_TILDE = 176;
  static const uint32_t DOM_VK_VOLUME_MUTE = 181;
  static const uint32_t DOM_VK_VOLUME_DOWN = 182;
  static const uint32_t DOM_VK_VOLUME_UP = 183;
  static const uint32_t DOM_VK_COMMA = 188;
  static const uint32_t DOM_VK_PERIOD = 190;
  static const uint32_t DOM_VK_SLASH = 191;
  static const uint32_t DOM_VK_BACK_QUOTE = 192;
  static const uint32_t DOM_VK_OPEN_BRACKET = 219;
  static const uint32_t DOM_VK_BACK_SLASH = 220;
  static const uint32_t DOM_VK_CLOSE_BRACKET = 221;
  static const uint32_t DOM_VK_QUOTE = 222;
  static const uint32_t DOM_VK_META = 224;
  static const uint32_t DOM_VK_ALTGR = 225;
  static const uint32_t DOM_VK_WIN_ICO_HELP = 227;
  static const uint32_t DOM_VK_WIN_ICO_00 = 228;
  static const uint32_t DOM_VK_PROCESSKEY = 229;
  static const uint32_t DOM_VK_WIN_ICO_CLEAR = 230;
  static const uint32_t DOM_VK_WIN_OEM_RESET = 233;
  static const uint32_t DOM_VK_WIN_OEM_JUMP = 234;
  static const uint32_t DOM_VK_WIN_OEM_PA1 = 235;
  static const uint32_t DOM_VK_WIN_OEM_PA2 = 236;
  static const uint32_t DOM_VK_WIN_OEM_PA3 = 237;
  static const uint32_t DOM_VK_WIN_OEM_WSCTRL = 238;
  static const uint32_t DOM_VK_WIN_OEM_CUSEL = 239;
  static const uint32_t DOM_VK_WIN_OEM_ATTN = 240;
  static const uint32_t DOM_VK_WIN_OEM_FINISH = 241;
  static const uint32_t DOM_VK_WIN_OEM_COPY = 242;
  static const uint32_t DOM_VK_WIN_OEM_AUTO = 243;
  static const uint32_t DOM_VK_WIN_OEM_ENLW = 244;
  static const uint32_t DOM_VK_WIN_OEM_BACKTAB = 245;
  static const uint32_t DOM_VK_ATTN = 246;
  static const uint32_t DOM_VK_CRSEL = 247;
  static const uint32_t DOM_VK_EXSEL = 248;
  static const uint32_t DOM_VK_EREOF = 249;
  static const uint32_t DOM_VK_PLAY = 250;
  static const uint32_t DOM_VK_ZOOM = 251;
  static const uint32_t DOM_VK_PA1 = 253;
  static const uint32_t DOM_VK_WIN_OEM_CLEAR = 254;
  // We declare this as an array so that retrieving a pointer to this
  // binding's property hooks only requires compile/link-time resolvable
  // address arithmetic.  Declaring it as a pointer instead would require
  // doing a run-time load to fetch a pointer to this binding's property
  // hooks.  And then structures which embedded a pointer to this structure
  // would require a run-time load for proper initialization, which would
  // then induce static constructors.  Lots of static constructors.
  extern const NativePropertyHooks sNativePropertyHooks[];

  void
  CreateInterfaceObjects(JSContext* aCx, JS::Handle<JSObject*> aGlobal, ProtoAndIfaceCache& aProtoAndIfaceCache, bool aDefineOnGlobal);

  inline JS::Handle<JSObject*> GetConstructorObjectHandle(JSContext* aCx, bool aDefineOnGlobal = true)
  {
    /* Get the interface object for this class.  This will create the object as
       needed. */

    return GetPerInterfaceObjectHandle(aCx, constructors::id::KeyEvent,
                                       &CreateInterfaceObjects,
                                       aDefineOnGlobal);
  }

  JSObject*
  GetConstructorObject(JSContext* aCx);

} // namespace KeyEvent_Binding



} // namespace dom
} // namespace mozilla

#endif // mozilla_dom_KeyEventBinding_h
