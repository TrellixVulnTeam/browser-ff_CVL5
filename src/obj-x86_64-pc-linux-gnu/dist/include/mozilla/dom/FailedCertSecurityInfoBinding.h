/* THIS FILE IS AUTOGENERATED FROM FailedCertSecurityInfo.webidl BY Codegen.py - DO NOT EDIT */

#ifndef mozilla_dom_FailedCertSecurityInfoBinding_h
#define mozilla_dom_FailedCertSecurityInfoBinding_h

#include "js/RootingAPI.h"
#include "js/TypeDecls.h"
#include "mozilla/ErrorResult.h"
#include "mozilla/dom/BindingDeclarations.h"
#include "mozilla/dom/Nullable.h"

namespace mozilla {
namespace dom {

struct FailedCertSecurityInfoAtoms;
struct NativePropertyHooks;
class ProtoAndIfaceCache;

} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {

struct FailedCertSecurityInfo : public DictionaryBase
{
  MOZ_INIT_OUTSIDE_CTOR Optional<Sequence<nsString>> mCertChainStrings;
  MOZ_INIT_OUTSIDE_CTOR uint64_t mCertValidityRangeNotAfter;
  MOZ_INIT_OUTSIDE_CTOR uint64_t mCertValidityRangeNotBefore;
  MOZ_INIT_OUTSIDE_CTOR nsString mErrorCodeString;
  MOZ_INIT_OUTSIDE_CTOR nsString mErrorMessage;
  MOZ_INIT_OUTSIDE_CTOR bool mHasHPKP;
  MOZ_INIT_OUTSIDE_CTOR bool mHasHSTS;
  MOZ_INIT_OUTSIDE_CTOR bool mIsDomainMismatch;
  MOZ_INIT_OUTSIDE_CTOR bool mIsNotValidAtThisTime;
  MOZ_INIT_OUTSIDE_CTOR bool mIsUntrusted;
  MOZ_INIT_OUTSIDE_CTOR nsString mIssuerCommonName;
  MOZ_INIT_OUTSIDE_CTOR uint64_t mValidNotAfter;
  MOZ_INIT_OUTSIDE_CTOR uint64_t mValidNotBefore;

  FailedCertSecurityInfo();

  explicit inline FailedCertSecurityInfo(const FastDictionaryInitializer& )
  {
    // Do nothing here; this is used by our "Fast" subclass
  }

  explicit inline FailedCertSecurityInfo(const FailedCertSecurityInfo& aOther)
  {
    *this = aOther;
  }

  bool
  Init(const char* sourceDescription = "Value", bool passedToJSImpl = false);

  bool
  ToObjectInternal(JSContext* cx, JS::MutableHandle<JS::Value> rval) const;

  void
  TraceDictionary(JSTracer* trc);

  FailedCertSecurityInfo&
  operator=(const FailedCertSecurityInfo& aOther);

private:
  static bool
  InitIds(JSContext* cx, FailedCertSecurityInfoAtoms* atomsCache);
};

namespace binding_detail {
struct FastFailedCertSecurityInfo : public FailedCertSecurityInfo
{
  inline FastFailedCertSecurityInfo()
    : FailedCertSecurityInfo(FastDictionaryInitializer())
  {
    // Doesn't matter what int we pass to the parent constructor
  }
};
} // namespace binding_detail


} // namespace dom
} // namespace mozilla

#endif // mozilla_dom_FailedCertSecurityInfoBinding_h
