/* THIS FILE IS AUTOGENERATED FROM NetErrorInfo.webidl BY Codegen.py - DO NOT EDIT */

#ifndef mozilla_dom_NetErrorInfoBinding_h
#define mozilla_dom_NetErrorInfoBinding_h

#include "js/RootingAPI.h"
#include "js/TypeDecls.h"
#include "mozilla/ErrorResult.h"
#include "mozilla/dom/BindingDeclarations.h"
#include "mozilla/dom/Nullable.h"

namespace mozilla {
namespace dom {

struct NativePropertyHooks;
struct NetErrorInfoAtoms;
class ProtoAndIfaceCache;

} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {

struct NetErrorInfo : public DictionaryBase
{
  MOZ_INIT_OUTSIDE_CTOR nsString mErrorCodeString;

  NetErrorInfo();

  explicit inline NetErrorInfo(const FastDictionaryInitializer& )
  {
    // Do nothing here; this is used by our "Fast" subclass
  }

  explicit inline NetErrorInfo(const NetErrorInfo& aOther)
  {
    *this = aOther;
  }

  bool
  Init(const char* sourceDescription = "Value", bool passedToJSImpl = false);

  bool
  ToObjectInternal(JSContext* cx, JS::MutableHandle<JS::Value> rval) const;

  void
  TraceDictionary(JSTracer* trc);

  NetErrorInfo&
  operator=(const NetErrorInfo& aOther);

  bool
  operator==(const NetErrorInfo& aOther) const;

private:
  static bool
  InitIds(JSContext* cx, NetErrorInfoAtoms* atomsCache);
};

namespace binding_detail {
struct FastNetErrorInfo : public NetErrorInfo
{
  inline FastNetErrorInfo()
    : NetErrorInfo(FastDictionaryInitializer())
  {
    // Doesn't matter what int we pass to the parent constructor
  }
};
} // namespace binding_detail


} // namespace dom
} // namespace mozilla

#endif // mozilla_dom_NetErrorInfoBinding_h
