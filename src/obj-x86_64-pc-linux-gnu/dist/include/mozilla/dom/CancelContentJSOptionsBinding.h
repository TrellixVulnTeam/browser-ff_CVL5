/* THIS FILE IS AUTOGENERATED FROM CancelContentJSOptions.webidl BY Codegen.py - DO NOT EDIT */

#ifndef mozilla_dom_CancelContentJSOptionsBinding_h
#define mozilla_dom_CancelContentJSOptionsBinding_h

#include "js/RootingAPI.h"
#include "js/TypeDecls.h"
#include "mozilla/ErrorResult.h"
#include "mozilla/dom/BindingDeclarations.h"
#include "mozilla/dom/Nullable.h"
#include "nsIURI.h"

class nsIURI;

namespace mozilla {
namespace dom {

struct CancelContentJSOptionsAtoms;
struct NativePropertyHooks;
class ProtoAndIfaceCache;

} // namespace dom
} // namespace mozilla

namespace mozilla {
namespace dom {

struct CancelContentJSOptions : public DictionaryBase
{
  MOZ_INIT_OUTSIDE_CTOR int32_t mEpoch;
  MOZ_INIT_OUTSIDE_CTOR int32_t mIndex;
  MOZ_INIT_OUTSIDE_CTOR RefPtr<nsIURI> mUri;

  CancelContentJSOptions();

  explicit inline CancelContentJSOptions(const FastDictionaryInitializer& )
  {
    // Do nothing here; this is used by our "Fast" subclass
  }

  explicit inline CancelContentJSOptions(const CancelContentJSOptions& aOther)
  {
    *this = aOther;
  }

  bool
  Init(BindingCallContext& cx, JS::Handle<JS::Value> val, const char* sourceDescription = "Value", bool passedToJSImpl = false);

  bool
  Init(JSContext* cx_, JS::Handle<JS::Value> val, const char* sourceDescription = "Value", bool passedToJSImpl = false);

  void
  TraceDictionary(JSTracer* trc);

  inline void
  TraverseForCC(nsCycleCollectionTraversalCallback& aCallback, uint32_t aFlags)
  {
    ImplCycleCollectionTraverse(aCallback, mUri, "mUri", aFlags);
  }

  inline void
  UnlinkForCC()
  {
    ImplCycleCollectionUnlink(mUri);
  }

  CancelContentJSOptions&
  operator=(const CancelContentJSOptions& aOther);

private:
  static bool
  InitIds(JSContext* cx, CancelContentJSOptionsAtoms* atomsCache);
};

namespace binding_detail {
struct FastCancelContentJSOptions : public CancelContentJSOptions
{
  inline FastCancelContentJSOptions()
    : CancelContentJSOptions(FastDictionaryInitializer())
  {
    // Doesn't matter what int we pass to the parent constructor
  }
};
} // namespace binding_detail


} // namespace dom
} // namespace mozilla

#endif // mozilla_dom_CancelContentJSOptionsBinding_h
