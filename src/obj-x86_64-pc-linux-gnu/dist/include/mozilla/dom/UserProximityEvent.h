/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* vim:set ts=2 sw=2 sts=2 et cindent: */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/* THIS FILE IS AUTOGENERATED FROM UserProximityEvent.webidl BY Codegen.py - DO NOT EDIT */

#ifndef mozilla_dom_UserProximityEvent_h
#define mozilla_dom_UserProximityEvent_h

#include "mozilla/Attributes.h"
#include "mozilla/ErrorResult.h"
#include "mozilla/dom/BindingUtils.h"
#include "mozilla/dom/Event.h"
#include "mozilla/dom/UserProximityEventBinding.h"

struct JSContext;
namespace mozilla {
namespace dom {

class UserProximityEvent : public Event
{
public:
  NS_INLINE_DECL_REFCOUNTING_INHERITED(UserProximityEvent, Event)

protected:
  virtual ~UserProximityEvent();
  explicit UserProximityEvent(mozilla::dom::EventTarget* aOwner);

  bool mNear;

public:
  UserProximityEvent* AsUserProximityEvent() override;

  JSObject* WrapObjectInternal(JSContext* aCx, JS::Handle<JSObject*> aGivenProto) override;

  static already_AddRefed<UserProximityEvent> Constructor(mozilla::dom::EventTarget* aOwner, const nsAString& aType, const UserProximityEventInit& aEventInitDict);

  static already_AddRefed<UserProximityEvent> Constructor(const GlobalObject& aGlobal, const nsAString& aType, const UserProximityEventInit& aEventInitDict);

  bool Near() const;
};

} // namespace dom
} // namespace mozilla

#endif // mozilla_dom_UserProximityEvent_h
