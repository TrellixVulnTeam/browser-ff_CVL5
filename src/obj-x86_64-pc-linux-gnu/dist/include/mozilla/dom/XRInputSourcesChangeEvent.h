/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* vim:set ts=2 sw=2 sts=2 et cindent: */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/* THIS FILE IS AUTOGENERATED FROM XRInputSourcesChangeEvent.webidl BY Codegen.py - DO NOT EDIT */

#ifndef mozilla_dom_XRInputSourcesChangeEvent_h
#define mozilla_dom_XRInputSourcesChangeEvent_h

#include "mozilla/Attributes.h"
#include "mozilla/ErrorResult.h"
#include "mozilla/dom/BindingUtils.h"
#include "mozilla/dom/Event.h"
#include "mozilla/dom/XRInputSourcesChangeEventBinding.h"

struct JSContext;
namespace mozilla {
namespace dom {

class XRInputSourcesChangeEvent : public Event
{
public:
  NS_DECL_ISUPPORTS_INHERITED
  NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS_INHERITED(XRInputSourcesChangeEvent, Event)

protected:
  virtual ~XRInputSourcesChangeEvent();
  explicit XRInputSourcesChangeEvent(mozilla::dom::EventTarget* aOwner);

  RefPtr<XRSession> mSession;
  nsTArray<RefPtr<XRInputSource>> mAdded;
  nsTArray<RefPtr<XRInputSource>> mRemoved;

public:
  XRInputSourcesChangeEvent* AsXRInputSourcesChangeEvent() override;

  JSObject* WrapObjectInternal(JSContext* aCx, JS::Handle<JSObject*> aGivenProto) override;

  static already_AddRefed<XRInputSourcesChangeEvent> Constructor(mozilla::dom::EventTarget* aOwner, const nsAString& aType, const XRInputSourcesChangeEventInit& aEventInitDict);

  static already_AddRefed<XRInputSourcesChangeEvent> Constructor(const GlobalObject& aGlobal, const nsAString& aType, const XRInputSourcesChangeEventInit& aEventInitDict);

  XRSession* Session() const;

  void GetAdded(nsTArray<RefPtr<XRInputSource>>& aRetVal) const;

  void GetRemoved(nsTArray<RefPtr<XRInputSource>>& aRetVal) const;
};

} // namespace dom
} // namespace mozilla

#endif // mozilla_dom_XRInputSourcesChangeEvent_h
