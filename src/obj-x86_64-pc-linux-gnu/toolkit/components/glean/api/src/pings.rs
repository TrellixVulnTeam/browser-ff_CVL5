// -*- mode: Rust -*-

// AUTOGENERATED BY glean_parser.  DO NOT EDIT.

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

use crate::private::Ping;
use once_cell::sync::Lazy;

#[allow(non_upper_case_globals)]
/// This ping is intended to evaluate the behaviour of FOG before
/// it ships beyond Nightly.
/// This is a temporary ping.
/// It is sent one hour after FOG is initialized, and every hour thereafter.
pub static fog_validation: Lazy<Ping> = Lazy::new(|| {
    Ping::new(
        "fog-validation",
        true,
        true,
        vec![],
    )
});

#[allow(non_upper_case_globals)]
/// This ping is for tests only.
pub static one_ping_only: Lazy<Ping> = Lazy::new(|| {
    Ping::new(
        "one-ping-only",
        false,
        true,
        vec![],
    )
});


/// Instantiate each custom ping once to trigger registration.
#[doc(hidden)]
pub fn register_pings() {
    let _ = &*fog_validation;
    let _ = &*one_ping_only;
}

#[cfg(feature = "with_gecko")]
pub(crate) fn submit_ping_by_id(id: u32, reason: Option<&str>) {
    match id {
        1 => fog_validation.submit(reason),
        2 => one_ping_only.submit(reason),
        _ => {
            // TODO: instrument this error.
            log::error!("Cannot submit unknown ping {} by id.", id);
        }
    }
}
