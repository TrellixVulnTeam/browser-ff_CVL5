/* THIS FILE IS AUTOGENERATED FROM FileMode.webidl BY Codegen.py - DO NOT EDIT */

#include "FileModeBinding.h"
#include "GeckoProfiler.h"
#include "js/Object.h"
#include "js/experimental/JitInfo.h"
#include "jsapi.h"
#include "mozilla/dom/BindingDeclarations.h"
#include "mozilla/dom/NonRefcountedDOMObject.h"

namespace mozilla {
namespace dom {

namespace binding_detail {}; // Just to make sure it's known as a namespace
using namespace mozilla::dom::binding_detail;


namespace FileModeValues {
extern const EnumEntry strings[3] = {
  {"readonly", 8},
  {"readwrite", 9},
  { nullptr, 0 }
};
} // namespace FileModeValues

bool
ToJSValue(JSContext* aCx, FileMode aArgument, JS::MutableHandle<JS::Value> aValue)
{
  MOZ_ASSERT(uint32_t(aArgument) < ArrayLength(FileModeValues::strings));
  JSString* resultStr =
    JS_NewStringCopyN(aCx, FileModeValues::strings[uint32_t(aArgument)].value,
                      FileModeValues::strings[uint32_t(aArgument)].length);
  if (!resultStr) {
    return false;
  }
  aValue.setString(resultStr);
  return true;
}


} // namespace dom
} // namespace mozilla
