// This file was generated by generate_static_pref_list.py from modules/libpref/init/StaticPrefList.yaml. DO NOT EDIT.

ONCE_PREF(
  "gfx.allow-texture-direct-mapping",
   gfx_allow_texture_direct_mapping,
   gfx_allow_texture_direct_mapping_AtStartup,
  bool, true
)

ONCE_PREF(
  "gfx.android.rgb16.force",
   gfx_android_rgb16_force,
   gfx_android_rgb16_force_AtStartup,
  bool, false
)

ONCE_PREF(
  "gfx.apitrace.enabled",
   gfx_apitrace_enabled,
   gfx_apitrace_enabled_AtStartup,
  bool, false
)

ONCE_PREF(
  "gfx.blocklist.all",
   gfx_blocklist_all,
   gfx_blocklist_all_AtStartup,
  int32_t, 0
)

ALWAYS_PREF(
  "gfx.canvas.max-size",
   gfx_canvas_max_size,
   gfx_canvas_max_size,
  RelaxedAtomicInt32, 32767
)

ALWAYS_PREF(
  "gfx.canvas.remote",
   gfx_canvas_remote,
   gfx_canvas_remote,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "gfx.color_management.force_srgb",
   gfx_color_management_force_srgb,
   gfx_color_management_force_srgb,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "gfx.color_management.enablev4",
   gfx_color_management_enablev4,
   gfx_color_management_enablev4,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "gfx.color_management.mode",
   gfx_color_management_mode,
   gfx_color_management_mode,
  RelaxedAtomicInt32, 2
)

ALWAYS_PREF(
  "gfx.color_management.rendering_intent",
   gfx_color_management_rendering_intent,
   gfx_color_management_rendering_intent,
  RelaxedAtomicInt32, 0
)

ALWAYS_PREF(
  "gfx.compositor.clearstate",
   gfx_compositor_clearstate,
   gfx_compositor_clearstate,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "gfx.compositor.gpu-migration",
   gfx_compositor_gpu_migration,
   gfx_compositor_gpu_migration,
  RelaxedAtomicInt32, 1
)

ALWAYS_PREF(
  "gfx.core-animation.tint-opaque",
   gfx_core_animation_tint_opaque,
   gfx_core_animation_tint_opaque,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "gfx.content.always-paint",
   gfx_content_always_paint,
   gfx_content_always_paint,
  RelaxedAtomicBool, false
)

ONCE_PREF(
  "gfx.content.skia-font-cache-size",
   gfx_content_skia_font_cache_size,
   gfx_content_skia_font_cache_size_AtStartup,
  int32_t, 5
)

ONCE_PREF(
  "gfx.device-reset.limit",
   gfx_device_reset_limit,
   gfx_device_reset_limit_AtStartup,
  int32_t, 10
)

ONCE_PREF(
  "gfx.device-reset.threshold-ms",
   gfx_device_reset_threshold_ms,
   gfx_device_reset_threshold_ms_AtStartup,
  int32_t, -1
)

ONCE_PREF(
  "gfx.direct2d.disabled",
   gfx_direct2d_disabled,
   gfx_direct2d_disabled_AtStartup,
  bool, false
)

ONCE_PREF(
  "gfx.direct2d.force-enabled",
   gfx_direct2d_force_enabled,
   gfx_direct2d_force_enabled_AtStartup,
  bool, false
)

ALWAYS_PREF(
  "gfx.direct2d.destroy-dt-on-paintthread",
   gfx_direct2d_destroy_dt_on_paintthread,
   gfx_direct2d_destroy_dt_on_paintthread,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "gfx.direct3d11.reuse-decoder-device",
   gfx_direct3d11_reuse_decoder_device,
   gfx_direct3d11_reuse_decoder_device,
  RelaxedAtomicInt32, -1
)

ALWAYS_PREF(
  "gfx.direct3d11.allow-keyed-mutex",
   gfx_direct3d11_allow_keyed_mutex,
   gfx_direct3d11_allow_keyed_mutex,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "gfx.direct3d11.use-double-buffering",
   gfx_direct3d11_use_double_buffering,
   gfx_direct3d11_use_double_buffering,
  RelaxedAtomicBool, false
)

ONCE_PREF(
  "gfx.direct3d11.enable-debug-layer",
   gfx_direct3d11_enable_debug_layer,
   gfx_direct3d11_enable_debug_layer_AtStartup,
  bool, false
)

ONCE_PREF(
  "gfx.direct3d11.break-on-error",
   gfx_direct3d11_break_on_error,
   gfx_direct3d11_break_on_error_AtStartup,
  bool, false
)

ONCE_PREF(
  "gfx.direct3d11.sleep-on-create-device",
   gfx_direct3d11_sleep_on_create_device,
   gfx_direct3d11_sleep_on_create_device_AtStartup,
  int32_t, 0
)

ALWAYS_PREF(
  "gfx.downloadable_fonts.keep_color_bitmaps",
   gfx_downloadable_fonts_keep_color_bitmaps,
   gfx_downloadable_fonts_keep_color_bitmaps,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "gfx.downloadable_fonts.sanitize_omt",
   gfx_downloadable_fonts_sanitize_omt,
   gfx_downloadable_fonts_sanitize_omt,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "gfx.downloadable_fonts.validate_variation_tables",
   gfx_downloadable_fonts_validate_variation_tables,
   gfx_downloadable_fonts_validate_variation_tables,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "gfx.downloadable_fonts.otl_validation",
   gfx_downloadable_fonts_otl_validation,
   gfx_downloadable_fonts_otl_validation,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "gfx.draw-color-bars",
   gfx_draw_color_bars,
   gfx_draw_color_bars,
  RelaxedAtomicBool, false
)

ONCE_PREF(
  "gfx.e10s.hide-plugins-for-scroll",
   gfx_e10s_hide_plugins_for_scroll,
   gfx_e10s_hide_plugins_for_scroll_AtStartup,
  bool, true
)

ONCE_PREF(
  "gfx.e10s.font-list.shared",
   gfx_e10s_font_list_shared,
   gfx_e10s_font_list_shared_AtStartup,
  bool, false
)

ONCE_PREF(
  "gfx.bundled-fonts.activate",
   gfx_bundled_fonts_activate,
   gfx_bundled_fonts_activate_AtStartup,
  int32_t, -1
)

ONCE_PREF(
  "gfx.font_loader.delay",
   gfx_font_loader_delay,
   gfx_font_loader_delay_AtStartup,
  uint32_t, 8000
)

ALWAYS_PREF(
  "gfx.font_rendering.ahem_antialias_none",
   gfx_font_rendering_ahem_antialias_none,
   gfx_font_rendering_ahem_antialias_none,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "gfx.font_rendering.opentype_svg.enabled",
   gfx_font_rendering_opentype_svg_enabled,
   gfx_font_rendering_opentype_svg_enabled,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "gfx.font_rendering.fallback.async",
   gfx_font_rendering_fallback_async,
   gfx_font_rendering_fallback_async,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "gfx.layerscope.enabled",
   gfx_layerscope_enabled,
   gfx_layerscope_enabled,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "gfx.layerscope.port",
   gfx_layerscope_port,
   gfx_layerscope_port,
  RelaxedAtomicInt32, 23456
)

ALWAYS_PREF(
  "gfx.logging.level",
   gfx_logging_level,
   gfx_logging_level,
  RelaxedAtomicInt32, mozilla::gfx::LOG_DEFAULT
)

ONCE_PREF(
  "gfx.logging.crash.length",
   gfx_logging_crash_length,
   gfx_logging_crash_length_AtStartup,
  uint32_t, 16
)

ALWAYS_PREF(
  "gfx.logging.painted-pixel-count.enabled",
   gfx_logging_painted_pixel_count_enabled,
   gfx_logging_painted_pixel_count_enabled,
  RelaxedAtomicBool, false
)

ONCE_PREF(
  "gfx.logging.texture-usage.enabled",
   gfx_logging_texture_usage_enabled,
   gfx_logging_texture_usage_enabled_AtStartup,
  bool, false
)

ONCE_PREF(
  "gfx.logging.peak-texture-usage.enabled",
   gfx_logging_peak_texture_usage_enabled,
   gfx_logging_peak_texture_usage_enabled_AtStartup,
  bool, false
)

ONCE_PREF(
  "gfx.logging.slow-frames.enabled",
   gfx_logging_slow_frames_enabled,
   gfx_logging_slow_frames_enabled_AtStartup,
  bool, false
)

ONCE_PREF(
  "gfx.max-alloc-size",
   gfx_max_alloc_size,
   gfx_max_alloc_size_AtStartup_DoNotUseDirectly,
  int32_t, (int32_t)500000000
)

ONCE_PREF(
  "gfx.max-texture-size",
   gfx_max_texture_size,
   gfx_max_texture_size_AtStartup_DoNotUseDirectly,
  int32_t, (int32_t)32767
)

ALWAYS_PREF(
  "gfx.offscreencanvas.enabled",
   gfx_offscreencanvas_enabled,
   gfx_offscreencanvas_enabled,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "gfx.omta.background-color",
   gfx_omta_background_color,
   gfx_omta_background_color,
  bool, true
)

ALWAYS_PREF(
  "gfx.partialpresent.force",
   gfx_partialpresent_force,
   gfx_partialpresent_force,
  RelaxedAtomicInt32, 0
)

ALWAYS_PREF(
  "gfx.perf-warnings.enabled",
   gfx_perf_warnings_enabled,
   gfx_perf_warnings_enabled,
  RelaxedAtomicBool, false
)

ONCE_PREF(
  "gfx.prefer-x11-egl",
   gfx_prefer_x11_egl,
   gfx_prefer_x11_egl_AtStartup,
  bool, false
)

ALWAYS_PREF(
  "gfx.testing.device-fail",
   gfx_testing_device_fail,
   gfx_testing_device_fail,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "gfx.testing.device-reset",
   gfx_testing_device_reset,
   gfx_testing_device_reset,
  RelaxedAtomicInt32, 0
)

ONCE_PREF(
  "gfx.text.disable-aa",
   gfx_text_disable_aa,
   gfx_text_disable_aa_AtStartup,
  bool, false
)

ONCE_PREF(
  "gfx.text.subpixel-position.force-enabled",
   gfx_text_subpixel_position_force_enabled,
   gfx_text_subpixel_position_force_enabled_AtStartup,
  bool, false
)

ONCE_PREF(
  "gfx.text.subpixel-position.force-disabled",
   gfx_text_subpixel_position_force_disabled,
   gfx_text_subpixel_position_force_disabled_AtStartup,
  bool, false
)

ALWAYS_PREF(
  "gfx.use-glx-texture-from-pixmap",
   gfx_use_glx_texture_from_pixmap,
   gfx_use_glx_texture_from_pixmap,
  RelaxedAtomicBool, false
)

ONCE_PREF(
  "gfx.use-iosurface-textures",
   gfx_use_iosurface_textures,
   gfx_use_iosurface_textures_AtStartup,
  bool, false
)

ONCE_PREF(
  "gfx.use-mutex-on-present",
   gfx_use_mutex_on_present,
   gfx_use_mutex_on_present_AtStartup,
  bool, false
)

ONCE_PREF(
  "gfx.use-ahardwarebuffer-content",
   gfx_use_ahardwarebuffer_content,
   gfx_use_ahardwarebuffer_content_AtStartup,
  bool, false
)

ONCE_PREF(
  "gfx.use-surfacetexture-textures",
   gfx_use_surfacetexture_textures,
   gfx_use_surfacetexture_textures_AtStartup,
  bool, false
)

ALWAYS_PREF(
  "gfx.vsync.collect-scroll-transforms",
   gfx_vsync_collect_scroll_transforms,
   gfx_vsync_collect_scroll_transforms,
  RelaxedAtomicBool, false
)

ONCE_PREF(
  "gfx.vsync.compositor.unobserve-count",
   gfx_vsync_compositor_unobserve_count,
   gfx_vsync_compositor_unobserve_count_AtStartup,
  int32_t, 10
)

ALWAYS_PREF(
  "gfx.vsync.force-disable-waitforvblank",
   gfx_vsync_force_disable_waitforvblank,
   gfx_vsync_force_disable_waitforvblank,
  RelaxedAtomicBool, false
)

ONCE_PREF(
  "gfx.webrender.all",
   gfx_webrender_all,
   gfx_webrender_all_AtStartup,
  bool, false
)

ONCE_PREF(
  "gfx.webrender.enabled",
   gfx_webrender_enabled,
   gfx_webrender_enabled_AtStartup_DoNotUseDirectly,
  bool, false
)

ALWAYS_PREF(
  "gfx.webrender.blob-images",
   gfx_webrender_blob_images,
   gfx_webrender_blob_images,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "gfx.webrender.svg-images",
   gfx_webrender_svg_images,
   gfx_webrender_svg_images,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "gfx.webrender.blob.paint-flashing",
   gfx_webrender_blob_paint_flashing,
   gfx_webrender_blob_paint_flashing,
  RelaxedAtomicBool, false
)

ONCE_PREF(
  "gfx.webrender.enable-capture",
   gfx_webrender_enable_capture,
   gfx_webrender_enable_capture_AtStartup,
  bool, false
)

ALWAYS_PREF(
  "gfx.webrender.dl.dump-parent",
   gfx_webrender_dl_dump_parent,
   gfx_webrender_dl_dump_parent,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "gfx.webrender.dl.dump-content",
   gfx_webrender_dl_dump_content,
   gfx_webrender_dl_dump_content,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "gfx.webrender.dl.dump-content-serialized",
   gfx_webrender_dl_dump_content_serialized,
   gfx_webrender_dl_dump_content_serialized,
  RelaxedAtomicBool, false
)

ONCE_PREF(
  "gfx.webrender.force-disabled",
   gfx_webrender_force_disabled,
   gfx_webrender_force_disabled_AtStartup,
  bool, false
)

ALWAYS_PREF(
  "gfx.webrender.highlight-painted-layers",
   gfx_webrender_highlight_painted_layers,
   gfx_webrender_highlight_painted_layers,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "gfx.webrender.late-scenebuild-threshold",
   gfx_webrender_late_scenebuild_threshold,
   gfx_webrender_late_scenebuild_threshold,
  RelaxedAtomicInt32, 4
)

ALWAYS_PREF(
  "gfx.webrender.max-filter-ops-per-chain",
   gfx_webrender_max_filter_ops_per_chain,
   gfx_webrender_max_filter_ops_per_chain,
  RelaxedAtomicUint32, 64
)

ALWAYS_PREF(
  "gfx.webrender.enable-multithreading",
   gfx_webrender_enable_multithreading,
   gfx_webrender_enable_multithreading,
  bool, true
)

ALWAYS_PREF(
  "gfx.webrender.batching.lookback",
   gfx_webrender_batching_lookback,
   gfx_webrender_batching_lookback,
  uint32_t, 10
)

ONCE_PREF(
  "gfx.webrender.compositor",
   gfx_webrender_compositor,
   gfx_webrender_compositor_AtStartup,
  bool, false
)

ONCE_PREF(
  "gfx.webrender.compositor.force-enabled",
   gfx_webrender_compositor_force_enabled,
   gfx_webrender_compositor_force_enabled_AtStartup,
  bool, false
)

ONCE_PREF(
  "gfx.webrender.compositor.max_update_rects",
   gfx_webrender_compositor_max_update_rects,
   gfx_webrender_compositor_max_update_rects_AtStartup,
  uint32_t, 0
)

ONCE_PREF(
  "gfx.webrender.compositor.surface-pool-size",
   gfx_webrender_compositor_surface_pool_size,
   gfx_webrender_compositor_surface_pool_size_AtStartup,
  uint32_t, 25
)

ONCE_PREF(
  "gfx.webrender.max-partial-present-rects",
   gfx_webrender_max_partial_present_rects,
   gfx_webrender_max_partial_present_rects_AtStartup,
  uint32_t, 1
)

ONCE_PREF(
  "gfx.webrender.allow-partial-present-buffer-age",
   gfx_webrender_allow_partial_present_buffer_age,
   gfx_webrender_allow_partial_present_buffer_age_AtStartup,
  bool, true
)

ONCE_PREF(
  "gfx.webrender.enable-gpu-markers",
   gfx_webrender_enable_gpu_markers,
   gfx_webrender_enable_gpu_markers_AtStartup,
  bool, false
)

ONCE_PREF(
  "gfx.webrender.enable-item-cache",
   gfx_webrender_enable_item_cache,
   gfx_webrender_enable_item_cache_AtStartup,
  bool, true
)

ONCE_PREF(
  "gfx.webrender.fallback.basic",
   gfx_webrender_fallback_basic,
   gfx_webrender_fallback_basic_AtStartup,
  bool, true
)

ONCE_PREF(
  "gfx.webrender.fallback.software",
   gfx_webrender_fallback_software,
   gfx_webrender_fallback_software_AtStartup,
  bool, false
)

ONCE_PREF(
  "gfx.webrender.use-optimized-shaders",
   gfx_webrender_use_optimized_shaders,
   gfx_webrender_use_optimized_shaders_AtStartup,
  bool, true
)

ONCE_PREF(
  "gfx.webrender.precache-shaders",
   gfx_webrender_precache_shaders,
   gfx_webrender_precache_shaders_AtStartup,
  bool, false
)

ONCE_PREF(
  "gfx.webrender.gl-debug-message-critical-note",
   gfx_webrender_gl_debug_message_critical_note,
   gfx_webrender_gl_debug_message_critical_note_AtStartup,
  bool, false
)

ONCE_PREF(
  "gfx.webrender.gl-debug-message-print",
   gfx_webrender_gl_debug_message_print,
   gfx_webrender_gl_debug_message_print_AtStartup,
  bool, false
)

ALWAYS_PREF(
  "gfx.webrender.enable-low-priority-pool",
   gfx_webrender_enable_low_priority_pool,
   gfx_webrender_enable_low_priority_pool,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "gfx.webrender.quality.force-subpixel-aa-where-possible",
   gfx_webrender_quality_force_subpixel_aa_where_possible,
   gfx_webrender_quality_force_subpixel_aa_where_possible,
  bool, false
)

ALWAYS_PREF(
  "gfx.webrender.picture-tile-width",
   gfx_webrender_picture_tile_width,
   gfx_webrender_picture_tile_width,
  RelaxedAtomicInt32, 1024
)

ALWAYS_PREF(
  "gfx.webrender.picture-tile-height",
   gfx_webrender_picture_tile_height,
   gfx_webrender_picture_tile_height,
  RelaxedAtomicInt32, 512
)

ONCE_PREF(
  "gfx.webrender.prefer-robustness",
   gfx_webrender_prefer_robustness,
   gfx_webrender_prefer_robustness_AtStartup,
  bool, true
)

ONCE_PREF(
  "gfx.webrender.software",
   gfx_webrender_software,
   gfx_webrender_software_AtStartup,
  bool, false
)

ONCE_PREF(
  "gfx.webrender.software.d3d11",
   gfx_webrender_software_d3d11,
   gfx_webrender_software_d3d11_AtStartup,
  bool, true
)

ALWAYS_PREF(
  "gfx.webrender.software.d3d11.upload-mode",
   gfx_webrender_software_d3d11_upload_mode,
   gfx_webrender_software_d3d11_upload_mode,
  RelaxedAtomicInt32, 2
)

ONCE_PREF(
  "gfx.work-around-driver-bugs",
   gfx_work_around_driver_bugs,
   gfx_work_around_driver_bugs_AtStartup,
  bool, true
)

ALWAYS_PREF(
  "gfx.ycbcr.accurate-conversion",
   gfx_ycbcr_accurate_conversion,
   gfx_ycbcr_accurate_conversion,
  RelaxedAtomicBool, false
)
