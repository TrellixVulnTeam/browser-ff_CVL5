// This file was generated by generate_static_pref_list.py from modules/libpref/init/StaticPrefList.yaml. DO NOT EDIT.

ALWAYS_PREF(
  "network.auth.force-generic-ntlm-v1",
   network_auth_force_generic_ntlm_v1,
   network_auth_force_generic_ntlm_v1,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.auth.subresource-http-auth-allow",
   network_auth_subresource_http_auth_allow,
   network_auth_subresource_http_auth_allow,
  uint32_t, 2
)

ALWAYS_PREF(
  "network.auth.subresource-img-cross-origin-http-auth-allow",
   network_auth_subresource_img_cross_origin_http_auth_allow,
   network_auth_subresource_img_cross_origin_http_auth_allow,
  bool, false
)

ALWAYS_PREF(
  "network.auth.non-web-content-triggered-resources-http-auth-allow",
   network_auth_non_web_content_triggered_resources_http_auth_allow,
   network_auth_non_web_content_triggered_resources_http_auth_allow,
  bool, false
)

ALWAYS_PREF(
  "network.auth.confirmAuth.enabled",
   network_auth_confirmAuth_enabled,
   network_auth_confirmAuth_enabled,
  bool, true
)

ALWAYS_PREF(
  "network.cookie.cookieBehavior",
   network_cookie_cookieBehavior,
   network_cookie_cookieBehavior,
  RelaxedAtomicInt32, 0
)

ALWAYS_PREF(
  "network.cookie.rejectForeignWithExceptions.enabled",
   network_cookie_rejectForeignWithExceptions_enabled,
   network_cookie_rejectForeignWithExceptions_enabled,
  bool, false
)

ALWAYS_PREF(
  "network.cookie.staleThreshold",
   network_cookie_staleThreshold,
   network_cookie_staleThreshold,
  uint32_t, 60
)

ALWAYS_PREF(
  "network.cookie.lifetimePolicy",
   network_cookie_lifetimePolicy,
   network_cookie_lifetimePolicy,
  RelaxedAtomicInt32, 0
)

ALWAYS_PREF(
  "network.cookie.sameSite.laxByDefault",
   network_cookie_sameSite_laxByDefault,
   network_cookie_sameSite_laxByDefault,
  bool, true
)

ALWAYS_PREF(
  "network.cookie.sameSite.laxPlusPOST.timeout",
   network_cookie_sameSite_laxPlusPOST_timeout,
   network_cookie_sameSite_laxPlusPOST_timeout,
  uint32_t, 120
)

ALWAYS_PREF(
  "network.cookie.sameSite.noneRequiresSecure",
   network_cookie_sameSite_noneRequiresSecure,
   network_cookie_sameSite_noneRequiresSecure,
  bool, true
)

ALWAYS_PREF(
  "network.cookie.sameSite.schemeful",
   network_cookie_sameSite_schemeful,
   network_cookie_sameSite_schemeful,
  bool, true
)

ALWAYS_PREF(
  "network.cookie.thirdparty.sessionOnly",
   network_cookie_thirdparty_sessionOnly,
   network_cookie_thirdparty_sessionOnly,
  bool, false
)

ALWAYS_PREF(
  "network.cookie.thirdparty.nonsecureSessionOnly",
   network_cookie_thirdparty_nonsecureSessionOnly,
   network_cookie_thirdparty_nonsecureSessionOnly,
  bool, false
)

ALWAYS_PREF(
  "network.data.max-uri-length-mobile",
   network_data_max_uri_length_mobile,
   network_data_max_uri_length_mobile,
  RelaxedAtomicUint32, 2 * 1024 * 1024
)

ALWAYS_PREF(
  "network.http.rcwn.enabled",
   network_http_rcwn_enabled,
   network_http_rcwn_enabled,
  bool, true
)

ALWAYS_PREF(
  "network.http.rcwn.cache_queue_normal_threshold",
   network_http_rcwn_cache_queue_normal_threshold,
   network_http_rcwn_cache_queue_normal_threshold,
  uint32_t, 8
)

ALWAYS_PREF(
  "network.http.rcwn.cache_queue_priority_threshold",
   network_http_rcwn_cache_queue_priority_threshold,
   network_http_rcwn_cache_queue_priority_threshold,
  uint32_t, 2
)

ALWAYS_PREF(
  "network.http.rcwn.small_resource_size_kb",
   network_http_rcwn_small_resource_size_kb,
   network_http_rcwn_small_resource_size_kb,
  uint32_t, 256
)

ALWAYS_PREF(
  "network.http.rcwn.min_wait_before_racing_ms",
   network_http_rcwn_min_wait_before_racing_ms,
   network_http_rcwn_min_wait_before_racing_ms,
  uint32_t, 0
)

ALWAYS_PREF(
  "network.http.rcwn.max_wait_before_racing_ms",
   network_http_rcwn_max_wait_before_racing_ms,
   network_http_rcwn_max_wait_before_racing_ms,
  uint32_t, 500
)

ALWAYS_PREF(
  "network.http.referer.spoofSource",
   network_http_referer_spoofSource,
   network_http_referer_spoofSource,
  bool, false
)

ALWAYS_PREF(
  "network.http.referer.hideOnionSource",
   network_http_referer_hideOnionSource,
   network_http_referer_hideOnionSource,
  bool, false
)

ALWAYS_PREF(
  "network.http.sendOriginHeader",
   network_http_sendOriginHeader,
   network_http_sendOriginHeader,
  uint32_t, 2
)

ALWAYS_PREF(
  "network.http.sendRefererHeader",
   network_http_sendRefererHeader,
   network_http_sendRefererHeader_DoNotUseDirectly,
  uint32_t, 2
)

ALWAYS_PREF(
  "network.http.referer.referrerLengthLimit",
   network_http_referer_referrerLengthLimit,
   network_http_referer_referrerLengthLimit,
  uint32_t, 4096
)

ALWAYS_PREF(
  "network.http.referer.XOriginPolicy",
   network_http_referer_XOriginPolicy,
   network_http_referer_XOriginPolicy_DoNotUseDirectly,
  uint32_t, 0
)

ALWAYS_PREF(
  "network.http.referer.trimmingPolicy",
   network_http_referer_trimmingPolicy,
   network_http_referer_trimmingPolicy_DoNotUseDirectly,
  uint32_t, 0
)

ALWAYS_PREF(
  "network.http.referer.XOriginTrimmingPolicy",
   network_http_referer_XOriginTrimmingPolicy,
   network_http_referer_XOriginTrimmingPolicy_DoNotUseDirectly,
  uint32_t, 0
)

ALWAYS_PREF(
  "network.http.referer.defaultPolicy",
   network_http_referer_defaultPolicy,
   network_http_referer_defaultPolicy,
  uint32_t, 2
)

ALWAYS_PREF(
  "network.http.referer.defaultPolicy.trackers",
   network_http_referer_defaultPolicy_trackers,
   network_http_referer_defaultPolicy_trackers,
  uint32_t, 2
)

ALWAYS_PREF(
  "network.http.referer.defaultPolicy.pbmode",
   network_http_referer_defaultPolicy_pbmode,
   network_http_referer_defaultPolicy_pbmode,
  uint32_t, 2
)

ALWAYS_PREF(
  "network.http.referer.defaultPolicy.trackers.pbmode",
   network_http_referer_defaultPolicy_trackers_pbmode,
   network_http_referer_defaultPolicy_trackers_pbmode,
  uint32_t, 2
)

ALWAYS_PREF(
  "network.http.sanitize-headers-in-logs",
   network_http_sanitize_headers_in_logs,
   network_http_sanitize_headers_in_logs,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.offline-mirrors-connectivity",
   network_offline_mirrors_connectivity,
   network_offline_mirrors_connectivity,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.predictor.enabled",
   network_predictor_enabled,
   network_predictor_enabled,
  bool, true
)

ALWAYS_PREF(
  "network.proxy.allow_hijacking_localhost",
   network_proxy_allow_hijacking_localhost,
   network_proxy_allow_hijacking_localhost,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.cookieJarSettings.unblocked_for_testing",
   network_cookieJarSettings_unblocked_for_testing,
   network_cookieJarSettings_unblocked_for_testing,
  bool, false
)

ALWAYS_PREF(
  "network.predictor.enable-hover-on-ssl",
   network_predictor_enable_hover_on_ssl,
   network_predictor_enable_hover_on_ssl,
  bool, false
)

ALWAYS_PREF(
  "network.predictor.enable-prefetch",
   network_predictor_enable_prefetch,
   network_predictor_enable_prefetch,
  bool, false
)

ALWAYS_PREF(
  "network.predictor.page-degradation.day",
   network_predictor_page_degradation_day,
   network_predictor_page_degradation_day,
  int32_t, 0
)

ALWAYS_PREF(
  "network.predictor.page-degradation.week",
   network_predictor_page_degradation_week,
   network_predictor_page_degradation_week,
  int32_t, 5
)

ALWAYS_PREF(
  "network.predictor.page-degradation.month",
   network_predictor_page_degradation_month,
   network_predictor_page_degradation_month,
  int32_t, 10
)

ALWAYS_PREF(
  "network.predictor.page-degradation.year",
   network_predictor_page_degradation_year,
   network_predictor_page_degradation_year,
  int32_t, 25
)

ALWAYS_PREF(
  "network.predictor.page-degradation.max",
   network_predictor_page_degradation_max,
   network_predictor_page_degradation_max,
  int32_t, 50
)

ALWAYS_PREF(
  "network.predictor.subresource-degradation.day",
   network_predictor_subresource_degradation_day,
   network_predictor_subresource_degradation_day,
  int32_t, 1
)

ALWAYS_PREF(
  "network.predictor.subresource-degradation.week",
   network_predictor_subresource_degradation_week,
   network_predictor_subresource_degradation_week,
  int32_t, 10
)

ALWAYS_PREF(
  "network.predictor.subresource-degradation.month",
   network_predictor_subresource_degradation_month,
   network_predictor_subresource_degradation_month,
  int32_t, 25
)

ALWAYS_PREF(
  "network.predictor.subresource-degradation.year",
   network_predictor_subresource_degradation_year,
   network_predictor_subresource_degradation_year,
  int32_t, 50
)

ALWAYS_PREF(
  "network.predictor.subresource-degradation.max",
   network_predictor_subresource_degradation_max,
   network_predictor_subresource_degradation_max,
  int32_t, 100
)

ALWAYS_PREF(
  "network.predictor.prefetch-rolling-load-count",
   network_predictor_prefetch_rolling_load_count,
   network_predictor_prefetch_rolling_load_count,
  int32_t, 10
)

ALWAYS_PREF(
  "network.predictor.prefetch-min-confidence",
   network_predictor_prefetch_min_confidence,
   network_predictor_prefetch_min_confidence,
  int32_t, 100
)

ALWAYS_PREF(
  "network.predictor.preconnect-min-confidence",
   network_predictor_preconnect_min_confidence,
   network_predictor_preconnect_min_confidence,
  int32_t, 90
)

ALWAYS_PREF(
  "network.predictor.preresolve-min-confidence",
   network_predictor_preresolve_min_confidence,
   network_predictor_preresolve_min_confidence,
  int32_t, 60
)

ALWAYS_PREF(
  "network.predictor.prefetch-force-valid-for",
   network_predictor_prefetch_force_valid_for,
   network_predictor_prefetch_force_valid_for,
  int32_t, 10
)

ALWAYS_PREF(
  "network.predictor.max-resources-per-entry",
   network_predictor_max_resources_per_entry,
   network_predictor_max_resources_per_entry,
  int32_t, 100
)

ALWAYS_PREF(
  "network.predictor.max-uri-length",
   network_predictor_max_uri_length,
   network_predictor_max_uri_length,
  uint32_t, 500
)

ALWAYS_PREF(
  "network.predictor.doing-tests",
   network_predictor_doing_tests,
   network_predictor_doing_tests,
  bool, false
)

ALWAYS_PREF(
  "network.preload",
   network_preload,
   network_preload,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.process.enabled",
   network_process_enabled,
   network_process_enabled,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.send_ODA_to_content_directly",
   network_send_ODA_to_content_directly,
   network_send_ODA_to_content_directly,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.http.network_access_on_socket_process.enabled",
   network_http_network_access_on_socket_process_enabled,
   network_http_network_access_on_socket_process_enabled,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.traffic_analyzer.enabled",
   network_traffic_analyzer_enabled,
   network_traffic_analyzer_enabled,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.dns.disabled",
   network_dns_disabled,
   network_dns_disabled,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.dns.skipTRR-when-parental-control-enabled",
   network_dns_skipTRR_when_parental_control_enabled,
   network_dns_skipTRR_when_parental_control_enabled,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.dns.disablePrefetchFromHTTPS",
   network_dns_disablePrefetchFromHTTPS,
   network_dns_disablePrefetchFromHTTPS,
  bool, true
)

ALWAYS_PREF(
  "network.dns.resolver_shutdown_timeout_ms",
   network_dns_resolver_shutdown_timeout_ms,
   network_dns_resolver_shutdown_timeout_ms,
  uint32_t, 2000
)

ALWAYS_PREF(
  "network.dns.dns_query_single_label",
   network_dns_dns_query_single_label,
   network_dns_dns_query_single_label,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.dns.limit_253_chars",
   network_dns_limit_253_chars,
   network_dns_limit_253_chars,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.proxy.type",
   network_proxy_type,
   network_proxy_type,
  RelaxedAtomicUint32, 5
)

ALWAYS_PREF(
  "network.proxy.socks_remote_dns",
   network_proxy_socks_remote_dns,
   network_proxy_socks_remote_dns,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.proxy.reload_pac_delay",
   network_proxy_reload_pac_delay,
   network_proxy_reload_pac_delay,
  RelaxedAtomicUint32, 2000
)

ALWAYS_PREF(
  "network.http.tailing.enabled",
   network_http_tailing_enabled,
   network_http_tailing_enabled,
  bool, true
)

ALWAYS_PREF(
  "network.http.altsvc.proxy_checks",
   network_http_altsvc_proxy_checks,
   network_http_altsvc_proxy_checks,
  bool, true
)

ALWAYS_PREF(
  "network.http.stale_while_revalidate.enabled",
   network_http_stale_while_revalidate_enabled,
   network_http_stale_while_revalidate_enabled,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.ssl_tokens_cache_enabled",
   network_ssl_tokens_cache_enabled,
   network_ssl_tokens_cache_enabled,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.ssl_tokens_cache_capacity",
   network_ssl_tokens_cache_capacity,
   network_ssl_tokens_cache_capacity,
  RelaxedAtomicUint32, 2048
)

ALWAYS_PREF(
  "network.standard-url.max-length",
   network_standard_url_max_length,
   network_standard_url_max_length,
  RelaxedAtomicUint32, 1048576
)

ALWAYS_PREF(
  "network.trr.request_timeout_ms",
   network_trr_request_timeout_ms,
   network_trr_request_timeout_ms,
  RelaxedAtomicUint32, 1500
)

ALWAYS_PREF(
  "network.trr.request_timeout_mode_trronly_ms",
   network_trr_request_timeout_mode_trronly_ms,
   network_trr_request_timeout_mode_trronly_ms,
  RelaxedAtomicUint32, 30000
)

ALWAYS_PREF(
  "network.trr.confirmation_timeout_ms",
   network_trr_confirmation_timeout_ms,
   network_trr_confirmation_timeout_ms,
  RelaxedAtomicUint32, 6000
)

ALWAYS_PREF(
  "network.trr.confirmation_telemetry_enabled",
   network_trr_confirmation_telemetry_enabled,
   network_trr_confirmation_telemetry_enabled,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.trr.send_accept-language_headers",
   network_trr_send_accept_language_headers,
   network_trr_send_accept_language_headers,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.trr.send_empty_accept-encoding_headers",
   network_trr_send_empty_accept_encoding_headers,
   network_trr_send_empty_accept_encoding_headers,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.trr.send_user-agent_headers",
   network_trr_send_user_agent_headers,
   network_trr_send_user_agent_headers,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.trr.fetch_off_main_thread",
   network_trr_fetch_off_main_thread,
   network_trr_fetch_off_main_thread,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.trr.blocklist_cleanup_done",
   network_trr_blocklist_cleanup_done,
   network_trr_blocklist_cleanup_done,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.trr.wait-for-portal",
   network_trr_wait_for_portal,
   network_trr_wait_for_portal,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.trr.wait-for-confirmation",
   network_trr_wait_for_confirmation,
   network_trr_wait_for_confirmation,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.trr.useGET",
   network_trr_useGET,
   network_trr_useGET,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.trr.allow-rfc1918",
   network_trr_allow_rfc1918,
   network_trr_allow_rfc1918,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.trr.skip-AAAA-when-not-supported",
   network_trr_skip_AAAA_when_not_supported,
   network_trr_skip_AAAA_when_not_supported,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.trr.split_horizon_mitigations",
   network_trr_split_horizon_mitigations,
   network_trr_split_horizon_mitigations,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.trr.disable-ECS",
   network_trr_disable_ECS,
   network_trr_disable_ECS,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.trr.clear-cache-on-pref-change",
   network_trr_clear_cache_on_pref_change,
   network_trr_clear_cache_on_pref_change,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.trr.max-fails",
   network_trr_max_fails,
   network_trr_max_fails,
  RelaxedAtomicUint32, 15
)

ALWAYS_PREF(
  "network.trr.retry-timeout-ms",
   network_trr_retry_timeout_ms,
   network_trr_retry_timeout_ms,
  RelaxedAtomicUint32, 125
)

ALWAYS_PREF(
  "network.trr.fallback-on-zero-response",
   network_trr_fallback_on_zero_response,
   network_trr_fallback_on_zero_response,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.trr.exclude-etc-hosts",
   network_trr_exclude_etc_hosts,
   network_trr_exclude_etc_hosts,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.trr.odoh.enabled",
   network_trr_odoh_enabled,
   network_trr_odoh_enabled,
  RelaxedAtomicBool, false
)

NEVER_PREF("network.trr.odoh.proxy_uri", String, "")

NEVER_PREF("network.trr.odoh.target_host", String, "")

NEVER_PREF("network.trr.odoh.target_path", String, "")

ALWAYS_PREF(
  "network.notify.changed",
   network_notify_changed,
   network_notify_changed,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.notify.IPv6",
   network_notify_IPv6,
   network_notify_IPv6,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.notify.dnsSuffixList",
   network_notify_dnsSuffixList,
   network_notify_dnsSuffixList,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.notify.checkForProxies",
   network_notify_checkForProxies,
   network_notify_checkForProxies,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.notify.checkForNRPT",
   network_notify_checkForNRPT,
   network_notify_checkForNRPT,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.notify.initial_call",
   network_notify_initial_call,
   network_notify_initial_call,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.url.useDefaultURI",
   network_url_useDefaultURI,
   network_url_useDefaultURI,
  RelaxedAtomicBool, false
)

NEVER_PREF("network.socket.forcePort", String, "")

ALWAYS_PREF(
  "network.http.http3.recvBufferSize",
   network_http_http3_recvBufferSize,
   network_http_http3_recvBufferSize,
  RelaxedAtomicInt32, 1048576
)

ALWAYS_PREF(
  "network.http.http3.enable_qlog",
   network_http_http3_enable_qlog,
   network_http_http3_enable_qlog,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.http.http3.backup_timer_delay",
   network_http_http3_backup_timer_delay,
   network_http_http3_backup_timer_delay,
  RelaxedAtomicUint32, 100
)

ALWAYS_PREF(
  "network.dns.upgrade_with_https_rr",
   network_dns_upgrade_with_https_rr,
   network_dns_upgrade_with_https_rr,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.dns.use_https_rr_as_altsvc",
   network_dns_use_https_rr_as_altsvc,
   network_dns_use_https_rr_as_altsvc,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.connectivity-service.nat64-check",
   network_connectivity_service_nat64_check,
   network_connectivity_service_nat64_check,
  bool, true
)

NEVER_PREF("network.connectivity-service.nat64-prefix", String, "")

ALWAYS_PREF(
  "network.dns.echconfig.enabled",
   network_dns_echconfig_enabled,
   network_dns_echconfig_enabled,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.dns.echconfig.fallback_to_origin_when_all_failed",
   network_dns_echconfig_fallback_to_origin_when_all_failed,
   network_dns_echconfig_fallback_to_origin_when_all_failed,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.dns.httpssvc.reset_exclustion_list",
   network_dns_httpssvc_reset_exclustion_list,
   network_dns_httpssvc_reset_exclustion_list,
  RelaxedAtomicBool, true
)

ALWAYS_PREF(
  "network.dns.httpssvc.http3_fast_fallback_timeout",
   network_dns_httpssvc_http3_fast_fallback_timeout,
   network_dns_httpssvc_http3_fast_fallback_timeout,
  RelaxedAtomicUint32, 50
)

ALWAYS_PREF(
  "network.dns.use_https_rr_for_speculative_connection",
   network_dns_use_https_rr_for_speculative_connection,
   network_dns_use_https_rr_for_speculative_connection,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.cache.frecency_array_check_enabled",
   network_cache_frecency_array_check_enabled,
   network_cache_frecency_array_check_enabled,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.cors_preflight.allow_client_cert",
   network_cors_preflight_allow_client_cert,
   network_cors_preflight_allow_client_cert,
  RelaxedAtomicBool, false
)

ALWAYS_PREF(
  "network.jar.record_failure_reason",
   network_jar_record_failure_reason,
   network_jar_record_failure_reason,
  RelaxedAtomicBool, true
)
